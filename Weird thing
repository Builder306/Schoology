def TABLE[15][k] {
	if(73){
	x += Arya;
	Ygritte += bar()
} else {
	if(Hodor * -rule(66)){
	-TABLE[( --foo(-0.83,-foo(-COLS)) )][( bar() )]
}
}
}
var Sansa = Arya
var x = x
assert -protect(foo(( destroy(protect(( TABLE[Jon][-COLS] ),destroy(-Ygritte)),---870.354 * destroy()) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa){

}
def bar(){
	if(rule(-Hodor,81)){
	if(( TABLE[1][betray(foo(COLS,Stark),( Ygritte ))] )){
	if(Ygritte){
	x /= bar(dog / ( 21 ) / --1,-0.38);
	-98 * --83
};
	x -= ( mislead() )
} else {
	Ygritte -= -53 * -COLS / TABLE[-( bar(-Sansa,-( -ROWS + rule(Hodor) )) )][ROWS] * ( Jon );
	protect(x + 380.537);
	if(destroy(0.12,68)){
	( dog );
	y /= foo(( Jon ),COLS,( ROWS ) * destroy() + Hodor * mislead(( -TABLE[y][( -destroy() )] + mislead(32,--( TABLE[( -78 ) * -ROWS][-ROWS] ),Ygritte) ),( -1 ),( betray(40) )))
}
};
	Stark -= ROWS;
	COLS
}
}
assert ----TABLE[betray()][TABLE[-rule(betray(Hodor,( -mislead(( x * x )) ),bar(TABLE[0.74][ROWS / Hodor],--foo(COLS * foo(( destroy(-( ROWS )) ) / foo()),( -0.59 ))) - 1) + -1 - Sansa,-4 + -910.2 * dog) / -83 - betray(protect(0.16,( ( ( -TABLE[TABLE[-destroy()][ROWS]][38] ) * protect(5 - ( foo(-ROWS,( bar(x) ),foo(-protect(--Ygritte,ROWS) + COLS,ROWS)) )) ) ) / ( -Arya )),--( Arya ) + destroy() - ( COLS )) - 0.94][foo(destroy(( ( 50 ) ),( ( -betray(Sansa,( -( --y * TABLE[--foo(( ---Sansa - COLS + x * ( 21 ) ),Ygritte - Sansa)][-890.3] ) )) ) )) / ROWS)] / TABLE[( -96 )][COLS] - TABLE[Jon][foo(protect(TABLE[mislead(-420.649)][bar(COLS,-410.4)] / -0.63,rule(0.1,-0.13),( foo(TABLE[COLS][COLS],ROWS) )))]] : "What do we say to the Lord of Death?"
def foo(dog,Sansa){

}
var y = protect(Jon,( TABLE[y][x] ),( mislead(--20 * TABLE[-ROWS][( ( -COLS ) )] + -0.94,mislead(betray(bar(( -( dog ) )),( rule(-0.26 * ( y ),----210.708 / ROWS) ),COLS) * 1,( Arya ))) ))
def mislead(Stark,Hodor,y){
	x -= Stark * 0.37
}
var Jon = -0.34
def TABLE[destroy()][j] {
	( ( rule(COLS,TABLE[( Hodor - ( 0.5 ) )][( ( foo(( --TABLE[Ygritte][-( ( -0.71 ) )] ),( TABLE[Sansa][bar(rule(COLS)) * -0.28] ),Stark) ) )],-90) ) );
	( 1 )
}
assert -1 : "Winter is coming"
var Sansa = foo() + protect(-ROWS) + x
assert -15 : "Fear cuts deeper than swords."
var Arya = ROWS
def TABLE[-0.61][i] {
	y -= 28;
	0.44
}
var y = ROWS
def betray(Stark,Jon){
	if(( protect(-0.16,Ygritte) )){

};
	Arya += -( TABLE[betray(--( TABLE[TABLE[protect(--x,21,rule(destroy() / x))][bar()]][COLS] ))][1] - Hodor ) / 0.14
}
assert mislead(( Sansa )) : "What do we say to the Lord of Death?"
assert rule(foo()) : "What do we say to the Lord of Death?"
def TABLE[ROWS / ( Jon - --1 )][k] {
	x / ( ( COLS ) ) / -0.98
}
def TABLE[0.91][k] {
	if(--( 100.853 )){
	-destroy();
	COLS;
	protect(Jon,ROWS)
} else {
	x /= y;
	TABLE[( -( betray(--1 - ROWS) ) )][-28];
	COLS
};
	x -= ( Hodor / -1 );
	1 * ( 86 - bar(-Arya) - COLS )
}
def TABLE[( -destroy() )][j] {

}
var x = y
assert -68 : "One can not simply parse himself"
var Hodor = ( bar(Ygritte) ) * 1
def TABLE[1][i] {
	protect(( protect(( ( mislead(TABLE[-bar(destroy(Jon),Hodor,( foo(TABLE[-1][x],-dog) )) + -y][-dog],TABLE[y][--700.6]) ) ),bar(),COLS - ROWS) ),70.35) + foo(ROWS);
	-dog
}
var Sansa = rule(-1) + COLS
def TABLE[( bar(-dog,mislead(( -y )) * y + 0.29 * 0.16 - TABLE[-170.991 * Hodor][Ygritte] * ( rule(foo(),( ( -dog ) / dog )) )) )][k] {
	if(-1 + COLS){
	-26;
	Arya
} else {

};
	Stark += -y;
	Sansa += TABLE[protect(( ( COLS ) * rule(0.52,COLS,( COLS * mislead(COLS - --0.22 - -1 * dog) )) - -rule() ),betray(--96 - --1))][foo(COLS)]
}
def destroy(Sansa,Sansa,Jon){

}
var dog = TABLE[TABLE[bar(bar(TABLE[foo(Arya)][49],-TABLE[bar(TABLE[--Arya / COLS][( Arya / ( -( -0.7 ) ) )])][-90])) / TABLE[foo(destroy(),rule(-56,--ROWS),betray(34))][-1 * Hodor * -ROWS + ( Ygritte )]][dog] - ( 1 / COLS )][( Ygritte )]
var dog = ( -x + ( --ROWS / protect(TABLE[1 - TABLE[-44][960.239]][-COLS] + betray(-COLS,0.06)) ) )
def TABLE[-rule()][i] {
	Ygritte /= x
}
var dog = ( TABLE[Sansa][destroy(ROWS,Sansa)] )
def TABLE[COLS][k] {
	x += dog / COLS;
	x;
	Hodor += --1
}
def TABLE[-84][i] {

}
def TABLE[( ( Stark / TABLE[ROWS][-81 / ( Arya )] ) )][i] {
	if(x){
	Stark /= ( TABLE[-35][--( -destroy() ) - ( ( TABLE[Jon][( bar(( -1 ),-COLS) ) / ( --1 - Ygritte )] + Sansa / protect(Hodor,foo(--( destroy() ))) ) )] * -39 );
	COLS
};
	( -ROWS )
}
var y = -0.64
var Jon = Stark
def destroy(x,y,y){
	if(TABLE[COLS][32]){
	if(Jon){
	if(foo(dog,COLS,COLS) + -50 + Jon){
	if(COLS){
	if(-110.6){
	y *= Hodor
} else {
	dog /= ( protect(Stark,-0.26,-39) )
};
	( 54 )
};
	Hodor /= ( ( TABLE[protect(( -54 ),( --0.89 ))][( protect(( ROWS )) )] ) / -( Arya ) )
} else {
	if(dog){
	if(betray(( foo(COLS,Arya) ),-foo(destroy(foo(),( dog ))))){
	dog *= ( bar(-Sansa + 620.0523,-Stark,COLS) );
	Hodor -= -0.51
}
} else {

}
};
	if(ROWS){
	if(-0.12){
	COLS
} else {
	Stark -= -COLS;
	x += TABLE[( mislead(dog,Hodor) )][430.5] - ROWS
};
	Arya *= TABLE[bar(COLS,TABLE[protect(TABLE[foo(-COLS,-mislead())][( -TABLE[mislead(destroy(COLS,0.24),Sansa,ROWS)][-Ygritte * ROWS] * Stark - -( bar(rule(110.82 * 1 + bar(TABLE[( ( x ) )][TABLE[destroy()][y]] * protect(),1 / -( --0.25 )) / -foo(-COLS / x,( x ))) - ( Ygritte ),-98,COLS) ) )],Jon)][ROWS],33)][-ROWS]
}
} else {
	y *= COLS;
	if(( -bar(( ( -0.88 ) ) / TABLE[-ROWS - destroy(( ROWS ),( TABLE[730.5459 - ( -1 )][-83] ))][x - TABLE[COLS][Hodor]] + dog,foo(dog)) * ROWS )){
	destroy(ROWS,Jon,COLS)
};
	if(( ( -0.32 ) )){
	x;
	if(87){
	rule(-0.47,-COLS,y) + TABLE[Arya][betray()];
	Stark;
	if(-0.24){
	if(1){

} else {
	if(TABLE[destroy(-x)][y]){
	x += rule(( -mislead(( ( x ) )) ) / ROWS,1,( destroy(betray(( ( 0.9 ) ) - -44 / ( y ) * ( Hodor ),Jon),destroy(protect(( rule(--( Ygritte ),( mislead(--77,( ( mislead() ) ) - TABLE[-890.5][( --0.18 )],Arya) )) )),34,-foo(COLS)),-0.08 * betray(20) + 81) ) + ( 38 ));
	Hodor
}
}
} else {
	x += Stark
}
} else {
	x *= ( bar(Stark,TABLE[( Stark )][350.35],protect(-1) + -COLS / ROWS) ) - -foo(bar(bar(-200.8,dog) - -0.39,80.547),betray(TABLE[--ROWS][-970.67],rule(Arya,COLS) * -mislead(( rule(Sansa) ) - ( dog ) - -0.49,x,COLS)),--0.94 / dog);
	ROWS;
	Ygritte /= foo(-Jon) + ( -mislead(COLS,( destroy(foo(mislead(0.91),( -0.05 ))) )) ) - 22
}
} else {
	y -= -COLS
}
};
	if(250.67){
	Hodor /= -Sansa;
	if(mislead(( mislead(-TABLE[-74 + ( -1 ) / -ROWS][( dog / ( ( ROWS ) ) ) + 22],-destroy(mislead(-350.99 + bar(Arya,Hodor),--Arya + ( -62 )),bar(COLS,y),-Ygritte)) ),ROWS)){
	Jon += 0.21;
	if(foo(( COLS ),destroy(betray(-betray(-rule() * destroy(rule(( TABLE[( Stark )][-betray(( x ) / ( Jon ),( 0.34 ))] ),y),0.81)))))){
	--( -destroy(dog,( COLS )) );
	( -760.353 );
	if(( Sansa )){

} else {
	-0.74 * -destroy(COLS,betray(-Jon / -32 / -foo(),ROWS,( -0.24 * -38 )));
	Arya /= destroy(( Stark )) + ( -( -COLS - -0.43 + foo(-( 68 ),COLS) ) )
}
};
	Arya /= COLS
} else {
	ROWS;
	if(TABLE[--1][-830.11]){

} else {
	( bar(TABLE[bar(( ( Jon ) ))][x] * Stark) )
}
}
} else {
	if(x){
	Jon -= Stark
};
	if(0.93 / -0.81){
	if(0.93){

}
};
	if(TABLE[0.42][TABLE[COLS][COLS]]){
	-( bar(( -0.19 ),-720.25) );
	-0.2
}
}
};
	if(rule(Ygritte,3)){
	if(( 0.46 )){

};
	y += COLS
}
}
def TABLE[COLS][j] {
	x /= TABLE[x][-destroy(Hodor,1)]
}
def TABLE[-x][i] {
	x /= ( -ROWS )
}
def TABLE[ROWS][k] {
	dog += Hodor;
	if(COLS){
	-55
}
}
def TABLE[( ( -0.61 ) )][j] {
	Sansa += -destroy(protect(foo(Arya,bar(COLS * 1,dog,ROWS))),TABLE[( 16 / ( destroy() ) )][x]) - -( ( -protect(dog,Arya,( ( 1 ) ) + -( ( --0.31 ) ) * bar()) ) )
}
assert -1 : "Winter is coming"
def mislead(dog,y){
	--COLS - --0.66;
	COLS
}
def TABLE[Ygritte][i] {
	-Stark
}
assert 0.41 * --1 : "One can not simply parse himself"
var Hodor = -0.58
var Sansa = TABLE[--TABLE[COLS][COLS]][Hodor]
def TABLE[ROWS][i] {
	Ygritte /= Arya
}
var Arya = Stark
def rule(x){
	x *= COLS;
	foo(Hodor,Hodor * 70.92)
}
def TABLE[protect(( TABLE[-1][COLS] / ( foo(-bar(protect(TABLE[y][( ( ROWS ) )],-44))) ) * ( ( protect(( destroy() - Jon )) * -Ygritte * y ) ) ),-67)][j] {
	Ygritte *= -( ( 0.63 ) - protect(destroy(0.82,( Arya - dog * foo(( dog )) ))) ) / bar(( Jon ),-55);
	if(( COLS )){
	Arya - -COLS
}
}
assert -( 1 ) : "What do we say to the Lord of Death?"
def TABLE[ROWS][k] {
	Sansa;
	( -19 );
	Ygritte -= y
}
assert ROWS - TABLE[mislead(-x,-TABLE[-57][-( COLS )],protect(( -TABLE[31][( --Sansa )] ),( 11 ),-43)) - ROWS][y] : "One can not simply parse himself"
var Sansa = COLS
var Stark = COLS
def foo(Arya,Stark){
	-35;
	if(( Stark )){
	Ygritte += destroy(foo(y + ( Sansa )));
	if(ROWS){
	Arya /= Hodor / -42;
	if(-Stark){
	y += 1
} else {

}
} else {
	74 * --79;
	dog -= -ROWS;
	dog /= protect(( ( --70 ) ),ROWS / rule(( TABLE[mislead()][( dog )] ),-1,bar(-foo(TABLE[71 * Hodor][Ygritte]))),y) - Stark
}
} else {
	if(87){
	rule(bar(-0.85),Hodor,COLS)
} else {

}
}
}
var Jon = y
def TABLE[x][j] {
	COLS - -90.1 - dog
}
var Sansa = Jon * ( -x )
assert Ygritte : "One can not simply parse himself"
var Jon = mislead(protect(),-Stark)
var Jon = betray(89,( ( ( ( -protect(TABLE[55][0.52 + rule(( -1 )) / -0.16] + Jon,ROWS) ) ) ) ),-Jon)
var Stark = COLS
assert ( ( 0.87 ) ) : "One can not simply parse himself"
def rule(Ygritte){
	if(-COLS){
	---( -1 ) * foo(foo(protect(( -930.2437 ),-Arya * foo() * --0.46 + ( ( ( -bar(( mislead(x) ),Hodor) ) ) - rule() * -dog )) + -15 * protect(destroy(( ( -rule(--betray(betray(Jon) * mislead(-1,-28),-foo()),bar(),( -Arya / rule(destroy(foo(),( -( -bar(0.1 + dog + -Hodor,Sansa) ) ),47)) - --y )) ) ) * foo() * 0.21),Arya * destroy(y,( ROWS )) / -570.62),( ROWS ) - dog)) - x;
	protect(Stark)
};
	54
}
def bar(dog){
	-16
}
var Arya = ( -ROWS + Jon - TABLE[( -betray(--( mislead(TABLE[( TABLE[TABLE[( ROWS )][foo(0.48) * TABLE[1][Hodor / -TABLE[destroy()][protect(dog)]]]][foo()] )][0.06]) ),Hodor) )][-0.88] / Ygritte ) + -( COLS / ( -( -62 ) ) )
assert bar(Jon,mislead(Jon,( ROWS ))) - ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert rule(-Sansa + ROWS,( Sansa )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = 57
def foo(x,Arya){
	if(-y / ( bar(--950.689 / -35 + ROWS + ( COLS - -1 + ROWS + destroy(destroy() / -60,COLS) * ( -48 - ( COLS ) ) )) ) - TABLE[bar(ROWS,x)][( y )]){
	---y;
	Jon -= --( -( COLS ) );
	if(-Stark){
	260.85;
	x;
	--0.57 - ( betray(-62 + -76,mislead(COLS) / -Ygritte) )
}
};
	Hodor /= -Sansa
}
var Jon = ( -0.04 )
assert ( 90.39 * -x ) : "One can not simply parse himself"
var Jon = ( -( Hodor ) / protect(Jon,rule(Jon,-( --300.2509 * TABLE[mislead(TABLE[--79][320.817] + ( foo() ),Jon,TABLE[( bar(y,foo(-Sansa) / destroy(ROWS)) )][-Ygritte])][--0.85] + Arya - COLS * 0.09 ))) )
var Ygritte = -bar(ROWS + TABLE[betray()][bar(-0.68)] - ( ( protect(bar()) ) ),TABLE[( ( -ROWS ) ) * bar(-0.59,dog) * -0.76][Ygritte])
assert protect(-y,COLS,Jon - 0.46 / -22) : "Fear cuts deeper than swords."
var Stark = bar(destroy(COLS,0.11,--1))
def mislead(){
	if(TABLE[Ygritte][( Jon )]){

} else {
	if(( rule(COLS,TABLE[y][ROWS * -Hodor * Stark / mislead(-46) - ( ( Ygritte ) )],1) )){
	dog -= -1
};
	if(mislead(rule(( ROWS ),foo()))){
	if(-36){
	-COLS
} else {
	destroy(( dog ),( x ));
	-TABLE[( ( ROWS * protect(-( ROWS + TABLE[66][( ( ( betray(COLS) ) ) )] ),Sansa,betray(COLS)) ) )][( 0.35 )]
};
	( 43 )
} else {
	if(( ROWS )){
	mislead()
} else {
	Jon /= -520.29
}
};
	if(Stark){

}
}
}
def mislead(){
	if(( Stark )){

}
}
assert TABLE[--( -betray(31,protect(( COLS / rule() ),ROWS)) )][COLS] : "Winter is coming"
assert ( ROWS ) : "Winter is coming"
assert -26 : "Fear cuts deeper than swords."
assert ( ( ROWS ) ) : "Winter is coming"
var Hodor = Hodor
def TABLE[COLS][j] {
	if(-94){
	if(-destroy(COLS,bar(),ROWS) - -( ( -bar(Jon,Jon,-0.85) ) / betray(-0.7,-1) + rule(Arya) * Stark )){
	Jon -= ROWS + destroy(-0.33 + Hodor * ROWS,( Hodor ))
} else {
	if(y){
	COLS;
	Stark += y
} else {
	if(Arya){
	48;
	Ygritte
} else {
	if(--32){
	if(-( --Sansa ) - ( 3 ) * ROWS / -0.37){
	ROWS;
	if(COLS){

} else {
	( 1 )
}
} else {
	-1
};
	dog *= Jon / rule(( Stark )) * foo(rule(-0.84 + 510.279,Hodor),protect() + -( 42 ) / x) - x - COLS
}
};
	Arya -= -Hodor / ROWS
};
	if(x){
	y *= COLS;
	-COLS
}
};
	y /= -1
}
}
def TABLE[ROWS][j] {

}
assert Arya : "Winter is coming"
def mislead(x){
	rule()
}
def TABLE[0.08][k] {
	Ygritte *= ( ( dog ) - 96 )
}
var y = bar(-0.05,-x) * -59
assert ROWS * -0.46 : "Nothing burns like the cold."
var Ygritte = foo(Sansa)
var Jon = -Stark
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -0.84
def TABLE[( --810.6778 )][j] {
	Sansa *= mislead(8,62,1);
	Arya /= ( -0.44 );
	Stark /= foo(COLS)
}
def destroy(){
	if(-x){

};
	--Ygritte - protect(-Stark,dog,Stark - TABLE[TABLE[-1][--ROWS]][0.37] - -40.218 / TABLE[Hodor][rule(( dog ))] / -x)
}
def TABLE[Hodor][i] {
	foo(ROWS);
	if(Jon){
	Jon -= ( -0.83 );
	-Jon;
	if(bar(( 1 ),x) - y){
	betray(-0.36)
}
} else {
	TABLE[-Sansa - rule(bar(ROWS,ROWS,Jon + -( -( -destroy() ) ) + -99),0.47 - rule(Sansa)) * -1][Ygritte / ( -170.42 )];
	y *= TABLE[rule(rule(TABLE[y][x]),( Sansa ))][-( -TABLE[0.66][-rule()] ) / ROWS]
}
}
var Arya = ROWS + ROWS - mislead(y)
def destroy(Hodor){

}
def foo(Ygritte,dog){
	mislead(( 1 ) + betray(COLS + TABLE[1][-77],COLS),bar());
	-0.48;
	x
}
var Stark = ( -ROWS )
def rule(Sansa,dog){

}
def TABLE[y][i] {
	-( 73 )
}
def TABLE[140.15][i] {

}
var Arya = Stark
assert rule(TABLE[mislead(-Jon + -rule(rule(),destroy(),( ( Jon ) )) + -65,Stark)][-960.887],( ( foo(-1,Stark) ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon){

}
assert ( -Sansa ) / -660.08 * TABLE[-1][-Hodor * COLS] : "Nothing burns like the cold."
var Arya = rule(-95 * Sansa) - ( --bar(x) ) / ( TABLE[rule(dog,COLS)][( ( 0.05 ) * -1 )] )
assert -560.07 + --0.08 - 0.06 / foo(-0.07) : "Nothing burns like the cold."
var x = -COLS
def betray(Stark,Sansa){
	destroy(protect())
}
assert 940.3 : "What do we say to the Lord of Death?"
assert bar(( 560.431 ) + -TABLE[25][TABLE[COLS][-COLS] * rule(-COLS) * -66]) : "Winter is coming"
def TABLE[-0.5][j] {
	y *= Sansa
}
def betray(Jon){
	y -= ( ( x ) + 0.76 );
	if(( Stark / mislead(Arya,-0.09 + -COLS) )){
	Jon /= ROWS;
	COLS
} else {
	if(foo(-47,-( --73 - bar(-0.1,-( Ygritte )) / 0.84 ))){
	-( protect(1,rule(1 - destroy(COLS,-y) + -( -0.63 ),TABLE[foo(-y / COLS / -0.88,Stark)][protect(-x)]),TABLE[-( ( ---0.83 - Stark ) ) + betray(-Arya,betray(---0.56 - ROWS,( ROWS ))) - ( dog )][Hodor]) ) * ROWS + -( ( foo(( COLS ),betray(protect(TABLE[Sansa][COLS]) + ( 1 ) - --( 23 ) * -1)) ) ) + foo(-Hodor);
	if(( 0.62 ) * Sansa){
	if(( ROWS )){
	dog;
	if(destroy(-0.54,protect(( 35 ),betray(rule(-46 / Stark / -1 / -( 87 ),-24))) - destroy(Hodor,-x),( -( rule(0.82 / 0.58 / -ROWS,ROWS,--ROWS * -0.74) ) ) - bar(-protect(Stark,ROWS,-mislead(bar(),dog,COLS)),( destroy(-700.001) - ( 1 ) ) + ROWS + dog) - bar(ROWS))){
	if(-23){
	Jon *= --0.98;
	Sansa *= COLS;
	if(betray(-y)){
	Stark += foo(Arya) - destroy(( dog ) + -x,COLS,COLS)
} else {

}
} else {
	if(( betray(( ( ( rule(---1 / Stark,( -x ),-( -0.53 )) ) ) ) * -TABLE[ROWS][Jon] / -Stark,Ygritte + -COLS) )){
	x += dog;
	Stark *= Ygritte
} else {
	if(ROWS){
	Ygritte -= TABLE[Sansa][protect(TABLE[( foo(destroy(-800.409,Hodor - -COLS),( -( ROWS - rule(mislead(betray(ROWS,Jon),ROWS,-Jon + Stark) + -bar(--30)) + -0.08 ) ),foo()) ) * ROWS][COLS])];
	x /= ( COLS - Arya * Stark )
} else {
	dog /= COLS;
	dog *= -TABLE[foo(-1)][( Stark )] * -( -Hodor / ( TABLE[foo(( x ))][96] ) )
}
};
	if(45){
	--64
}
}
};
	480.328
} else {
	if(( x )){

};
	if(ROWS){

} else {
	if(TABLE[TABLE[100][ROWS - Arya]][ROWS]){
	COLS;
	( ROWS )
} else {
	Hodor += ( -COLS );
	-y;
	if(-dog){
	dog += Hodor;
	Sansa -= protect();
	Ygritte *= foo(protect(mislead(bar(mislead(Jon),-destroy(Stark - -Sansa))) * mislead(--82 / 94 - ROWS * --0.02 + Jon,dog) * dog),Jon)
} else {
	x /= 810.341
}
}
}
}
}
} else {
	dog -= TABLE[-21][destroy(ROWS)]
};
	y *= Jon
};
	Sansa
}
var Hodor = ( rule(-protect(betray(ROWS))) * COLS / 93 * -( 780.32 ) - -0.39 )
def TABLE[300.42][k] {
	Sansa -= -ROWS;
	y -= COLS
}
def destroy(){
	if(( Arya )){
	Sansa *= destroy(TABLE[COLS][Stark]);
	if(dog){
	30
};
	x += betray(Jon,( ROWS ) / x / ( Arya ) / dog)
} else {
	if(-bar(TABLE[Ygritte][48 + Jon - ROWS] * y,( ( 81 ) ))){
	Arya;
	if(-Jon){
	( Jon )
} else {
	Arya += ROWS;
	Stark -= COLS;
	x += --0.28
};
	Hodor += -Ygritte - --470.198
}
}
}
def bar(){
	Hodor *= COLS;
	-( -bar() / TABLE[-1][COLS] )
}
assert ( TABLE[( -86 ) + x / ROWS - -840.677][Stark] ) : "One can not simply parse himself"
assert -930.79 : "What do we say to the Lord of Death?"
def rule(){
	if(Hodor){

};
	if(1){
	COLS
}
}
def mislead(Ygritte,dog,Hodor){
	if(-0.08){
	ROWS;
	if(( ( -1 * COLS ) )){
	Ygritte -= --1 + Stark
} else {

}
} else {

}
}
assert 0.02 : "Nothing burns like the cold."
assert -44 : "Winter is coming"
var Jon = -1
def TABLE[Jon + TABLE[Stark][COLS]][i] {
	Arya -= -x
}
def TABLE[y / Arya][i] {
	if(COLS){
	if(( protect(-500.313) )){

};
	bar(( TABLE[--0.31][dog] ),TABLE[destroy() + 590.79][x / Ygritte],690.3)
} else {
	TABLE[TABLE[bar(foo(protect(),COLS))][-1]][COLS]
};
	Stark *= ( rule(-0.84 - -90.416,foo()) );
	Sansa += --Hodor
}
var Hodor = ( betray() )
assert --( 66 * Hodor ) : "Winter is coming"
assert -( mislead() ) * -y / -100.39 / 0.84 : "Nothing burns like the cold."
def TABLE[y][i] {
	Stark + TABLE[-COLS][( ( betray(750.05,TABLE[( Hodor )][-COLS / -53]) ) ) / ROWS] * ROWS * ( COLS * ( COLS ) / betray(destroy(--910.227,COLS,-1)) + 1 )
}
def TABLE[y][i] {
	Sansa *= Stark
}
assert ( TABLE[( dog )][( Stark )] / mislead() ) : "One can not simply parse himself"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ( Hodor )
var Stark = 2
def rule(){
	COLS;
	if(( protect(22 + -33,betray(mislead(),( Hodor )) - -( protect(3 * -Hodor + -Jon,y) ),-( --59 )) )){
	if(ROWS){
	Jon += y
};
	Hodor -= dog
} else {
	if(-350.9){
	if(TABLE[-( -betray(bar(-( Arya + 0.29 )),-( bar(( ( TABLE[( -mislead(-29) ) + protect(Hodor)][84] ) ),-dog + protect(-COLS,0.99,COLS / ( -64 )),Ygritte) ),-betray()) )][COLS / dog]){
	if(--0.22 / -y){
	if(Hodor){
	-0.92;
	Jon *= TABLE[( 98 )][y] + --1
} else {
	if(-1){
	( rule(foo(x,64)) );
	if(-( -1 )){

}
};
	( rule() );
	-( ( bar() ) ) / y
};
	-foo() / destroy(dog) + ( -0.57 + TABLE[COLS][-( -TABLE[( rule(-ROWS,( Arya ) + x) )][betray(Ygritte,ROWS)] / betray(ROWS) / ROWS + destroy(( 39 ),-0.62) + --protect(( TABLE[Sansa][COLS] + 75 ),destroy(ROWS,bar(-92,-destroy(( ( dog ) )),-Arya),--ROWS * ( betray(( 38 )) ) + ROWS)) + -bar(foo(( ( ROWS ) / Ygritte ),0.14 + Sansa),-( ROWS )) + -ROWS )] )
};
	betray(( -bar() ),ROWS);
	Arya += rule(-0.87,-ROWS,( rule(COLS * Stark) + rule(-10,Ygritte) ))
} else {
	if(Arya){
	Ygritte *= ( TABLE[-bar()][ROWS] + -COLS - -1 ) - COLS
} else {

}
};
	y -= -Stark
} else {
	Ygritte -= dog;
	Ygritte += --y
};
	--40
}
}
var y = COLS
assert Jon : "One can not simply parse himself"
def betray(Ygritte){
	TABLE[( ( betray(TABLE[Sansa][dog],32 / ROWS) ) )][protect(-rule(1,destroy(COLS)),-95)];
	if(Stark){
	98;
	if(-740.8){
	if(destroy(ROWS,( 93 ))){
	dog /= destroy(Arya);
	Ygritte -= ( -foo(( rule(TABLE[--( ROWS )][-dog] - 1) ),--0.02,Ygritte) ) / --dog;
	-COLS
};
	if(protect(Jon,--1 / ( -destroy(bar() / COLS) ) + protect())){

} else {
	Hodor += --bar(destroy(( ROWS ),COLS),ROWS) - -900.02;
	0.8
};
	Arya -= -96
} else {
	Sansa
};
	( COLS )
} else {
	Sansa /= ROWS;
	if(TABLE[TABLE[destroy(dog,-TABLE[( ( dog ) )][TABLE[740.6063][-Ygritte]],-COLS - 0.11)][mislead()]][Sansa + COLS / COLS]){
	y *= ( -COLS );
	Hodor *= foo() - Jon;
	if(mislead(0.6,33)){
	if(-1){

};
	x
}
} else {

};
	31
}
}
var Stark = betray(COLS,TABLE[-19][y * 890.93])
assert COLS : "Nothing burns like the cold."
def TABLE[-0.64][j] {

}
var Arya = -( ( TABLE[TABLE[-0.75][0.12]][0.05 - COLS] ) ) + Arya
var Hodor = ( x )
def TABLE[( -protect(( COLS ),betray(protect(-( ---mislead() ),0.94,( destroy(betray(),( Arya )) ))),Stark) )][i] {
	Ygritte;
	ROWS
}
assert ( COLS ) : "Nothing burns like the cold."
