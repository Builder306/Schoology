def foo(){
	Stark += 0.87;
	Sansa += destroy(ROWS,Hodor,COLS)
}
def TABLE[COLS][k] {

}
def mislead(Stark,x){
	TABLE[betray(COLS,-y) / betray(--1) * TABLE[TABLE[rule() - -( ( mislead(protect(( ( -foo(destroy(x,Sansa),( ( TABLE[y][11] * TABLE[betray(-( -( ROWS ) ) + Arya / Ygritte)][( ( bar(ROWS,ROWS) ) )] ) )) * x ) ),( -foo() - -1 ),-15 + COLS),bar(),( ( TABLE[40.79][( -Hodor )] ) )) ) ) + ( -( ( ROWS ) ) )][bar(COLS,( 0.08 ),foo())]][Hodor * mislead(betray())]][Sansa];
	Jon /= x
}
assert -48 : "What do we say to the Lord of Death?"
def TABLE[protect(-80,-betray(-x - foo(Ygritte,TABLE[-0.54 - y][protect(( -rule(--mislead(Ygritte) / destroy() + Arya) ),---370.898)]) * bar(-1,( Arya ),mislead(bar() + Stark) * ROWS + ( -COLS ) - ( TABLE[( dog )][protect(ROWS,rule(Jon),( mislead(12) ))] ) * ( foo() ))))][i] {

}
def TABLE[rule(bar(-ROWS),y,-30.5042 / -1 / Sansa / -0.89)][k] {

}
def TABLE[ROWS][j] {

}
def rule(dog,Hodor,y){
	Hodor /= -1;
	if(-TABLE[-750.3][--( ( -( -480.714 ) ) ) - -COLS - ROWS]){

} else {
	Stark += ( ( --rule(( -rule() ),ROWS) ) );
	if(-69 / --6){
	if(TABLE[Hodor][-dog]){
	Sansa /= -54
};
	Sansa /= ROWS;
	if(mislead(-COLS,42)){
	Sansa += 20
} else {

}
};
	Arya /= ( ( Hodor ) )
};
	dog /= Jon
}
var Stark = foo(ROWS,ROWS) + 1
def TABLE[-510.5][j] {
	if(( ( -1 ) )){
	96
} else {
	if(protect(( -1 )) + COLS){
	Sansa -= destroy(Jon,dog)
};
	Ygritte;
	if(-ROWS + Arya){
	Sansa += -30
}
};
	protect(COLS,52)
}
var x = ( ( -Jon ) )
def betray(Jon,Arya){
	dog *= 71;
	-rule(150.16);
	COLS
}
def destroy(Stark,Stark,Sansa){
	( Sansa );
	Arya;
	Ygritte -= -dog * 0.02 - -1
}
var Sansa = -1
def TABLE[-0.22][i] {
	if(foo(COLS * 23 + dog,x)){
	y *= -TABLE[COLS][TABLE[ROWS][Arya]]
} else {
	Jon -= Hodor;
	Stark += --TABLE[bar()][Jon];
	x *= dog
};
	-560.1585
}
def rule(dog,y,Arya){
	if(foo(390.7,x,-x)){
	Hodor
};
	-COLS / COLS;
	( Sansa )
}
assert ROWS : "Winter is coming"
def rule(Arya,Jon){
	COLS;
	dog /= COLS
}
var Stark = -0.08
assert TABLE[-bar(--TABLE[0.81][-0.08]) + ROWS][-0.9] : "Nothing burns like the cold."
def TABLE[-0.2][j] {

}
def TABLE[TABLE[--Ygritte + Stark][( TABLE[Ygritte * 0.86][destroy(( ROWS ),17,-7)] )] * -290.71][j] {
	Jon
}
def betray(Arya,Ygritte){
	if(-bar()){

}
}
def destroy(Arya,Sansa){
	-Sansa
}
var x = -1
def betray(dog,Jon){
	( TABLE[( TABLE[Arya][0.05 * foo(-TABLE[destroy(TABLE[TABLE[--74][0.4]][--TABLE[y][Stark]],1,72)][Stark],Arya) + ( 0.2 ) + -51] )][-97] - ( ROWS + TABLE[mislead()][Sansa] ) )
}
def TABLE[42][j] {
	bar(x,-TABLE[Stark][-rule() / foo(ROWS,betray(( COLS ),COLS)) * protect(TABLE[-( Stark ) / TABLE[Sansa][( Stark )]][Sansa * Hodor * ( ( TABLE[--TABLE[betray(1,-destroy(destroy(mislead(Hodor,-y / -( TABLE[foo(-foo(0.2) - -Stark + -1,( ( ( ( TABLE[0.71 * Ygritte - protect() * 160.52 / TABLE[--71 / dog + ( ROWS )][( y * --Stark ) * ( rule(320.84) )]][Jon] ) ) ) + Arya ),TABLE[-0.49][-bar(-COLS,-( ( ( mislead(( --( ROWS ) )) ) + ROWS ) )) / ( Jon / ( 51 ) )])][Hodor * -0.84] ) - -0.69 + -rule()),570.0266),TABLE[Ygritte][93]),-( -540.5 * ( TABLE[70][COLS] ) ))][ROWS - protect(-0.87)] * 67][-( ROWS )] ) )],( -0.24 ))] * ( betray(( protect(COLS) ),x,mislead(Stark)) - COLS - -1 ))
}
def TABLE[TABLE[TABLE[foo(( COLS ))][protect(( -destroy(bar(-COLS),COLS) ),COLS) / destroy(mislead(ROWS,TABLE[-rule() * -230.23][( -ROWS )]))]][TABLE[ROWS][Ygritte]]][j] {
	if(bar(-0.27)){
	if(Arya){
	y
} else {
	if(Ygritte * Sansa){
	--510.74
} else {
	-1;
	if(COLS){
	mislead(-520.689 / TABLE[( ( -( -0.95 ) ) )][bar(-0.07,foo(-0.87,Sansa))] * COLS,destroy(bar(bar(( ROWS + x ))) - mislead(-96,betray(0.57 / --53 * -1,-ROWS)),foo(bar(( ( ( 1 ) ) ),( TABLE[TABLE[( Arya )][mislead(-( -49 ) * TABLE[-COLS - TABLE[rule(COLS,-220.241,( ( --0.83 ) ) - ( -790.7325 ))][-1]][betray(-destroy(-Hodor,( COLS ),( 35 )) / COLS)])] * ( dog )][( -1 * destroy(-rule(y),ROWS + foo(-45 + -y) / TABLE[( ( -rule(--ROWS,destroy(),COLS / ( -0.35 )) ) )][-destroy(--Stark,--( ROWS - ( Jon ) ))]) )] * x * betray(-0.64) )),-ROWS * COLS / Hodor,ROWS)),( foo(foo(ROWS + bar(COLS,TABLE[COLS][-1] + Sansa * ( --Sansa ))),protect(ROWS) * ---Jon) ));
	COLS - rule(protect(( ( --ROWS ) )) * ---( ( ( -x ) ) ));
	if(x){

}
};
	Sansa /= -COLS
};
	x /= TABLE[-1][0.7] - -foo(TABLE[-0.86 + COLS][-0.84]) / 1;
	if(dog){
	if(-( ( --( 0.05 ) + protect(33,-0.82 / ( ( --210.8 * -( -TABLE[-foo(Hodor - destroy(destroy(-( ( Stark ) ),-0.84,Ygritte)) + protect(TABLE[rule(rule(( Sansa )),COLS)][Arya]) + ( destroy() ) - foo(COLS) * Jon / Stark,-160.4 - COLS)][( destroy() - Stark )] ) - destroy(mislead(-50,-ROWS) + -Sansa * Sansa + rule(( ( COLS ) ))) + protect(-19 * ( ROWS ),Stark,x) ) )) * ( ( -580.27 ) ) ) + -930.967 ) - foo(TABLE[-( Ygritte )][x])){
	Jon;
	if(protect(0,( TABLE[foo(Stark,TABLE[dog][-TABLE[Arya][( ( bar(TABLE[TABLE[( ( Stark ) )][foo(--0.88 + -79 / COLS,-220.297)]][-Stark]) ) )]]) * -68][( COLS ) - Jon] )) + TABLE[x][( TABLE[( -COLS )][-Ygritte / 14] )]){

} else {
	x += Arya;
	ROWS
}
} else {

}
} else {
	if(destroy(--( COLS ))){
	Ygritte *= -( --( TABLE[dog][Stark] ) )
}
}
}
}
}
def mislead(Hodor,Hodor){

}
def destroy(Stark){

}
def foo(Sansa){

}
def destroy(Sansa,Stark,Sansa){

}
assert -rule(Sansa) + ROWS * destroy(destroy(Stark)) : "Nothing burns like the cold."
assert rule(Jon,foo(COLS)) : "Nothing burns like the cold."
def TABLE[y][j] {

}
def bar(y){

}
var Ygritte = dog
assert ( Ygritte ) : "Fear cuts deeper than swords."
def mislead(){
	( Hodor * foo(betray(( ( x ) ) + -0.18 - 160.78)) );
	if(rule(---Arya)){
	if(80){

} else {
	if(-destroy() - destroy(-570.67)){
	if(destroy()){
	if(95){
	if(-46){
	Arya += Sansa;
	y
} else {
	76;
	( COLS );
	if(TABLE[( -0.8 )][x]){

} else {
	Arya += -Stark;
	ROWS
}
}
} else {

};
	Ygritte *= -mislead(( 86 ),COLS,0.7)
}
};
	Sansa += COLS + 82;
	protect(-0.07)
};
	dog /= ( Ygritte );
	if(TABLE[bar(480.466)][destroy(18)]){
	-COLS - Ygritte * ( Stark )
}
}
}
def TABLE[--TABLE[( TABLE[-foo(COLS)][foo(betray(-0.24 + ( -1 + Ygritte ),y),( foo(x) ) + destroy(-70),ROWS)] )][-950.9 + ( TABLE[( -ROWS )][-ROWS / COLS / COLS * COLS - protect(ROWS) - Jon + rule(( ( protect(--Hodor - COLS - COLS) ) ) - Arya)] / Jon )] / betray(y,-ROWS,( ( ( betray(-dog,( y ) - ( ( TABLE[( destroy(mislead(( ROWS ) / foo(dog),x),betray(-( ( y ) )),foo()) )][( 88 ) / 54 / ( -0.63 )] ) ),ROWS) ) ) )) + -0.57 + y][i] {
	if(( TABLE[ROWS][rule(TABLE[1][rule(destroy() / -1 + ( COLS ) * dog / -0.11 - ( COLS ),-TABLE[-0.29][-protect()]) * -ROWS + ( -destroy(300.27,-( ROWS ),Arya) ) / Hodor],-COLS - 790.27)] )){
	foo(Arya,y);
	Hodor
} else {
	y *= 0.49 / Sansa - destroy();
	-betray(COLS,-COLS + foo(dog),39) - 1;
	if(( y )){
	if(( ROWS + Ygritte )){
	if(1){
	if(-ROWS + COLS){
	if(destroy(--destroy(-1),( -( ( ROWS ) * ROWS / y ) ),mislead(betray(dog),-200.877 + Hodor / ( ( x ) / -( ( --0.58 ) ) )))){
	Sansa -= ( Sansa )
} else {
	if(Jon){
	if(mislead(--1)){
	Ygritte += ( ( -Arya ) );
	( 1 );
	dog -= --0.19 + Ygritte
} else {
	Jon += ----1
};
	TABLE[betray(-( 310.3 ),rule(protect(destroy(( COLS ))),--0.03 / ( -91 )))][protect(1)] / COLS;
	Jon += -( ( ( bar(-570.9) + COLS + dog - -0.09 - -0.07 ) + --TABLE[mislead()][0] ) )
} else {
	if(---COLS + ( -( -66 ) ) * ROWS + destroy(Stark,35) * -0.25){
	if(TABLE[Stark][TABLE[-Jon][ROWS]]){
	COLS;
	x += ROWS
} else {
	Sansa -= 0.64;
	if(( -Arya * -37 )){
	ROWS;
	if(( -Arya / -TABLE[1][60] )){
	if(protect(( 810.77 + ( 60 ) ),-350.2922)){
	Sansa /= COLS;
	Sansa /= y / ( -x + mislead(Ygritte,Stark,rule(-0.35)) * -COLS + 19 ) + TABLE[Arya][( -100 )] + ( mislead(TABLE[-5][foo()] * -Jon / -COLS,-protect(Ygritte + TABLE[TABLE[COLS * COLS][betray(ROWS,( ROWS ),--y - ROWS - destroy(-1 * dog))] * ( ( TABLE[TABLE[-1 + rule(ROWS)][TABLE[-( bar(-x) / Arya )][rule()]]][( --foo(Hodor,COLS / TABLE[( TABLE[-0.83][protect(Stark)] )][foo(--32,y,( 0.65 ))] - bar(Arya - -ROWS),Ygritte) * TABLE[betray(-( ROWS ),COLS / --Arya / bar())][foo(protect(( protect(-( TABLE[1 - COLS][TABLE[bar() - ROWS][mislead(COLS,0.3 * -( --1 ))]] ) / ( -0.25 ) - TABLE[Arya][--1],Sansa) )) - ( x ) * -0.5 - Sansa,-( Jon ) / ROWS,Jon)] - ( Sansa ) / destroy(-1,protect(--69)) )] ) )][Ygritte] * Sansa + COLS)) )
} else {
	0.69
};
	Stark *= -destroy();
	ROWS
}
}
};
	Jon /= Hodor
};
	( Sansa + ROWS )
};
	y;
	betray(x * foo(0.3,destroy(mislead(bar(x),betray(( bar(-27 - ( bar(-0.53,( COLS )) / ( Stark ) ) - mislead()) / y ),( -Stark )) / Stark),dog,1),-( bar(--0.44) ))) * ( -0.08 )
}
} else {
	if(-y){
	y *= -33 + -49;
	if(-y - ( --ROWS / COLS ) - -37 / --mislead(-0.76,Jon)){
	Jon += ( protect(( 57 ),( Arya * ( rule() + TABLE[( Hodor ) / COLS / TABLE[Arya][--Jon]][bar(4,COLS,--rule(( COLS )) / 17)] ) - dog )) )
}
} else {

}
};
	bar(-ROWS - TABLE[x][COLS],( ROWS ),0.41);
	destroy(-0.54,Hodor) * mislead(foo(Arya,foo(( -betray(-TABLE[destroy(-Ygritte)][-43],--( x ),COLS) - dog + -( ( TABLE[32][ROWS] ) ) ),ROWS)))
};
	if(( -ROWS + Jon + Hodor )){
	if(protect()){
	if(mislead(foo(bar(( rule() )),y,COLS) * Hodor + protect(0.46),Ygritte,mislead(( ---30 )))){
	if(0.76){
	Hodor -= ( --290.2654 );
	if(--Ygritte){
	x *= 1;
	Sansa -= rule(foo(ROWS,30),betray(TABLE[( -bar() )][-( Arya )],0.14 * -Arya))
} else {
	( -TABLE[mislead(x)][COLS] )
};
	Ygritte
} else {
	Sansa *= Hodor;
	if(ROWS){
	ROWS;
	if(31){

} else {

}
}
}
} else {
	protect(( ( -740.67 ) ));
	dog += ( -0.36 )
}
};
	--1
};
	--destroy(-310.65,720.896)
} else {
	( COLS + -88 );
	if(ROWS){
	TABLE[-810.12][destroy()];
	Hodor *= 1
}
}
} else {
	if(Jon){
	Ygritte *= ROWS;
	if(--82){

} else {
	-970.72;
	if(0){
	if(-19){
	--bar();
	if(bar(( ( ( 3 + --Stark ) ) * 830.41 )) * -Hodor / foo(Hodor) * 0.1){
	if(( dog * ( ROWS - ----ROWS ) ) - -rule(-( TABLE[( ( ( rule() ) / Hodor ) )][Arya] + 1 ) * ROWS,x) - 0.1){

} else {
	if(( y )){
	y /= --x / -( Ygritte )
}
};
	if(( TABLE[x][TABLE[foo()][foo(Jon,-rule(56))]] )){
	dog *= -COLS;
	if(1){
	Stark *= COLS
} else {
	y += mislead(x + TABLE[0.43][Arya],85)
};
	Arya -= -1 - protect(( ( 40 ) ),-foo(COLS,Arya)) * Hodor
} else {
	1
}
}
};
	y -= ( ( rule(-660.8) ) )
};
	if(-protect(bar(170.37,TABLE[-( Stark )][Ygritte],betray(TABLE[Jon][-y + y])),destroy(Sansa),-protect())){
	Stark += ( ROWS );
	if(-690.55){

} else {
	if(( bar(( -0.25 * 23 ),-ROWS - betray(TABLE[foo(( bar() * -COLS - TABLE[-Arya][Sansa] ),-0.78)][Arya])) )){
	Ygritte += dog;
	y -= Jon
} else {
	Jon /= -0.65
}
}
} else {
	Stark += TABLE[1][ROWS]
}
};
	Sansa -= Ygritte
};
	-89
}
}
}
var y = Hodor
assert ( -( betray(-14) ) ) : "Fear cuts deeper than swords."
var Stark = Arya
def TABLE[-980.182][i] {
	if(-ROWS){
	Ygritte /= --67
} else {
	--bar(( 66 ),( ROWS * protect(y) ) / x * y,rule(( Jon ))) - Stark / COLS;
	Jon
}
}
def destroy(Arya){
	if(-mislead(( Sansa ) - ( -mislead(-1 / -78,-COLS / ( ( protect(-betray(( -( ( -Jon ) ) ),-y,TABLE[( ( mislead(foo(0.35) + 1,Stark) ) / dog )][COLS * y - betray(rule(),Arya + ROWS)]),ROWS) ) ),( -( dog / bar(COLS - -94 * COLS,Arya) ) ) + betray(-betray())) - -rule(-1) ))){
	y /= 1;
	-7
} else {
	Ygritte -= 1 - 50
}
}
var x = -84
def mislead(Stark,Sansa){

}
assert 100 : "One can not simply parse himself"
var Hodor = ( ---38 )
def rule(y){
	1;
	( Stark )
}
def bar(Jon){

}
var Stark = foo(Ygritte,1)
var Sansa = ROWS
assert Hodor : "Winter is coming"
def mislead(Jon){
	Ygritte *= Ygritte
}
def protect(y){
	-betray();
	Arya += Hodor;
	if(-x){

}
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Jon){
	Ygritte
}
assert Sansa : "Nothing burns like the cold."
var Jon = y
def TABLE[-0.97][j] {
	Jon /= Hodor
}
def rule(Stark){
	if(-79){
	if(( ROWS )){
	if(Arya * -COLS){
	y += -44
} else {
	protect(0.7,( COLS ));
	y -= y;
	if(ROWS / ( ROWS / x )){
	if(( COLS / protect() )){
	Jon -= COLS;
	if(190.705){

}
} else {
	Ygritte += Arya
};
	if(y){

} else {
	-foo(-rule(( Hodor )));
	if(( 81 )){

} else {
	ROWS;
	if(COLS){

} else {

}
}
};
	-protect(COLS)
}
}
} else {
	Sansa += dog
};
	1
} else {
	if(bar(betray(0.95 + 1) * ---75 - -betray() * -0.08,bar(protect(betray(destroy(rule(COLS,30.666,COLS + -Hodor)),destroy(Arya)),50.1393 - protect(14,( 0.85 )),mislead(( ROWS )) - ROWS)))){
	if(0.47){
	Arya / COLS
} else {
	TABLE[foo(rule(destroy(( destroy(Hodor,COLS,betray() / 0.69) ),TABLE[Stark][ROWS],86) / ROWS))][ROWS]
}
}
};
	ROWS;
	if(1){
	Sansa - -rule(-TABLE[protect(TABLE[Stark][--550.35])][-betray(betray(Stark),-Jon,Jon)]) / bar(rule(),-260.249,-93 * -0.06 / -Hodor / ROWS);
	if(TABLE[-( TABLE[Sansa][-1] ) - ROWS][Sansa]){
	-protect(-foo(( 63 ) * -1 / -Jon + TABLE[-mislead(Stark)][bar(y + -( Arya ),mislead(TABLE[Ygritte][( ( ROWS ) )]))]))
} else {
	if(protect(Arya,-rule(rule(),( Hodor )))){
	if(( betray(0.18) )){
	if(( bar(-dog,destroy(Ygritte)) )){
	Hodor *= -430.422
}
};
	( protect(ROWS,ROWS,0.5) * Stark )
} else {
	Hodor /= Ygritte;
	if(destroy(( rule(ROWS - TABLE[TABLE[( 0.64 )][COLS]][( --( Arya * TABLE[TABLE[COLS][TABLE[Stark][( betray(COLS,destroy(( ( -0.07 ) )),--85) / COLS )]]][-( -1 - TABLE[rule(( ( ( 41 - ROWS ) ) ))][-( Sansa * Jon )] )] ) )]) ))){
	( Jon / Arya );
	( ( -4 ) + TABLE[Sansa][-0.99] * ROWS );
	if(--y){
	x -= protect(ROWS) * ( TABLE[rule()][( dog )] );
	if(0.85 - betray(foo()) - Ygritte){
	Arya -= protect(COLS,--protect(--24,TABLE[( ( -1 ) )][y]) - COLS + -570.9 + ( protect(destroy()) ) * ( TABLE[TABLE[-0.21 - dog * ( 41 )][0.37] - protect(betray(-bar(x)))][-ROWS] * COLS / 8 / -TABLE[Arya][COLS] ) * Ygritte) * ( -( ( ( COLS ) ) ) )
} else {
	if(Ygritte){

};
	y += ( x * 0.22 );
	COLS - Stark
}
} else {
	Ygritte /= --41;
	if(TABLE[y][-0.83]){
	dog + 0.7
} else {
	Sansa += ( rule(COLS) )
}
}
} else {
	TABLE[1][-( -protect(Sansa,--0.71 + destroy(-0.79,-( TABLE[-COLS][Arya] ),-1)) ) - 11];
	rule(COLS,foo())
}
};
	Arya -= destroy();
	Jon -= TABLE[y][TABLE[Stark][TABLE[-1][( dog )]]] - -x
}
} else {
	Hodor += -rule(-protect(COLS,y))
}
}
var x = TABLE[-x * TABLE[( 50 )][0.42] + Hodor / COLS][-TABLE[rule(-COLS,TABLE[ROWS][dog],-50)][1]]
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -ROWS + ROWS
var Stark = ( mislead() )
var Stark = -bar(betray(ROWS),170.111) / Sansa
var Jon = betray()
def rule(dog){

}
def bar(Jon){
	-1;
	Arya /= -dog
}
assert TABLE[-mislead(-Sansa,Sansa / Sansa)][Stark] : "Winter is coming"
def TABLE[( ( Ygritte ) )][k] {
	if(TABLE[( ( protect() ) )][( ROWS ) * TABLE[ROWS][600.379 * ( Stark ) + -67 + Arya * ( y )] - -betray() - destroy()]){
	ROWS
};
	foo();
	foo(x)
}
def rule(){
	if(Stark){
	mislead(( bar(Hodor,ROWS) ) + -TABLE[( ( rule(--46) ) )][( -( 0.91 + ( 1 ) ) )] / bar(-x,TABLE[( -COLS * ( destroy(-( -COLS / COLS / --ROWS / dog ),y) ) ) + ROWS][-( foo(bar(-dog,0.5,TABLE[TABLE[ROWS][-ROWS]][---1]),Stark) ) * 51]));
	Ygritte += ROWS
} else {

}
}
var dog = mislead(COLS,--85 * ( Ygritte ))
def TABLE[( foo() )][k] {
	if(y){
	x
};
	Jon -= rule(19 / dog,TABLE[( COLS - ROWS )][( ( rule(y,-ROWS) ) )])
}
var Sansa = y
var x = COLS + ( ( -rule(TABLE[ROWS][foo(Hodor,0.45 * --0.21 / ROWS) - mislead(-450.321) / --880.294],--0.06) * -1 ) ) * -55
var Arya = protect()
def TABLE[x + ( ROWS )][k] {
	Stark -= ROWS;
	ROWS;
	TABLE[COLS][dog]
}
var Sansa = ( -TABLE[Arya * y][dog] / TABLE[( -10 )][TABLE[62][Jon]] / betray() )
def destroy(x){
	y /= Stark + betray(-89);
	if(TABLE[bar(Jon,( y ))][-450.6 - 58 / ( bar() ) * TABLE[-Arya][protect()]]){
	if(Ygritte){
	( 0.41 );
	Ygritte *= TABLE[-betray(-bar(COLS),Ygritte)][0.8]
}
} else {
	Stark += -foo(foo(Jon / Arya,ROWS) / -( ( y ) ));
	Stark -= ( ( ( rule(-0.81,Hodor) + ( TABLE[1 - mislead(protect(( -34 ),Ygritte,x))][ROWS * foo(-bar(betray(59,--COLS + bar(ROWS,( protect(-0.57,TABLE[TABLE[x][( -betray(bar(-( bar(( 1 - ( ( -ROWS * betray(-( ( TABLE[--25][Sansa] + y ) - ( TABLE[( TABLE[0.91][0.17] + ( COLS ) )][Jon] ) ),-Sansa,( ( COLS ) )) + -470.4 ) ) )) ),Sansa),-bar(Arya,-0.18 - ---68),foo(COLS) + Stark + 0.37 * -5) )]][-COLS / TABLE[rule(x)][( ( rule(dog) - --0.59 ) )] * 64 - ( ( COLS ) ) - foo(-0.28)],TABLE[ROWS][-30.05]) )),protect(-0.67,y,----930.69 / Ygritte * ROWS - -( Ygritte ))),-29))] ) ) ) - Hodor )
};
	-mislead(foo())
}
var Hodor = ( --( rule(COLS,betray(( TABLE[mislead(mislead(-0.31,dog,COLS),Arya,1)][bar()] ) / rule(TABLE[Ygritte][( ( -COLS ) + ( ( ( ( TABLE[19 - ( -1 + betray(( ( ( COLS ) ) ),-22) / -1 + -ROWS - COLS )][COLS] ) ) / ( ROWS ) ) ) * foo(( 140.006 )) )],ROWS,mislead(COLS,-81)),( ROWS - Arya )) + ( -70 ) + Ygritte) ) )
assert ( y ) : "What do we say to the Lord of Death?"
def TABLE[-1][k] {
	if(--Ygritte){
	if(Hodor){
	-( dog )
} else {
	if(-110.75){
	betray(bar(Arya))
}
};
	Jon *= ( TABLE[x][( -810.0249 )] )
} else {
	TABLE[1][-110.1];
	mislead(destroy(( -30 )),x)
};
	Hodor;
	TABLE[90.124][ROWS]
}
assert ( 30 ) * bar(Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -64
assert 380.7948 : "What do we say to the Lord of Death?"
var Ygritte = -13
var Stark = Sansa
var Ygritte = ( ( Sansa ) )
assert x : "Fear cuts deeper than swords."
assert ROWS : "Winter is coming"
assert -ROWS + 200.404 : "What do we say to the Lord of Death?"
assert -( COLS + 0.54 ) : "What do we say to the Lord of Death?"
def betray(y,y){
	if(ROWS){

};
	dog -= -1
}
def betray(y){
	dog -= --betray(ROWS,bar() - Stark,( -96 ))
}
assert ROWS : "One can not simply parse himself"
assert Jon : "What do we say to the Lord of Death?"
def TABLE[Hodor][i] {
	bar(rule(( foo(dog,( dog )) - ROWS ),foo(COLS,( ( rule(COLS / -67) ) ))),destroy(( 57 ),84 * TABLE[( Sansa - 1 * 0.53 * rule(COLS,Stark,( ROWS ) / ( -bar(64) )) * ( -0.08 ) )][-ROWS])) - ( ( -54 ) )
}
def destroy(y,dog){
	if(y){
	-0.6 / ROWS;
	Hodor *= ( 72 );
	Jon *= -( mislead() )
};
	Jon += ( -20 )
}
def rule(dog){
	dog -= Ygritte / ROWS / betray()
}
def TABLE[ROWS][i] {
	--( y );
	if(( TABLE[betray()][TABLE[( ( Stark ) )][--y]] * ( -57 / destroy() ) - Arya )){
	Jon -= Arya;
	Jon -= -350.7 * Jon;
	-rule(dog,( TABLE[( ( ( -betray(83,TABLE[dog][-56]) ) ) ) / ( ( ROWS ) + Sansa )][-Stark] ),TABLE[210.39][foo()])
} else {
	x -= -960.33
}
}
def TABLE[( -1 )][i] {

}
assert ROWS : "Winter is coming"
def protect(dog){
	rule(Ygritte,97);
	Sansa += dog
}
def TABLE[-0.12][i] {
	bar(destroy(COLS,( ( COLS ) ),-COLS * -1 + ( ( TABLE[-0.81][ROWS] ) ) + ( 66 )));
	if(protect(( -rule(-Stark + ROWS * 1 * y / mislead(( mislead(Hodor,TABLE[380.199][betray(ROWS)],( Stark )) )) / destroy(foo(mislead(protect(Jon)))) + protect(),betray(ROWS)) )) * ROWS){
	12;
	if(( -Ygritte * -64 ) / TABLE[-70.451][TABLE[ROWS][15]]){
	Hodor += ( -1 )
}
}
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(y,x){
	if(-foo()){

};
	Arya += -0.89
}
def bar(Stark,x){
	if(( ( -0.42 ) ) + -TABLE[-Hodor][-1]){
	if(-750.851){
	if(Sansa){

};
	if(foo(( -0.48 + -TABLE[TABLE[-x + bar(Arya,y,( Sansa + Ygritte ))][( -Arya )]][x] ),COLS,0.55)){
	Hodor /= Stark
};
	y *= betray(( -1 ) * ROWS) * rule(-( -810.5 )) - ROWS + ( ( ROWS * Hodor ) )
};
	-----COLS + ( 1 ) / COLS
} else {
	if(-1){
	Sansa /= Stark;
	Sansa += ( TABLE[-ROWS * ( -destroy(( Stark ),COLS) )][( -Ygritte * ( COLS ) )] );
	( -0.81 )
} else {
	Stark;
	Ygritte += TABLE[0.6][( ( COLS ) - -( COLS - ( betray(betray(ROWS,mislead(--50),Ygritte - dog),destroy(foo(Jon / TABLE[TABLE[TABLE[Ygritte][Hodor]][ROWS]][-80 * Stark] + ( 51 ))),foo(-82)) ) + -( dog ) ) )];
	( -94 )
};
	if(bar(( protect(destroy(TABLE[( --Arya * y )][( 210.914 - Hodor )]) * mislead(0.49,-Ygritte,-foo(TABLE[Arya][COLS],dog)),Ygritte + Arya,-78) ),( -( Ygritte ) ),-0.88) - 54){
	Arya;
	if(rule(x)){
	Arya *= 690.79
};
	Jon -= rule()
};
	-85
};
	if(dog){
	Jon -= x;
	x *= Jon
} else {
	Sansa -= x
}
}
def mislead(Arya){
	if(Hodor){
	if(-1){

} else {
	if(( TABLE[TABLE[-protect(COLS,COLS)][destroy(Sansa)] * 0.49][-protect(foo(-ROWS))] )){
	if(Jon){
	Ygritte -= Jon;
	Jon -= Sansa;
	Jon
}
};
	x *= Sansa
};
	if(mislead()){
	TABLE[COLS][810.233]
} else {
	dog += Stark;
	-88;
	Hodor
}
};
	----destroy(( COLS ) / ( rule(0.86,x) ),-0.18)
}
var Ygritte = mislead(( -betray(-foo(-mislead(rule(rule(),rule(y - TABLE[betray(( destroy(TABLE[-Stark / ( -86 - Sansa ) * COLS + Ygritte / TABLE[ROWS][17]][ROWS]) ),0.97)][-betray(( ROWS ),ROWS,1) / -destroy(0.59) - ( TABLE[-41][--x] * TABLE[--TABLE[( protect(1,mislead(-53,--35)) )][-0.65] / y][( -230.12 )] )]))) / ( foo(y,-0.17) ) * -TABLE[ROWS][20.15] + COLS / -1 - ( ( -0.94 ) * ( ROWS / ROWS ) ) - 1,( 0.46 ),( -88 )) / 86) ) / rule(-rule(--1) / mislead(Arya,Jon,ROWS),-0.27))
def mislead(Sansa,Ygritte){

}
def TABLE[Arya][i] {
	if(TABLE[-0.43][-y]){
	if(-( ( -bar(-0.17) ) * dog * ( 540.8 - TABLE[TABLE[-ROWS][betray()]][( -rule(( 0 ) - ( Ygritte + 1 ),660.006 / 27) )] ) )){
	bar(-( ( COLS ) ),90)
}
};
	destroy(( -29 ),( dog ))
}
assert foo() : "Winter is coming"
def protect(Stark,dog,Hodor){
	if(dog){
	Sansa /= foo(-1 * -foo(-43,88) * -protect(--91,-1) * dog / ( ROWS ),( ( bar(TABLE[Stark][( -0.77 )]) ) ));
	Arya += -foo(( 1 ))
}
}
var Ygritte = destroy(( destroy(ROWS,--( ( -Arya ) ) - --y,-( ROWS )) ))
def mislead(dog,x){
	-93
}
assert 84 : "One can not simply parse himself"
def mislead(){
	y /= 1;
	COLS
}
def foo(){
	if(-1 / -1){

}
}
assert y : "Fear cuts deeper than swords."
def TABLE[-1][j] {
	( bar(COLS,( ( 1 ) ),( -0.52 )) )
}
def mislead(Hodor,Arya){

}
var dog = Hodor
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = protect(TABLE[rule(protect(( foo(-protect(COLS)) )))][dog - ROWS * destroy(( 0.84 - ( -Ygritte + TABLE[--rule(-( bar(mislead(( Arya ),-( destroy(ROWS,( --betray(Jon) * protect(Sansa * COLS,-87) )) ) / mislead(Sansa,Stark))) ),-81) * Arya][Ygritte + -protect(betray(betray(-980.57 + 1 - Arya) - mislead(protect(Ygritte,1),-37),-Arya,COLS / -TABLE[( COLS * rule(--( Arya ),ROWS) )][-52] + bar(y)) / TABLE[---640.6 + 0.89 * ( foo(Hodor) )][-38 + -0.06])] ) ),bar(-TABLE[ROWS][dog],13,-Hodor))])
def betray(Hodor){
	if(46){
	-( -Arya / ROWS )
};
	if(x){
	x -= COLS;
	Arya += --( protect(foo()) - dog );
	if(Ygritte - COLS / TABLE[COLS][1] * ( -( ROWS ) )){
	x /= dog;
	Ygritte -= TABLE[rule(( -0.16 ),ROWS)][--1 - COLS + 0.4 - -Arya + -27]
} else {
	y -= bar(destroy(ROWS,( 79 + ---TABLE[--( ( -mislead() ) )][32] - 0.7 - -59 / ROWS / foo(-( betray(Sansa,destroy(ROWS)) ) * x,foo(-1,Sansa,--Jon * rule(-bar()) + ( -19 )),( ROWS )) * bar() / ( -3 ) + Sansa ) - ( protect(protect(Hodor),( -bar(COLS - destroy(TABLE[-( -rule() - mislead(Jon) - ( protect(Ygritte,-y) ) )][x]) * -rule(-ROWS),-92,Arya) )) )),-betray())
}
} else {
	Ygritte -= dog;
	( -120.5 )
}
}
def TABLE[-destroy()][j] {
	if(( mislead(Stark,-0.57) )){
	if(-dog){
	Hodor + Hodor
};
	betray(-protect(-COLS + TABLE[-1][Arya]) + TABLE[-rule(foo(Jon)) - mislead(y)][y],TABLE[Stark][-1])
}
}
def TABLE[-730.663][i] {
	Ygritte -= y;
	Arya /= ( 1 )
}
var dog = Hodor
assert Arya : "Winter is coming"
def TABLE[Ygritte][i] {
	Hodor += -Jon;
	if(( -0.95 / dog + bar(bar(rule(-TABLE[betray(( -( -ROWS ) ))][dog],COLS,bar(Stark,bar(ROWS * COLS,x),( TABLE[( y )][dog] ) - --82)),betray(1 * rule(( ( foo(-8) / ( Sansa - Jon ) ) / dog ),-TABLE[0.55][-1],-COLS / ROWS) / -0.26,-45),rule(-72,Stark))) )){
	-0.8;
	Hodor
} else {
	if(protect(Jon,TABLE[mislead(betray()) - y][( Sansa + ( Hodor ) )] - -Hodor)){
	if(Ygritte){
	dog /= 0.76
} else {
	if(39 + --TABLE[( destroy() ) - 690.5595 + Sansa - -bar(-bar(( -0.16 )) + ROWS / COLS / Hodor,( ( 54 * Hodor / betray(1) ) * dog )) - Stark][-Sansa]){
	if(-0.71){
	if(---TABLE[betray(( COLS * -0.11 + TABLE[betray(-y + ROWS,ROWS) * Jon / rule(betray(ROWS + rule(ROWS,-0.76),rule(foo(protect(),Arya,foo()))))][-0.5] ),0.7,( ( 50 ) ))][dog]){
	ROWS + Arya;
	Jon;
	if(foo()){
	0.96;
	if(-900.7882){
	if(Arya){
	( Hodor )
} else {
	dog *= -0.03 * 0.17;
	if(y){
	-( Sansa + rule(ROWS) )
} else {
	if(( Sansa )){
	if(0.77){
	Stark /= ROWS;
	x
};
	if(rule() + mislead() * Ygritte){
	if(betray(-x)){
	if(x){
	if(-11){

};
	-ROWS - Arya / --0.42;
	Arya - betray()
};
	if(( -56 )){
	Jon += -( Sansa )
};
	( 0.87 )
};
	ROWS
}
};
	if(ROWS / 240.46 * destroy()){
	( betray(( ( ROWS ) )) );
	if(( TABLE[-0.78][Stark] )){
	( TABLE[TABLE[Stark][1]][1] )
};
	x -= ( 30 )
} else {
	COLS - betray(-41,( y )) + ROWS + Ygritte;
	Arya *= ROWS;
	Hodor *= Sansa + TABLE[58][-0.54]
};
	Sansa
};
	if(foo(-ROWS)){
	y -= Jon;
	Stark -= ( 0.97 / -TABLE[betray(TABLE[protect(( rule(( rule(-COLS,foo(y)) )) ))][Ygritte],Stark,-( foo(COLS) )) - betray(bar(( y * ( -TABLE[foo(0.46,-( 16 ))][x] ) )))][-82] );
	if(-0.54 + TABLE[Stark][mislead()] * -mislead(-mislead(-Stark) * ( protect() ),( COLS )) + Hodor){
	if(--( -11 )){
	if(ROWS){
	ROWS
};
	( Jon + ( COLS + protect() ) );
	if(Stark){
	if(dog - ( COLS )){
	Hodor
};
	990.71
} else {
	y *= Stark;
	Stark - 1
}
} else {
	Ygritte += 90;
	Jon -= protect(--( mislead(-destroy(Stark,Hodor),COLS) ));
	if(-0.06){
	if(x){
	TABLE[TABLE[Ygritte][( ROWS ) - TABLE[COLS][-ROWS] * dog] + -1 * destroy(Jon,( destroy(mislead(Ygritte,COLS),Ygritte,( 55 )) ))][( Hodor )];
	Ygritte -= dog;
	dog -= Sansa
};
	if(-1){
	if(Ygritte){
	y -= 87;
	y *= -Jon;
	if(-0.32){
	Sansa += -1;
	Arya /= Hodor;
	if(ROWS){
	Stark;
	Hodor *= TABLE[---( 1 )][( rule(COLS,rule(( ( rule(Jon,0.5) ) ),-0.45)) )];
	( rule(-0.01) )
} else {
	( Arya )
}
}
};
	x += foo(ROWS)
} else {
	if(( Stark )){
	Stark *= Hodor;
	Sansa /= ( TABLE[( 1 )][ROWS] )
};
	Ygritte *= -Sansa
}
}
};
	x;
	protect(-0.23)
}
} else {
	if(( -( Hodor ) )){
	-COLS
} else {
	Ygritte -= ROWS;
	mislead(TABLE[-1 * y][Arya] / rule(-36,Jon / -0.53 * -( 870.077 ),--( ( COLS ) )),-89,y)
};
	y + bar() / x
}
}
}
}
};
	if(TABLE[COLS + -protect(Ygritte,COLS)][Ygritte]){

};
	dog /= 520.37
};
	if(( Stark )){
	if(COLS){

} else {
	if(-Stark){

} else {
	Ygritte -= -foo();
	Arya /= --( -x );
	if(betray(Sansa - Arya,COLS)){
	if(--340.91 * TABLE[destroy(COLS * bar() / ( bar(ROWS) ))][( -ROWS )]){
	if(protect(64)){
	foo()
};
	if(( protect(( --18 ),( Jon )) )){
	( foo(1,-0.33) / ( -dog ) - ( COLS ) * betray(COLS) - -x + foo(( ( -x - Stark ) + Hodor ),-( ( Sansa ) ) + Jon,-Hodor) ) / ( ( 0.43 ) );
	y /= y;
	Jon
} else {
	if(-TABLE[ROWS][y + TABLE[--Stark][-ROWS]] + rule(destroy(-0),-TABLE[-0.85][Hodor] - ( -0.71 ) / COLS / --530.408 + ( destroy(ROWS,( -rule(Arya) )) ) + 0.29)){
	if(dog){
	if(1){
	-0.54 + protect() - -670.35
};
	if(( Stark )){
	Hodor /= ( ROWS )
} else {
	if(Stark){
	if(-dog * betray(y,TABLE[destroy()][-rule(-0.54,COLS,-1)],-0.16)){
	160.3;
	( ( -0.74 ) ) * x
};
	betray(( 1 ))
};
	dog -= y / bar()
}
};
	betray(dog) / -1 * -0.09 + 24
} else {
	( -Jon )
}
}
};
	if(0.28){
	Ygritte /= ( dog )
} else {
	20.641 * -Sansa
}
} else {

}
};
	0.47;
	Hodor
};
	if(Stark){
	( y ) - -0.07;
	-1
} else {
	protect() - ( -betray(0.55,0.17) ) - --49;
	if(Sansa){
	Hodor + -0.12 + 42
};
	y
}
};
	if(ROWS){
	1;
	if(( betray(( TABLE[-860.037][COLS] ),( protect(x,( ( -( x ) ) )) ) / -1) )){
	-Stark / Jon;
	if(-betray()){
	betray();
	if(( Stark / -0.88 )){
	y -= --COLS;
	( ROWS )
} else {
	y *= -520.0265;
	if(betray(( Jon ))){
	protect(-20.19,1,-protect());
	17;
	if(dog){
	Jon *= ( 1 );
	if(1){
	if(( 250.352 )){
	Stark
} else {

};
	if(foo(55,( x ))){
	Jon *= dog
} else {
	if(( ( mislead(-rule()) / Hodor ) )){
	if(betray(Jon,x)){
	if(87 - foo(( -7 ) - ( -( COLS ) - -470.8 - Sansa ) + Hodor,TABLE[betray(betray(COLS,ROWS),-23) / -protect(46,( 410.0079 ))][( x )])){
	Stark;
	if(( protect(mislead(ROWS - ( y ),( betray(Ygritte / 70.22) * -TABLE[( -COLS - Jon ) + ( 0.06 )][protect(-COLS - COLS,1 * -dog)] )),---1) )){
	if(( ----49 + -Jon )){
	Stark *= ( -0.18 + TABLE[( 940.1534 )][-30] );
	Hodor *= -COLS
};
	Hodor += COLS
} else {
	mislead(dog,--Ygritte,-betray(83,( ( x ) )))
}
} else {
	if(1 * TABLE[protect(-100)][---0.67 / 65]){
	if(( -mislead() )){
	if(Hodor){
	if(0.97){
	Stark - Hodor + dog;
	betray(( Jon + dog + destroy() ),-bar(-ROWS,( Jon )),bar(Stark,---COLS / betray(dog,COLS) + betray(mislead(betray(COLS)))) - 93)
};
	-0.06 + -( destroy(ROWS,( -0.36 ) + foo(( COLS ) / -mislead(( -( -foo(( -1 ) / Ygritte * foo(),93) ) ),betray()),Arya - Stark - COLS,ROWS),-foo(x)) ) / protect(x,x);
	dog *= ( ( Arya * ( protect(-79,Sansa) ) ) - -0.07 - ( -mislead(Ygritte,protect(COLS - dog,Jon),-bar(x,protect(-1,-0.84 * Hodor,( ( mislead(Hodor) ) )),Jon)) + 730.2375 ) )
} else {
	if(dog){
	if(COLS){
	Ygritte += ( protect(-1) )
} else {
	if(-0.22){
	( foo(protect() - COLS) );
	x *= TABLE[( mislead(Hodor,( COLS ),-73) )][( COLS )]
} else {
	x /= Jon;
	Jon *= ( x ) * Hodor;
	if(rule(( dog ),rule(( --17 * ( Ygritte ) )))){

}
}
}
} else {

}
};
	dog -= 0.1
}
} else {
	if(foo(mislead(( ---protect(( Stark ),( 20 )) ),( --foo(protect(x,87,x),ROWS) ),ROWS),--Hodor)){
	if(TABLE[0.57][mislead(y)]){
	Ygritte -= -2;
	Arya -= ( ( ( ( ( -( ( betray(ROWS) + Stark ) ) * ( 0 ) ) ) ) ) );
	Sansa += betray(-Ygritte)
} else {
	Jon += y
}
};
	--COLS - -Ygritte
}
}
} else {

}
} else {
	y -= ROWS
}
}
};
	if(COLS - ROWS){

} else {
	if(TABLE[-84 + Sansa][mislead(ROWS * mislead(betray(rule(),Sansa)),-0.34)]){

};
	TABLE[0.72][--Hodor - y * Arya]
}
}
}
}
}
} else {
	ROWS;
	0.82
}
}
} else {
	-0.66 / -( betray(-( COLS )) ) - ROWS;
	if(Stark){
	if(( ROWS )){

}
}
};
	-Ygritte
}
} else {
	Sansa -= Hodor;
	Ygritte -= destroy(( y ))
};
	( -460.1519 )
};
	-( -x * ROWS ) + -mislead() * ( Arya )
}
def mislead(){
	-67
}
def TABLE[-93][j] {
	dog += -y - 0.02;
	-protect(bar(mislead(TABLE[--1 - COLS][Hodor]),rule(---COLS / 48) - --0.98))
}
var dog = foo(-( ( ROWS ) ),TABLE[Ygritte][-protect(Arya,1 * protect(-Sansa,-1),-78 / ROWS)])
assert ( -( Sansa ) / foo() ) : "Nothing burns like the cold."
var Arya = ROWS
var dog = ( ( -1 ) + -Arya )
def TABLE[-y][j] {
	x *= -83 / 0.57;
	x *= -Sansa
}
assert ( Stark ) : "Nothing burns like the cold."
assert mislead(TABLE[-0.95 * bar()][destroy(ROWS)]) : "Winter is coming"
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -0.75
def TABLE[( ( ( Arya ) ) )][k] {
	if(-1){
	Jon;
	dog *= COLS
} else {
	Stark /= ROWS
};
	( x ) / 630.752;
	if(Arya){
	y -= dog;
	0.46
}
}
def TABLE[ROWS][i] {

}
def TABLE[bar(( -ROWS ))][j] {
	Ygritte
}
def destroy(Ygritte,Stark){

}
assert protect(Stark,x,( COLS ) + COLS) * -( TABLE[( destroy() )][( ( ( TABLE[-x][rule()] ) ) )] ) : "Winter is coming"
def TABLE[TABLE[bar()][TABLE[dog][mislead(-1)] + foo(protect())] * ( -Stark + protect() - x ) * destroy(rule(1 / -41,( ( foo(25,destroy()) ) ),-destroy(y)),Stark,-dog)][j] {
	dog *= ROWS;
	x *= -Jon
}
assert TABLE[0.31][0.29] : "One can not simply parse himself"
def betray(Stark){
	ROWS
}
def rule(dog,y){
	foo(betray(( 730.54 / TABLE[( rule(Jon) )][y] ),foo()));
	Stark *= protect();
	( x )
}
def TABLE[bar(-78 / ROWS)][i] {
	Ygritte - 170.45
}
var Stark = ( ( dog ) )
var y = Stark
var Hodor = -Ygritte
var Arya = protect(8,-bar(x),dog)
var Sansa = bar(destroy(ROWS,( x / 0.86 )))
assert -foo(y * dog - 0.28 * ( y ) + 3,TABLE[( 59 )][COLS / COLS],-( ( TABLE[( --COLS )][--63] ) )) : "What do we say to the Lord of Death?"
def TABLE[-rule(-0.86,Hodor,-TABLE[--86][( -240.614 - ( -0.29 ) )])][k] {
	if(58){
	if(--120.1205 - mislead(ROWS)){
	y -= 87;
	Hodor *= ROWS
} else {

}
} else {
	-1;
	dog /= ( -0.93 ) + y - ( protect(mislead(Ygritte / bar(Sansa,( ( -y ) ),0.42)),930.89,24 / ( 540.381 )) )
}
}
assert Stark : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
assert -betray(( 0.63 ) / -920.474 * ( TABLE[-ROWS][dog - -ROWS] )) : "Fear cuts deeper than swords."
def TABLE[-0.42 / 0.28][j] {
	y /= -bar(16) * rule(-0.42,TABLE[( 26 )][Arya])
}
var Stark = ( 1 )
assert --0.63 + ( ( -0.06 ) ) / ROWS * -( protect(-( ( mislead(Hodor,----rule()) ) ),foo(COLS,Sansa,-Arya - Ygritte)) ) : "Nothing burns like the cold."
def TABLE[rule(-0.43,-ROWS * -COLS / Jon / ( ( destroy(x,-TABLE[-0.64][--mislead(( dog ) + Arya)] + --Arya) * -ROWS ) ))][i] {
	dog *= TABLE[( COLS )][Ygritte * --890.101 * x]
}
def TABLE[-betray(foo(-TABLE[Jon][( COLS + -( ( -ROWS ) ) )]),( TABLE[dog][--COLS] ))][j] {
	if(( bar(91,( -74 )) )){

} else {
	destroy(22,( -0.72 ),-bar(destroy(-250.67,-8) + ROWS * y,-0.27,-dog));
	Ygritte += destroy(x)
};
	Jon += protect(-TABLE[-0.73][-0.85 * Sansa * ( TABLE[ROWS][( Stark )] ) / -0.14] / protect(1,89 + dog));
	if(x){
	if(mislead(COLS,rule(-ROWS,-ROWS,1))){
	if(( mislead(x) - -COLS )){
	Hodor -= ( ( -ROWS + -140.2519 ) * 0.06 );
	dog /= COLS / bar() - TABLE[-470.4][Sansa + -Jon]
} else {
	Ygritte *= betray(Arya);
	Stark -= y
}
}
} else {

}
}
var Jon = 0.8
assert -TABLE[1][( 0.04 )] : "Winter is coming"
def bar(Jon,Hodor){
	7;
	-800.2
}
assert -COLS : "Fear cuts deeper than swords."
assert dog : "One can not simply parse himself"
def foo(Hodor,Sansa){
	-( bar(rule(-rule(ROWS)),( Jon )) );
	COLS - ROWS;
	Stark += ( -40 )
}
def betray(Arya,Stark,Sansa){
	ROWS
}
assert ROWS : "One can not simply parse himself"
def TABLE[mislead(COLS)][i] {
	betray(Ygritte,-36)
}
def destroy(x){
	if(foo(( Hodor ) * -0.71)){

} else {
	y -= COLS;
	-98
}
}
def mislead(){
	Sansa /= -rule(Ygritte);
	-0.18;
	-1 - 160.586
}
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -1 )][k] {
	y -= COLS + TABLE[-destroy()][-0.85] / Ygritte
}
def destroy(Ygritte){
	Stark *= ( 0.2 )
}
def betray(Jon,Ygritte){
	x -= ( -( -( -90 ) ) * --Ygritte );
	mislead(x + TABLE[ROWS][COLS + foo(( 710.719 * -Sansa ),rule(Stark,foo(protect(Jon,COLS,TABLE[-87][bar(-0.72,Stark) + -ROWS / protect(y - Stark)] + rule(-mislead(-98)) / ( -( Jon ) )),690.05,( TABLE[mislead(TABLE[Hodor][26],( -20.13 ) * -betray(dog,rule(60),ROWS),( Jon ) / -0.7 + foo())][-( -0.88 )] )) - x)) + y + ( ( ROWS ) ) - --ROWS],Jon / ROWS / ( ( ( ( --Hodor ) ) ) ));
	Stark += -ROWS + ( foo(bar(ROWS,-TABLE[rule()][Arya / --Arya]) + Hodor,( --( --TABLE[-Stark * ( -rule() ) + 34][( dog )] + Arya ) / ( ( --bar(TABLE[( ( -30 ) )][Hodor],mislead(COLS,Arya)) ) ) )) ) - Hodor * ( Hodor )
}
assert ( -ROWS * bar(bar(),Sansa,10 / TABLE[COLS][Stark]) - ( COLS ) ) : "Nothing burns like the cold."
def TABLE[( ( -58 ) )][i] {
	protect(-0.37,dog)
}
var Jon = ( 80.695 ) - Stark
assert 0.06 : "Winter is coming"
def TABLE[bar()][k] {
	Stark -= COLS;
	betray(Hodor,--destroy(betray(( -foo(mislead()) ),63,( -0.86 )),y))
}
var dog = -( 0.35 ) * Jon
assert ( ROWS ) : "What do we say to the Lord of Death?"
def bar(Hodor){
	Sansa += Stark + 1
}
def TABLE[-TABLE[0.79][ROWS]][j] {
	y -= -78
}
assert ( COLS ) : "One can not simply parse himself"
def rule(dog,Stark,Ygritte){
	if(-52){

} else {
	Ygritte += 87
};
	-70;
	x *= ( ROWS ) * dog / TABLE[Ygritte][-betray(-ROWS,destroy(0.37,-76),-ROWS)]
}
def betray(x){
	( -380.38 )
}
def foo(Sansa,x,dog){
	Hodor -= ( foo(TABLE[COLS][TABLE[Ygritte][-1]],-Ygritte) );
	if(betray(-TABLE[y][Hodor],( mislead() ))){
	-0.98;
	Arya
}
}
assert --betray(ROWS) : "What do we say to the Lord of Death?"
def TABLE[( TABLE[COLS][COLS] )][k] {

}
def foo(){
	Arya *= -rule(foo(ROWS,Arya,( -Sansa - dog )))
}
def protect(Arya,x){
	Ygritte += Ygritte
}
var y = rule(31,-16 / betray())
def TABLE[betray(betray(Sansa + Hodor / -bar(-TABLE[Hodor][-610.99])),x)][i] {
	Sansa /= -0.97;
	Sansa -= mislead(-bar(),rule(-0.82,-24,TABLE[protect(( bar(Hodor,Stark) ),Sansa + 0 - 0.35) * ( TABLE[( COLS )][-1] )][-11] * ( -TABLE[foo(ROWS)][dog] + COLS - ( ROWS ) - ( --bar(TABLE[ROWS / protect() - 1][x],mislead()) ) )));
	rule(TABLE[y][( dog ) * Jon])
}
assert TABLE[protect(( ( destroy() ) ))][--dog + -rule(-destroy(Sansa) - rule(Jon))] : "What do we say to the Lord of Death?"
def mislead(Sansa){
	foo(dog,bar() / Ygritte,TABLE[Hodor][-1]);
	( -Sansa )
}
def bar(x){

}
var y = y
def betray(y,Arya){

}
assert -( destroy(mislead(betray(-97,-0.78),protect(),77 - ( ( Sansa ) )) * -mislead()) ) : "One can not simply parse himself"
def TABLE[( --( -x * ( -350.647 ) ) / 0.38 )][k] {
	-ROWS - bar();
	Arya *= ROWS
}
def TABLE[-ROWS - x][k] {
	if(-COLS - -1){

};
	Sansa += -1;
	( rule(( bar(-( betray(-( ( protect(42,791,-bar(dog,COLS)) ) * rule() )) / --( -y ) )) ) / ( ( ( y ) + 44 / -COLS ) ) - Arya,( y )) ) / -( Sansa / Arya - 170.883 ) / protect(-0.69,Jon) - ( -95 * ROWS )
}
assert -COLS : "Winter is coming"
def TABLE[( -mislead(COLS * COLS,protect(TABLE[0][ROWS],rule())) )][j] {
	Hodor
}
def bar(){
	COLS / bar(-COLS + 0.82) - -0.96
}
assert x - Ygritte : "Nothing burns like the cold."
var Jon = dog
def TABLE[-foo() / TABLE[( ( ( -destroy(Arya) ) + -destroy(ROWS / COLS / destroy(dog,--0.93 * Jon) + foo(),-( -mislead() * betray(( -Ygritte ),mislead(destroy(COLS))) - TABLE[-ROWS][mislead(rule()) / ROWS / ( destroy(protect(),mislead(ROWS,0.28 * ( -Sansa ),ROWS),Stark) * ( ( Sansa ) ) )] + ( ( -1 ) ) ) / --1) ) ) / y - y][ROWS]][i] {

}
assert -TABLE[ROWS][98] : "What do we say to the Lord of Death?"
assert COLS : "One can not simply parse himself"
assert mislead(-570.257,1) : "One can not simply parse himself"
def destroy(){
	Ygritte *= bar();
	if(-( --1 )){
	betray();
	if(1){
	y;
	if(-TABLE[Ygritte][Hodor]){
	-ROWS + ( ROWS );
	if(protect(TABLE[mislead()][COLS])){
	Jon /= ( ( -ROWS + -ROWS + ROWS - -destroy(Jon - ( Hodor ),protect(ROWS,( betray(1 / -foo(( x )) * ( foo(bar(-561 / betray()) / COLS) )) ))) ) )
};
	if(Ygritte){
	x /= ( bar(-Hodor - ( -12 ) * -160.81,( betray(-ROWS * mislead(-( Sansa ),( betray(COLS) )),Ygritte) ) * Sansa,dog) )
}
} else {

};
	1
}
} else {
	Ygritte -= -0.8 - betray()
}
}
def TABLE[--COLS][i] {
	dog /= -mislead();
	x *= Stark
}
def bar(Hodor,Arya,Sansa){
	if(ROWS){
	Hodor -= bar(160.63 * ( COLS ) / COLS);
	540.2
} else {
	if(32){
	if(TABLE[83 - foo(destroy(( Ygritte / ( ( -0.77 ) ) ),( COLS ),( betray(( y ),Stark,( COLS )) / ( 770.02 ) )) - ( mislead(( dog ) + foo(57,bar(bar(-ROWS,( COLS ),( Sansa ))) + 300.55,protect(-Ygritte,TABLE[Jon][rule(1,y,-0.99)],-9 * rule())),protect(( COLS ),COLS)) ) / mislead(-ROWS,y - y))][-betray(ROWS)]){

};
	--1
}
}
}
assert ( -TABLE[Stark][1 - ( Arya )] ) : "What do we say to the Lord of Death?"
def TABLE[-0.17][j] {
	if(betray(dog,TABLE[-0.18][0.19])){
	y *= TABLE[-y][-mislead(( ( ( destroy() ) ) ),x,Ygritte - ---Ygritte - Ygritte / -1 - -foo(foo(Hodor,TABLE[1][( ( ROWS ) )],x)) * ( -betray(y,Stark,TABLE[Stark][betray(-TABLE[( foo(-53) )][foo(TABLE[y][--( -0.46 )])],betray(Hodor))]) ) * Ygritte - Ygritte * ( Hodor ))]
};
	if(bar() + TABLE[-Stark][35]){
	Hodor
};
	if(TABLE[ROWS][-Sansa]){
	x -= -Ygritte
}
}
var x = x * Arya
var Sansa = -TABLE[betray(betray(COLS - dog / TABLE[( ( --0.88 ) )][( -ROWS )] + Ygritte,--97 * -( -87 )),mislead(--( 860.4 ),( ( ( TABLE[( rule(betray(Sansa,rule(Ygritte,-TABLE[betray()][( Hodor ) / -290.36])),Ygritte * -20 - ---0.84 / 6) )][Ygritte] ) ) )),( betray(( --71 )) ))][ROWS * 1]
def TABLE[Arya][k] {
	if(TABLE[y][Sansa / foo(betray(-1 - ( --( Hodor ) ) - TABLE[( COLS )][Stark]),dog,COLS) - ( ( mislead(Sansa,-( mislead(-76,foo(foo(( protect(( -( Hodor ) ),-TABLE[( -bar(-730.0547,-( ( Jon ) )) ) * dog][Stark],ROWS + ( -0.17 )) ),( -45 )))) )) ) )]){
	dog /= 380.32
} else {
	foo(( destroy(mislead(-ROWS / -0.4,-rule(( Sansa ),ROWS,ROWS))) ),( --1 / ( mislead(( ROWS ),TABLE[bar(Stark,Jon)][Arya] - ( Ygritte )) ) - 1 ));
	if(( TABLE[( TABLE[rule(COLS,rule(TABLE[-0.85][8],Hodor,y))][y] )][y - rule(Hodor)] )){
	Sansa -= foo(-x,( -ROWS )) / ( TABLE[Jon][( --Jon + -( rule(( 771 ) / rule(x) - ( 76 ) + COLS,-1,-foo()) ) * Sansa )] - dog * Stark )
}
};
	-Sansa;
	if(( -protect(( Ygritte ),-( Jon ) / y / 0.37 * 98,protect() * Ygritte / 89) * -( -COLS ) )){
	Stark -= -27;
	Hodor -= ( 3 )
}
}
def rule(x,Hodor,Ygritte){
	if(rule()){
	x -= destroy()
} else {
	x -= ( rule(destroy(foo(( foo() ),( mislead(-COLS,mislead(-99,COLS),protect(destroy())) )) - bar(-foo(--0.9 - ( ( ROWS ) ) + -23,rule(( 42 - Ygritte ))),-( COLS )) * TABLE[COLS][-99],( COLS / Hodor ),mislead(-( 0.9 ),Ygritte)),-0.98 + x * -betray(Arya,0.66 * bar(-24 * ( ( --35 ) / -89 ) / ( foo() ),ROWS)),5) );
	-420.8256
}
}
def foo(Hodor,Stark,Ygritte){
	if(-( COLS )){
	dog += ( rule(0.42,x,( -Ygritte )) )
};
	Jon += ---500.87 - x + COLS;
	Jon
}
def TABLE[55][i] {

}
assert Ygritte : "Fear cuts deeper than swords."
def destroy(Jon){
	y /= ( destroy() )
}
def TABLE[betray()][k] {
	if(betray(-Ygritte / ROWS,-0.02)){
	if(Hodor / protect(COLS,( foo(( 63 - destroy(y) / Ygritte * Arya )) ))){
	if(( ( Arya ) )){

} else {
	( -foo(ROWS / ( foo(Stark) ),-mislead(-COLS,( -0.35 ),COLS)) );
	if(mislead(( -ROWS - -26 - ( rule(foo(mislead(0.69,-rule(Ygritte) - -betray(y) / betray(Arya,( Arya ),Hodor) * -250.52 * COLS / -y)),COLS) ) * ( mislead(( TABLE[betray(dog,TABLE[-( x * 10.1235 * 86 )][COLS]) + ROWS][Stark] ),Hodor,-( -foo(-( Jon ),-Jon) )) ) ),foo(33))){
	dog *= mislead(( ROWS )) * foo();
	Ygritte /= -35;
	Arya *= Jon
}
};
	Stark -= ( Stark )
};
	Sansa
} else {
	if(-Ygritte - 0.69){
	if(-( Ygritte / ( Ygritte ) ) - TABLE[-mislead(COLS * ROWS,protect(14))][y]){
	Stark *= -1;
	( --( ( mislead() ) - foo(( Sansa + COLS - TABLE[bar(1,0.23)][COLS] * ( ( -0.02 ) ) ),COLS) ) )
} else {
	if(40.4){
	if(betray(( ( ( ---4 ) ) ))){
	if(( TABLE[( -210.841 )][ROWS] )){
	y *= Sansa
}
};
	Ygritte -= 600.184
};
	if(83){
	Hodor /= ROWS
}
};
	dog += -57;
	Sansa += -1
};
	if(-79){
	ROWS / rule(-0.71);
	-270.97
};
	Hodor
};
	dog;
	bar(-29 - -dog,bar(TABLE[Stark][( -80.839 ) - mislead() + ( Hodor ) - -0.72 - -Hodor],( ( 1 ) ) / -Ygritte))
}
def protect(x){
	Stark -= ----1 * rule(( -Ygritte - --81 / -( Stark ) )) + y;
	ROWS
}
def TABLE[Jon][k] {
	-Arya;
	COLS;
	if(( ROWS )){
	if(destroy()){
	y -= protect(betray(COLS,TABLE[COLS][foo(-betray(-bar(Ygritte,-14,protect())) + ( -0.1 - 1 ),( rule(( 290.433 * --( -0.61 / -( ( Sansa ) ) ) - COLS ),COLS,( foo(Stark,COLS + ( protect(bar(bar(TABLE[protect(ROWS,( x - Ygritte + -rule(Jon,x,1) / -1 ))][-0.88],-32 + rule(foo(ROWS))),-40),( dog ),-bar(-----0.82 + Stark * -94,Ygritte)) )) )) ),-protect(( ( -710.597 * Jon / bar() + Arya ) ),Stark,( 0.99 )) - ( 400.82 ))]),destroy(Hodor / Arya - ROWS),COLS)
}
} else {

}
}
def bar(Stark,Stark){
	-ROWS;
	if(440.101){
	( ( 0.99 ) );
	( ( -0.81 ) )
} else {
	if(35){
	-mislead(dog);
	x += Ygritte
} else {
	if(Ygritte){
	Hodor
} else {

};
	dog *= -0.34
};
	0.74
}
}
def TABLE[TABLE[TABLE[TABLE[ROWS / dog][bar(COLS)]][-Jon]][( Ygritte )]][k] {
	if(rule(dog)){
	76
} else {
	if(COLS - ( ROWS )){
	y += -0.18;
	Ygritte *= x
} else {
	if(36){
	TABLE[( -( protect(( Arya ),-( rule(protect(95),--0.09 - Jon) )) ) )][destroy(--83 * --COLS - TABLE[28][bar()] * ( -protect(-( ( -1 ) )) ) * 0.73 + TABLE[foo(bar(--0.28),rule(Stark) - 0)][rule(rule(ROWS,ROWS + COLS))] * protect(Stark,-96) - Sansa,COLS)]
};
	y /= COLS;
	if(Sansa){
	Hodor *= -dog
} else {
	0.99;
	if(TABLE[x][ROWS / x - ( protect(( -TABLE[-( -0.33 )][COLS] ),-0.91) )]){
	if(Jon){
	if(TABLE[Hodor / -TABLE[protect(( -Sansa + 1 ) / -x)][COLS]][46 * destroy(COLS,rule(TABLE[-13 * ROWS][-betray() + -dog] / TABLE[Arya][protect(--( ROWS ) + -dog)],( betray(bar(--4 * -x) + --TABLE[( --490.63 )][COLS] * -Sansa,-( -protect(-y,betray(COLS)) )) )),y) * x / dog * COLS] + Stark * -rule(-Sansa)){

};
	( 1 );
	y -= Hodor - 0.62 * ( Arya )
}
} else {
	-COLS + 0.92 - bar()
}
}
};
	ROWS;
	betray(COLS)
};
	Stark -= -( betray(COLS,TABLE[destroy() - y][betray(990.64)]) );
	if(Stark){
	Hodor *= protect(ROWS)
}
}
assert ( Stark ) : "One can not simply parse himself"
assert -73 : "Nothing burns like the cold."
var x = ( -0.44 ) / rule(-0.42) * Stark
var Stark = -( ( COLS / ROWS / -82 ) )
def TABLE[COLS][j] {
	Hodor -= Stark;
	x += Ygritte + ( betray(y,-ROWS) * ---0.93 + ( TABLE[( ( -20.52 ) )][betray()] ) )
}
var dog = ( Hodor )
var dog = -13
assert -31 : "What do we say to the Lord of Death?"
assert Jon / -0.31 : "Winter is coming"
assert ROWS : "What do we say to the Lord of Death?"
var Jon = ROWS
var Jon = ( COLS )
assert mislead(-( -180.05 * COLS + betray() ),-1,( betray(-33) ) - destroy(89)) : "Fear cuts deeper than swords."
def TABLE[TABLE[-ROWS / -39][Arya]][i] {
	Jon -= dog
}
def destroy(Stark){
	COLS;
	if(( Sansa )){

};
	Hodor += bar(ROWS,-dog) + -( Jon )
}
def betray(){
	1;
	if(foo(dog * --protect(destroy(),-destroy(67,---x,x)) + -Sansa / ( y / 86 ),( ( -0.38 * ROWS ) ))){
	x *= TABLE[-1][betray()]
} else {
	if(x){
	y;
	if(( COLS )){
	( ( destroy(ROWS) * bar() + TABLE[-1][x] ) )
}
}
};
	Ygritte /= -COLS
}
assert Jon : "One can not simply parse himself"
var Ygritte = bar(TABLE[( -COLS )][ROWS] / ROWS)
def betray(x,y){
	y -= --( ( TABLE[bar(ROWS,Ygritte)][COLS] ) ) - -95 * ( COLS );
	Jon;
	-( protect(COLS - betray(( betray(-79,dog,-( Arya )) ),Stark,COLS) / -protect(-( TABLE[protect(Stark / 0.9,destroy(protect(--TABLE[destroy()][-bar(( rule(mislead(-ROWS)) ))],dog,TABLE[mislead(-0.69)][( rule(Hodor,ROWS + 1 * 83 * -( protect(Arya,dog) )) * ( -520.8 ) )]))) / betray()][TABLE[mislead(COLS)][( Sansa )]] ) + ( -Ygritte ),Stark,COLS),betray(0.78,TABLE[( ROWS )][-( -22 - 0.73 ) / -TABLE[-TABLE[1][ROWS]][-( y )]]),-foo(COLS,foo(-25,990.337)) + -33) ) + dog + COLS + x
}
assert TABLE[betray(---91 + 0.03,mislead(TABLE[Sansa][COLS]))][COLS / betray(Hodor,Stark)] - ( Jon ) + Ygritte : "Nothing burns like the cold."
assert 41 : "What do we say to the Lord of Death?"
var Ygritte = ---Stark + mislead(ROWS,0.54) * -56
def TABLE[Hodor][i] {

}
var y = ( Hodor )
assert rule(870.898,protect(-bar(TABLE[-1 - ( TABLE[-COLS - -bar(Hodor)][-ROWS] )][Stark],41))) : "Winter is coming"
def TABLE[0.03][j] {
	if(-0.53){

}
}
assert ROWS : "Nothing burns like the cold."
assert Stark : "Fear cuts deeper than swords."
def TABLE[-0.46][i] {
	if(-protect()){
	( ( protect(rule(-( foo(Stark) ),COLS,--TABLE[COLS][-17] / ROWS) - y,-Hodor) ) );
	Jon /= -Ygritte
} else {
	rule(-foo(0.13 + 4),betray(y));
	Jon / foo(TABLE[( Arya )][mislead(--44 - ( -0.77 ) / ROWS * -TABLE[-580.31][rule(( rule(910.38) ))] + protect(TABLE[dog][( -1 )]),x,-0.17)]);
	0.07
}
}
var Sansa = betray(23) / 800.3 * ROWS
def TABLE[ROWS][k] {
	if(betray(--270.02 + -1,COLS - ( -destroy() ) - Sansa,destroy())){
	if(foo()){

} else {
	( --84 );
	if(protect(( ROWS ),980.85,0)){
	-0.32;
	TABLE[200.42][--Stark]
}
};
	if(( foo(( --90 ),-( COLS )) * ( mislead() - y ) - TABLE[( bar(680.4,-destroy(Sansa,--Sansa - -1 + -( TABLE[x][-protect()] ),COLS) / ( x / ROWS ),--betray(betray(( ( -( -TABLE[Arya][TABLE[0.11][--( Stark ) - ( COLS )]] + ( y * Arya * betray(destroy(-37),TABLE[-dog][( Stark )]) / ( -1 ) ) ) ) )))) )][TABLE[-COLS][( ( ROWS ) )] - Sansa * Sansa - destroy(--Jon,mislead(Ygritte / COLS)) * ( Sansa )] )){
	Sansa
};
	if(x){
	if(( ( -ROWS ) )){
	if(Stark){
	x += destroy(foo(( --( -Arya ) ),-dog,betray(( protect(destroy(-1,betray(85 + ( COLS ),bar(TABLE[x][destroy() - 2 * -protect(foo(TABLE[( mislead(Ygritte - ( --0.62 ) / ( -COLS ),-Arya) )][ROWS + ROWS],Sansa,-x),280.46) + -protect(( -betray(250.1) - Hodor ) * 17)] - 0.48 - 0.22,( ( ( rule(( x )) ) ) )))),protect(470.2012)) ) * betray(COLS,68 + x,( ROWS )),-46)));
	if(TABLE[( -850.56 )][destroy(mislead(( rule() ) / --1 / Ygritte,-x),COLS) - TABLE[COLS][0.92]] + COLS){

}
}
};
	if(Jon){
	if(( Arya - TABLE[0.89][TABLE[-0.29 / -ROWS][Hodor + rule(y)]] )){
	y -= destroy(COLS);
	if(( -( ( -bar(mislead(),( -COLS ),-12) - Arya - -0.66 / mislead(ROWS) ) ) )){

} else {
	if(0.93){
	Ygritte /= 0.74
};
	Ygritte /= -x;
	if(( Stark )){
	x -= foo(x,Ygritte);
	-Jon;
	Jon + ( mislead(-0.45,-0.87) )
}
};
	Stark /= -Stark
};
	Arya *= bar(Ygritte / Hodor,91)
} else {
	Sansa /= ( TABLE[0.25][-540.904] );
	Jon *= Sansa
};
	Jon *= foo(y,mislead(--( 90.939 / -( ROWS ) * -15 ))) * 8 / Sansa * foo(-960.56) - Hodor
}
};
	if(Ygritte){
	-1
} else {
	( 1 ) * Sansa / ( Ygritte ) / ---bar(-Stark,Hodor,-( ( -Ygritte ) ) - -mislead());
	Stark *= --69;
	if(rule(protect(ROWS * foo(--14 * ( betray(( -37 ),betray()) ) * TABLE[( rule(destroy(protect(Ygritte,-Arya,rule(0)) * Sansa * --Hodor + ROWS),( COLS )) )][( -0.39 )] / -Sansa)))){

} else {
	if(destroy(1,ROWS) * -Jon + y){
	COLS;
	if(72){
	Jon /= TABLE[-TABLE[protect(--( foo(( Jon )) ),-62,( TABLE[TABLE[bar(protect(39,COLS),destroy(),Stark)][( dog )]][Arya] )) / 690.6][0.57]][( COLS )];
	Stark /= 0.72;
	if(COLS){
	x /= COLS
}
}
} else {
	if(( rule(Jon,( ( ( bar(protect() / ( Arya )) ) ) )) / bar(TABLE[( ( ( ( mislead(mislead(-1 - x)) ) ) ) )][destroy()]) )){
	x -= betray(mislead(0.8,y),Stark);
	Sansa *= -1;
	( dog + 0.31 )
} else {
	if(-( -COLS )){
	ROWS
} else {
	betray();
	dog
};
	Sansa += foo(( -65 / -20 + ( ( ( mislead(-destroy(mislead(mislead(),( -1 * mislead(-x,( mislead(Stark,54 + COLS + -TABLE[--54][1] + y - -( -( TABLE[-mislead(protect(protect(Arya,( 59 )),betray())) * ROWS][Hodor] ) ) / betray(TABLE[Jon][x],Stark),rule(--0.48 / -Arya,-x)) ) / ( -Stark * mislead(Arya,protect(-Jon),bar(-43,-foo(destroy(( Hodor ),TABLE[Jon][26],ROWS / rule(( -COLS ),Sansa)),-0.01,33) - y,rule())) )) + Hodor )))) * ROWS + protect(TABLE[protect(-COLS,COLS)][ROWS] + foo(( -0.78 + bar(rule(( 85 + ( COLS ) ))) )) - ( TABLE[69][Arya] )) / -1 ) ) ) ))
};
	Stark /= 0.66
};
	Hodor *= -33 - TABLE[-( foo(( ROWS ),--( ROWS )) )][dog]
}
}
}
def TABLE[rule(y,( ( -0.9 ) ))][j] {
	if(Jon){
	800.218;
	Stark /= ( Stark )
} else {
	if(rule(-68,20)){
	Sansa += -dog * ROWS / 1
}
};
	Hodor /= mislead(( dog ),TABLE[COLS * protect()][mislead(protect(--0.92,TABLE[rule(ROWS)][Hodor])) - ( Stark ) + mislead(( ( ( protect(( Ygritte ),-63,destroy(19,TABLE[COLS - ( ( COLS ) )][-0.36],( 0.48 ))) ) / Jon * -( Hodor + ( COLS ) ) ) ),-20.935,590.27)])
}
assert ( protect(-75) * Hodor ) : "One can not simply parse himself"
assert ( mislead(--TABLE[destroy(Ygritte,destroy(( ROWS )) + bar())][-64]) - destroy(-0.62 * -ROWS / -81,0.69) ) : "Winter is coming"
assert ROWS : "Winter is coming"
def TABLE[mislead(protect(x),( destroy(( ( Arya ) ),Sansa) ))][i] {

}
def TABLE[0.08][j] {

}
assert ROWS : "One can not simply parse himself"
var Arya = Sansa
def TABLE[0.16][k] {
	y /= COLS;
	if(0.68 / -foo(-540.353)){

} else {
	Stark -= Jon
}
}
assert destroy(protect(ROWS + --( Sansa ) - protect(destroy(640.987,TABLE[betray(ROWS,-( ( Hodor ) ))][-16],rule(( -0.02 ),destroy(Sansa / Stark / -dog / -( ( ( mislead(TABLE[-0.89][COLS] / ( 1 )) ) ) ))))),( betray(-0.12,-31,Ygritte) + TABLE[COLS][COLS] ))) / 1 : "Fear cuts deeper than swords."
def destroy(Jon){
	if(Ygritte){
	if(rule(( Hodor ),foo(( --COLS / -1 - 780.717 - --1 )))){
	if(-COLS / ROWS - dog){
	-0.19
}
}
} else {
	( ( ( Arya ) ) * ( 96 ) - y - ROWS - protect(-1) );
	Jon /= -ROWS
}
}
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-730.9562 * ( ( ( ROWS ) ) ) * 50.106][i] {
	Ygritte += 950.7724;
	-( y )
}
assert Jon / Sansa : "Nothing burns like the cold."
var Jon = ( ( -87 ) )
def TABLE[-TABLE[79][Ygritte] - Arya / Arya][j] {

}
def TABLE[TABLE[---0.71][-COLS]][k] {
	( bar(foo(TABLE[( Stark / ( --( dog ) ) )][1] * Ygritte,----( rule(Arya) ) - COLS - x)) )
}
def rule(Hodor){

}
def destroy(Hodor){
	if(-0.75){
	protect(mislead(),( TABLE[COLS][( ( Hodor / Stark ) )] ));
	if(-27){
	x -= ( ( -ROWS ) );
	-protect(-0.42) + 45;
	-COLS
} else {
	if(--ROWS / ( --destroy() ) + ( foo(TABLE[destroy(-Ygritte,-0.71 * -TABLE[mislead(mislead(( Hodor ),-foo(Hodor),--35),Arya)][1] - TABLE[1][COLS]) / -destroy(rule(-( -( Ygritte ) ),betray(bar(( -x + ROWS ),( TABLE[-TABLE[-1][( ( ROWS ) )]][-0.31] ) / Arya) * -betray(ROWS,-41) - 1,COLS,Hodor)),-( -( -( -rule() ) ) / x ))][Ygritte]) ) - COLS){

} else {
	if(Stark){
	dog -= Ygritte;
	destroy(Arya / 32 / Jon)
};
	if(-23){
	if(ROWS + ( TABLE[protect(-470.3)][-Arya] ) - ( ( -1 / -betray(( 7 ),x + destroy(Arya,x,( Ygritte / destroy(ROWS * -y) )),-y * -protect(TABLE[Stark][0.48],-COLS,-0.66)) - ROWS / -y ) )){
	-( TABLE[bar(destroy(-85),-34)][-destroy(Arya,TABLE[TABLE[----1][TABLE[( TABLE[-80.111 - ( ( TABLE[-0.88 - protect(Stark,-78,destroy()) * Sansa][1 / protect(ROWS,-protect() - rule(mislead()),( -foo(-( dog ),-36) ))] ) * -Hodor )][0.45] )][-( betray(---( ( TABLE[dog][( Sansa )] ) * -7 ),ROWS,destroy(( 1 )) * dog) + -rule(88) )]]][destroy(440.829,( TABLE[mislead(--0.9,COLS) / 83 * rule(ROWS,-( ROWS ))][880.9] ),-( Hodor ))])] ) + COLS;
	protect(Sansa)
};
	Stark *= COLS - ROWS + ( destroy(( protect(( -990.3554 ),240.45,ROWS) ),( -Sansa )) )
} else {
	Arya += Arya;
	rule(COLS,-( bar(Stark,-400.502) ),COLS * -50.6955 * TABLE[ROWS][destroy(ROWS)] - ROWS)
}
};
	Ygritte -= ( Hodor ) + ( ( -Arya ) )
};
	( foo(( Sansa )) )
};
	-940.3;
	if(Sansa){

}
}
def rule(Ygritte){
	if(( ( ROWS ) )){
	if(TABLE[( --rule(-0.61,ROWS) + -COLS / 0.46 + ( Ygritte ) - x / Sansa * ( TABLE[bar(( protect(COLS,--230.31 * -destroy(-0.1)) ))][--COLS] ) + TABLE[Ygritte][( foo(( -ROWS ),destroy(),betray() + Arya) )] )][( bar(Jon * Stark,( ROWS ),-0.57 * ( -TABLE[-1][-0.2] - bar(ROWS,foo(( TABLE[-rule(( 0.76 ))][TABLE[rule(46)][COLS]] + Jon - ( betray() ) ))) ) * protect(-29 + TABLE[( TABLE[COLS * COLS][destroy(Ygritte,protect(Arya + ( Sansa ),-y * ROWS / -Sansa,16 + destroy(Stark)))] )][( protect(Stark,( betray(dog / ( -TABLE[43 + bar(betray(destroy(Arya,( -( --y ) )) / --0.12),( -73 ) / ROWS)][x] ),ROWS,-220.6324) )) )] / Sansa - dog + TABLE[ROWS][0.41 - Arya + --dog + protect(-dog,dog) / ROWS + betray(rule(Stark,Stark),Jon * ( ( ROWS ) ),Hodor / COLS) * -70] * y,( ( protect(Stark) ) / -2 + ( foo() ) ))) / COLS )]){
	Stark /= ( -TABLE[TABLE[mislead(ROWS,( -73 ),bar(( y ),Jon))][( -Stark )] + TABLE[COLS + --230.91][( Hodor )] - Ygritte + ( -( -Stark / ROWS + ( -foo(foo(( Hodor / dog ))) ) + mislead(bar(COLS - protect(-0.15)),COLS) ) )][Arya] / -540.01 + -0.97 / -TABLE[-0.93][( Jon )] );
	Sansa
}
} else {
	TABLE[--betray(COLS,-( -88 ),--( -mislead(betray()) ) / Hodor) - ( foo(-( ( -0.9 ) )) )][bar(betray(( 0.88 )),COLS,--0.48)]
}
}
def rule(Arya,Stark){
	Sansa * ( COLS );
	if(Hodor){
	Ygritte /= betray(ROWS * ROWS + protect(( 1 ),y - COLS) / TABLE[Sansa][---( -400.8 ) - Ygritte] - ( TABLE[foo(ROWS)][betray(y * ROWS)] ),bar(foo()));
	Stark
}
}
var Jon = bar()
assert -( -470.699 ) : "Winter is coming"
def TABLE[Jon + ( ( -ROWS * ROWS * bar(rule(TABLE[( ( TABLE[( dog )][( Hodor )] ) )][x],-0.31),Sansa) ) ) - -0.65 + ( -1 / 0.22 )][j] {

}
var Stark = -0.83
def bar(Stark,Arya){
	x -= 1
}
assert 22 : "Winter is coming"
var Hodor = -foo(( -0.44 ))
assert ( bar() ) + rule(-bar(51),-0.46) : "Nothing burns like the cold."
def betray(Jon){
	COLS
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[( -410.6779 )][j] {
	Arya -= mislead();
	if(-0.93){
	if(COLS - foo(( -150.945 ),protect(betray(),-betray() + x),Stark)){
	if(0.82){
	if(ROWS){

} else {
	x += -COLS;
	if(--17){
	protect();
	if(( mislead(x,-COLS) )){
	if(-foo(( ( mislead(protect() + -0.1) ) ),( -48 - -740.385 )) / ---0.58 * ROWS + protect(( x ),mislead(TABLE[betray(20 * Sansa)][mislead(destroy(Stark),Stark + 1 * dog / -protect(mislead(dog - COLS,1),---0.69) * -22 + TABLE[-x][Arya - Hodor] + --100 - -58 - rule(bar(56)),( Jon ) - bar(Sansa,bar(destroy()),TABLE[foo(COLS) + ( dog )][y]) + -betray(( ( -bar(-0.02,Hodor) ) )))]),-TABLE[-Ygritte][( Ygritte - betray(0.36,---420.077) * protect() )]) * ROWS){
	if(( betray(39) )){
	Ygritte -= bar(ROWS + ROWS);
	dog /= -destroy();
	-TABLE[Hodor - ( destroy() )][betray(-Arya,( -COLS ))]
} else {
	-29
};
	if(Sansa){

} else {
	if(Jon){
	dog -= --0.51;
	if(betray(( -( -1 ) - -0.66 ),-( TABLE[( -110.25 )][( --3 )] ),destroy(bar(( --780.37 )),ROWS,protect(protect(( mislead(-32,( destroy() )) ),Sansa))))){
	if(0.72){
	dog -= ( 180.0385 );
	Jon -= Sansa;
	x *= ( ROWS )
}
};
	Ygritte -= COLS / -1 - ROWS - COLS
};
	if(Ygritte){
	Ygritte /= -betray(-( ( Ygritte ) ),1);
	1
} else {
	Arya -= -99;
	if(ROWS){
	Ygritte += 340.54
};
	if(( ( TABLE[( ( ( ( --protect(1) + ( dog ) ) ) ) * protect(-( -Ygritte * TABLE[--51 + ( 11 ) - COLS * TABLE[-( Ygritte )][-0.15]][TABLE[( -COLS )][( -ROWS )]] ) * -49) - -( ( 1 - ROWS ) ) )][-47 / ( x )] ) * -( ( COLS + ( destroy(( mislead(mislead(ROWS,1)) ),--58 * ROWS) ) ) ) )){
	Arya *= foo(( COLS ));
	y /= ( -y );
	Hodor /= ( -1 ) - ROWS - Stark
} else {
	protect();
	Ygritte *= TABLE[x][-ROWS]
}
};
	Arya /= Stark
};
	if(-2){
	( COLS + ( ( TABLE[-0.77][-240.2] / mislead(90.5) * betray(-1) / destroy(81 * ROWS) ) ) )
}
} else {
	Stark *= COLS
};
	Jon *= COLS
} else {
	( Ygritte )
}
}
}
};
	if(COLS){
	Sansa /= -0.03
} else {
	Ygritte *= protect();
	if(foo(y,-ROWS,( 5 ))){
	Stark -= -860.2
}
};
	if(TABLE[COLS][protect(foo(-betray(TABLE[foo(x,mislead(y,rule(Sansa)) + -60)][betray()]) - Stark,--10.252 - x - -950.7635),0.26)]){

}
} else {
	600.49
};
	if(--1){
	Sansa -= --COLS / ( -TABLE[-0.07][1] );
	Ygritte
} else {
	if(COLS){
	if(( 55 + ( -0.13 ) )){
	980.429
} else {
	Jon *= Jon;
	Jon += -rule(-95,ROWS)
};
	ROWS
};
	if(( -0.08 - -0.86 )){
	--4 / ( COLS ) * 1;
	dog
}
}
};
	Ygritte -= 780.696
}
var Sansa = -0.5
def TABLE[ROWS + x][i] {

}
assert -foo(dog) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--mislead(bar(ROWS,( --Sansa + -Ygritte * -730.65 ),Arya),( betray(( TABLE[-0.47 * 0.55][mislead(0.25,( Jon ))] - TABLE[dog][mislead(-mislead(( 0.33 ),-( betray(1,( x )) )))] )) )) + foo(92,--mislead(-0.46,-protect(68,ROWS) / -COLS)) * ROWS][k] {
	if(-180.56){

};
	Sansa /= -1;
	x -= ROWS
}
def TABLE[690.7953][k] {
	22;
	if(--betray(( destroy(Ygritte + Sansa,4,--bar(830.31) * ( rule(dog,x) )) ),-ROWS) * x){
	protect(betray(-0.56),TABLE[COLS][( TABLE[-COLS][--900.5] )],-780.2);
	x += ROWS * ( ( ( -TABLE[-0.17 + --66][( -0.37 )] ) ) )
}
}
def bar(y){
	if(-ROWS){
	if(rule(ROWS,destroy())){
	( ( -1 ) )
} else {
	rule(-1,-0.47);
	1
}
} else {
	Arya /= protect(TABLE[Sansa][( 47 )]);
	Sansa /= TABLE[bar(670.042,x)][ROWS];
	Stark += -dog + ( foo(COLS,x) )
};
	( --ROWS - -destroy() - --TABLE[Stark][betray(-44)] );
	Jon += -0.89 * -protect(ROWS) / -( -140.4 ) + ( -0.67 ) - ( y )
}
var x = ( destroy(x,-betray()) ) + ( ( ( 0 ) ) )
def protect(Jon){
	if(COLS){

};
	Ygritte
}
def bar(Sansa,Arya){
	80.061;
	Hodor += rule(Ygritte) * ( ( protect() ) );
	if(ROWS){
	rule(-0.38)
}
}
def protect(y){
	dog;
	( 460.6994 );
	rule(--1 - -820.424) - ---Arya * -bar() * -43 + Ygritte
}
def foo(Stark,Arya,Jon){
	( TABLE[-850.2483][Sansa] );
	if(protect()){
	-0.66;
	( -0.37 )
} else {

};
	dog -= TABLE[-0.04][-( y )]
}
assert Jon : "One can not simply parse himself"
def mislead(Jon,Sansa){
	1;
	Jon /= Stark
}
def rule(Ygritte,Ygritte,Arya){
	if(Sansa){

} else {
	if(bar(COLS,-1 / protect(),56) * 0.74){

} else {
	Jon /= destroy(-92,( protect(COLS) ) + ROWS)
};
	y += -Hodor
};
	--14
}
def bar(y,Ygritte,y){
	x /= -rule(COLS,( betray(0.28 - -----24 - protect(COLS)) ),COLS)
}
var Hodor = -( ( Jon ) )
assert -Hodor : "Fear cuts deeper than swords."
assert ROWS : "Fear cuts deeper than swords."
var Stark = TABLE[-TABLE[-0.33][COLS] + ( Jon )][-1]
var Sansa = --90
def destroy(Sansa,dog){
	-400.6242;
	-0.64
}
var Arya = ROWS
def destroy(Ygritte,Stark,Ygritte){
	Jon /= COLS;
	if(32 + ( ROWS )){
	if(-0.16){
	if(TABLE[--59][TABLE[Jon][foo(betray(),1) / ( --bar(COLS * -15,-94) + rule(Jon) )]]){

};
	Stark -= TABLE[( Arya / COLS * rule(( Jon ),( destroy(foo()) )) )][-1]
} else {
	TABLE[-Jon][( TABLE[mislead(-protect(mislead(1 / destroy(protect(-ROWS))),0.82 * betray(y)),foo(ROWS,--820.35,bar(-1 * ( 0.59 ))),( y ))][COLS - dog / x / y * ROWS] )]
}
}
}
def TABLE[foo(( TABLE[Stark][( ( -20.357 ) / ( 59 ) * dog )] + mislead(-( -( -0.6 ) ),( rule(mislead(),( COLS + COLS ) * protect(0.23,TABLE[( Sansa )][bar(( destroy(betray(protect(Stark)),COLS) * 0.54 ),760.71,-32)] / foo()),-( y )) )) ))][k] {
	if(rule(-y,TABLE[Stark][TABLE[0.01][-ROWS * -( 1 ) / ( -( ( COLS ) ) )]])){
	if(-bar(foo(bar(rule(1) + Jon)) - -22,destroy(-Hodor + ( foo(Sansa,79) ),-TABLE[( ( ROWS ) )][COLS]),TABLE[destroy(destroy(( TABLE[11][mislead(Sansa,( ( ( 96 ) ) ))] + ( -Ygritte ) ),bar(( -1 ) / Stark),( protect(-( destroy(dog) ) / ROWS,-destroy(-1) * ROWS + y,-ROWS - -400.9969) )),Jon)][58])){

} else {
	( -93 )
};
	Jon += rule(COLS)
};
	if(ROWS){
	0.28
} else {
	( ( -0.77 ) );
	Arya /= rule(Sansa / ( 91 / destroy(( 1 )) ))
}
}
def TABLE[-TABLE[Ygritte + destroy(67 + -97,--( betray() ) / --7 / -980.661)][--Jon]][i] {
	if(-betray(Stark) * -TABLE[( betray(36,mislead(rule(---Sansa - 0.5,-COLS / TABLE[-82][x],betray(betray(TABLE[-480.9 - -x][0.43] * TABLE[( destroy(Hodor,( rule(( betray(foo()) + protect() ),betray(y,-470.314,4)) )) )][ROWS]))))) ) * Sansa][( protect(--COLS) ) + Sansa] - COLS * ( -x ) / --foo(63,y) - 210.71){
	if(ROWS){

};
	Ygritte += TABLE[destroy(Jon,-( ( foo(x,ROWS) ) ) - Jon)][-16 / foo(bar(--78,rule(),0.5) - -Hodor,-810.76)]
} else {
	Stark *= y
};
	if(TABLE[1][TABLE[-1][33]] / Hodor){
	Arya += foo(( -360.189 ));
	67 * --rule() - 320.601 - -Hodor
} else {
	Arya -= Sansa;
	if(x){
	y += -1 - -( Jon - ( COLS ) - ( 14 - -0.51 + Arya + -destroy(-0.7 - protect(bar(( ( -( COLS ) ) ),-42),( x ),( mislead(-1) )),( foo(( dog ),-0.29) ),betray(Ygritte + 880.63 / foo(Arya,-Hodor))) * bar() - -870.6662 * --0.8 ) / mislead() );
	-0.54 * -0.61 * ( COLS ) + betray(( ( 0.53 ) ),-0.45,TABLE[---30 - -( destroy(--ROWS) )][dog]) - mislead() + -33 - -0.33
};
	betray()
}
}
var Stark = ( -32 - TABLE[ROWS / betray(COLS,( Jon ),mislead(( bar(-foo(),-Ygritte,88) ) * rule(1,TABLE[-bar()][-TABLE[COLS][ROWS]]),ROWS))][mislead(protect(betray(-430.386)) - foo(destroy()),COLS * x,ROWS)] )
def TABLE[Ygritte / mislead(y) * -Jon][i] {
	Stark
}
def TABLE[0.77][k] {
	if(ROWS){

} else {
	--1;
	--( TABLE[dog][-ROWS] ) * 38
};
	-( bar(-( -mislead(( ROWS ) / TABLE[betray(TABLE[-mislead(( ROWS ),ROWS,-1)][-110.604]) + -56][mislead(COLS,( ( ---( -1 ) + -ROWS / -0.9 * ROWS ) ),Hodor)],COLS + -1,betray(rule(( -0.55 ),( Stark )),-mislead(---42 * -14,Stark))) ),TABLE[( ( -Jon ) )][( COLS ) + betray(-( betray(( rule() ),TABLE[-920.8][-71] - Ygritte) ) - ( 75 )) + rule(ROWS,( ( ( -0.5 ) ) )) * ( --76 - Stark ) + x]) )
}
var Sansa = --1 - Jon - 1
assert rule(44,( -( ( -50.9182 ) ) )) : "One can not simply parse himself"
def TABLE[dog][i] {
	Stark += -protect(( foo(( betray(( ( ( -y ) ) / -Hodor ),ROWS / COLS / foo(rule(( Hodor ),( Hodor - Sansa )),Sansa)) )) ) * ( Jon ),( ( Stark ) ),18)
}
def betray(Hodor,Arya){
	( protect(-0.25 - ROWS - ( TABLE[--rule(--57,ROWS) * ( y )][Arya] ) - -190.45) );
	38
}
def TABLE[dog][j] {
	Sansa += ( -0.15 );
	dog += protect(Ygritte);
	Ygritte *= 20
}
var Stark = destroy(Arya,Sansa) / 330.2
def TABLE[( bar() )][k] {

}
var dog = Ygritte * COLS
var y = protect(COLS,( -( ROWS - TABLE[bar(( mislead(-COLS,rule(protect(Ygritte,( -COLS )),-Hodor / ( protect(-340.619) ),destroy(---1))) ) / destroy(-Arya,TABLE[protect() - ( ( TABLE[( ( mislead(( -77 / betray(-ROWS,-( rule(ROWS,COLS) ),Hodor) / bar() ) * -1,TABLE[0.9][ROWS] * ( 550.796 )) ) ) * 0.91][mislead(Ygritte + Stark,90.15,TABLE[( --( Sansa ) )][-4]) * -0.83 + 0.54] ) )][ROWS] + Hodor + bar(),0.13),( -( bar(( x ) * Arya,betray(ROWS,-( betray() ))) / TABLE[betray(TABLE[( Stark + mislead(COLS) )][destroy(40)] + -y) * 10.495][destroy(Hodor,1)] ) + y ))][Jon] * --mislead(( -( ROWS ) ),-ROWS - y) + -0.81 ) ))
assert -0.42 : "What do we say to the Lord of Death?"
def TABLE[-1][k] {
	-49;
	-ROWS / Sansa;
	-COLS
}
def TABLE[y][j] {
	if(( Sansa )){
	if(80.398){
	-ROWS;
	Hodor /= ( y );
	if(( y )){

}
} else {
	dog -= -x;
	( Sansa );
	x /= Jon
};
	( -510.912 )
} else {
	( --mislead(0.49,TABLE[-ROWS][( ROWS )],-protect(foo(protect(-x * ROWS,foo(-y / TABLE[COLS][-Hodor]),( TABLE[--56][( ( foo(TABLE[-Jon][rule(TABLE[TABLE[betray(-Hodor) - -84][0.68] * -7 * --46 + ( ( ( COLS ) ) )][-51] / -75,Arya + mislead(Ygritte,( ( ( destroy(0.31,0.01 * rule(foo(destroy(TABLE[Hodor * ROWS][( COLS ) * ( Stark ) - 1 * ( ROWS )])),( -betray(( Arya ) / TABLE[-protect(( ( dog ) ),--590.162) * bar(( -COLS ) / rule(betray(COLS,( ROWS ),COLS)),-Arya - x)][-510.771] * -700.01 + 1) ))) ) ) ))) * Hodor + ( rule(--( Sansa ) + -dog,80,rule(destroy(27 * TABLE[dog][Hodor],-96) - ROWS,bar(-bar(mislead(-0.5,Arya * COLS * rule(-0.3) * ( 1 ) + y + Stark - destroy(-x / mislead(ROWS,---1),( Hodor ),destroy(-0.15))))),1 / ROWS)) )]) ) + 0.2 )] )),-ROWS * Stark,75),( Ygritte ),-y)) + bar(( Ygritte ),( -Hodor )) / ROWS )
};
	if(y){
	Jon *= ( destroy(( 0.63 )) )
};
	if(Sansa){
	Sansa /= -( protect(dog,-45,-0.17) );
	-( -TABLE[dog][-0.25] );
	Ygritte /= --Stark
} else {

}
}
assert ( protect(destroy(Arya)) + --ROWS ) : "One can not simply parse himself"
var Stark = -580.4
var Stark = ( -190.588 )
def destroy(Jon,Stark){
	if(( protect(--550.9 + ( -24 ),-rule(-Arya,rule(dog,( ( 0.05 + --1 * -( Sansa ) + 39 - y - ( --0.94 ) ) ) * Ygritte * -0.99 * Ygritte,( -140.65 )),--( Sansa ))) )){
	Jon -= COLS;
	rule(TABLE[x][( rule(y / destroy(y,Arya * -COLS + -0.7),( y )) )])
} else {
	Arya -= foo(destroy(mislead(Hodor),( ( 0.99 ) )),TABLE[rule(-14)][0.75])
};
	x
}
assert x : "One can not simply parse himself"
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Ygritte){
	x += COLS;
	if(( ( ( COLS ) ) - ( -70.6696 ) ) * betray(8 + ( ROWS ))){
	if(--( -0.21 ) + -Arya){
	Arya /= Ygritte;
	Arya += bar()
} else {

}
} else {
	if(-0.71){
	-COLS / ROWS;
	if(( x )){
	if(Ygritte){

} else {
	if(COLS){
	( protect(destroy(( Arya ),COLS),Stark) );
	y
} else {
	( ROWS );
	if(y){
	Stark -= Stark
}
};
	90.4
}
} else {
	if(0.22){
	-60;
	destroy();
	dog += x / 26
};
	if(( ROWS )){
	if(Stark){
	if(foo()){
	if(dog + protect(--rule(-47,( dog ) / COLS,-( Hodor )))){
	ROWS
};
	Sansa += Arya
} else {
	if(COLS){
	ROWS;
	( -TABLE[--1][Ygritte] + -TABLE[--0.84][-37 - ( ( --dog ) )] ) * destroy(( -150.55 ),ROWS)
} else {
	x *= Jon
}
}
};
	if(-dog){
	62;
	if(--rule(Arya,( -1 ) - 0.19)){

};
	if(( -0.45 / ROWS )){
	if(COLS){
	y += -1;
	x -= -x * COLS
} else {
	if(bar(--50,( TABLE[ROWS][( ( Jon ) )] / Jon ))){
	if(Ygritte + TABLE[-83][-x]){
	Ygritte /= destroy(-( 410.6 ));
	( destroy(( Hodor )) )
} else {
	x *= Arya
}
}
};
	( TABLE[---34][( ROWS ) / -betray(TABLE[COLS + --4][-COLS],destroy(-Stark) - Arya / COLS)] )
}
} else {
	COLS;
	Stark += -( foo() )
}
} else {
	foo(x + -destroy(TABLE[-Jon * ( 920.42 )][ROWS] + -( -( -23 ) - ROWS )) - 61 + -Arya,-81 - betray(TABLE[-ROWS][--0.66] + ( --0.82 - ( TABLE[--50 / x / ( ROWS )][TABLE[-0.52][TABLE[mislead()][0.63]]] ) )))
}
}
}
}
}
var dog = 71
def protect(dog,Ygritte){

}
assert protect(-72,( y ),-( ROWS )) : "What do we say to the Lord of Death?"
var Ygritte = -0.12 - Ygritte * Jon
def mislead(Stark){
	Sansa - -rule(( dog ))
}
def betray(Ygritte){
	y -= 1;
	x /= ( ( ( destroy(y,destroy(Arya)) ) / 0.66 ) + ROWS )
}
var dog = -0.39 / Ygritte
assert 1 : "Fear cuts deeper than swords."
var dog = ---40 / -betray(y)
def destroy(Jon,dog,Sansa){
	( 82 - ROWS )
}
assert -800.584 / Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( --95 ) * 64][i] {
	y *= COLS;
	if(( ( -foo() ) * ROWS ) - -( -Arya )){
	if(-foo(-48)){
	-Sansa - TABLE[( ( y ) )][( -TABLE[-350.713][( rule(( COLS ),-dog + ROWS) + ( -56 ) )] )]
}
} else {
	Stark *= rule(( --91 ));
	COLS
}
}
def TABLE[TABLE[COLS][( Stark )]][j] {

}
def TABLE[( -1 + foo() )][j] {

}
def TABLE[ROWS][k] {
	x += rule(( ( bar(-y) ) ),y);
	if(---( -ROWS )){
	if(ROWS){
	if(0.43){
	Jon /= ( -0.19 ) / mislead() - COLS
};
	betray(( y ),x)
} else {
	if(ROWS){
	betray();
	Ygritte *= -x
}
}
} else {
	if(( 270.8273 )){
	if(-0.75){
	( -0.13 );
	Jon -= foo()
};
	Sansa -= Jon
} else {
	--COLS;
	if(( y * ( ( --0.94 ) ) )){
	if(( -64 ) - mislead(COLS)){
	if(foo(-180.81,bar(--0.45,( --0.4 )))){

}
}
}
};
	foo(Sansa);
	if(-73){
	( -0.31 / ( COLS ) );
	foo(-0.94,COLS) * ROWS
}
}
}
def TABLE[y][k] {
	31;
	if(mislead(---24,( Ygritte ),Hodor)){
	if(---0.34){
	if(-dog){
	if(bar(33,( 0.01 ))){

} else {
	Arya += destroy(ROWS - --0.39)
};
	( ( destroy(--86,Stark + TABLE[destroy(ROWS,ROWS)][26] - -630.0565 + foo(( COLS / Arya - ( -COLS ) )) / ROWS + Sansa / ( destroy(--( ( COLS ) )) )) ) + Hodor * 1 );
	ROWS
};
	Hodor -= ( -Jon );
	x += 23
}
};
	if(-COLS){
	y += -0.7
} else {
	if(protect(Jon,Stark / -1,dog)){
	TABLE[protect(destroy(-43))][foo(-1,-56)];
	Hodor
};
	( ( betray(-protect(-0.78 + Ygritte) * Stark,-COLS - -5 - --97 - 0.31,Hodor * Stark) ) / mislead(-destroy(-COLS * foo(dog),TABLE[-0.12][ROWS]),dog / TABLE[( -0.01 )][mislead(( ROWS ),-11,y)],( -490.8093 )) );
	Jon /= -foo(-0.89,foo(1,TABLE[( TABLE[COLS][protect(-( betray(-( COLS ),-530.86,Ygritte) ),TABLE[ROWS][foo(betray(-COLS))])] ) + 0.08 / Stark][-( --mislead(betray(( -1 ),destroy(-Stark,dog,-69 * Jon),-0.63)) + COLS ) - protect(x,--y) * Arya * 27] + ( rule(--( ( destroy(--80) ) ),-1) / Ygritte - ( -COLS ) )))
}
}
assert COLS : "Winter is coming"
def rule(x){
	if(( --mislead(rule(( -( ( foo(ROWS) ) ) ),-1,betray(-mislead(COLS),Jon)),ROWS,-19) - COLS + ( ROWS ) / Ygritte + ( ( Hodor / -0.56 ) ) + ( rule(-750.76,680.9925) ) / 1 + -27 / COLS )){
	Ygritte -= TABLE[Ygritte][destroy(Sansa,-1)];
	Ygritte *= -1
}
}
assert rule(-TABLE[y][foo(( ( --( ---1 ) ) ),rule(protect(-0.62,-440.27)))] + protect(),x + -0.02) : "What do we say to the Lord of Death?"
var Sansa = COLS
def betray(Stark){

}
def protect(y,x,y){
	dog /= COLS
}
assert -0.1 : "Nothing burns like the cold."
def mislead(Arya,y){
	Sansa;
	if(930.4936){

} else {
	Ygritte;
	COLS;
	if(--rule(( ( 0.45 ) ),--dog,( ( -( -87 ) ) ))){
	Hodor
}
};
	Arya -= ROWS
}
def TABLE[ROWS - ROWS][j] {

}
var Jon = COLS + ( ( mislead() ) ) / -dog
def TABLE[destroy()][j] {
	( ( rule(COLS + bar(foo(COLS,COLS,( 0.52 )),bar(-COLS) * ---ROWS - ---0.62,COLS)) ) ) * 0.9;
	if(y){
	if(--Arya){
	-0.8
};
	Arya -= ( COLS )
}
}
def foo(Ygritte,Sansa,dog){
	if(( y )){
	Stark *= ( foo(protect(-( -TABLE[-TABLE[580.653][protect(0.19)]][TABLE[destroy()][( ( TABLE[-y][rule(ROWS) - ( Arya )] ) - -1 - ROWS )]] )),( ( ROWS ) ),ROWS) )
} else {

};
	if(foo(Hodor,y,bar(( -ROWS ) / -6,--( x / Jon )))){
	ROWS;
	Sansa += ( -protect(Sansa,foo(ROWS,( rule(-1,-0.99,-0.44) ),TABLE[-94][Arya / foo()] - 1),-1) )
}
}
def mislead(Jon,dog,Hodor){
	if(x){
	Arya -= --y;
	x += ROWS
}
}
var Hodor = COLS
def protect(Stark,Hodor){
	Stark *= ( ROWS );
	Ygritte;
	-Sansa
}
def TABLE[x][i] {
	if(-1 * betray(TABLE[Stark][-dog])){
	Hodor /= -1
} else {
	x *= COLS;
	0.44;
	if(-rule()){
	if(Ygritte){
	if(x * -1){
	-foo(-1,Hodor,dog)
}
} else {
	if(0.52){

} else {
	if(destroy(( -foo() ) / Stark,-( --COLS ),-TABLE[betray(mislead(),TABLE[rule() - 16][TABLE[mislead(dog,ROWS)][Arya]])][( 7 )])){

} else {

};
	Arya += Arya
}
};
	ROWS + 0.3;
	if(-COLS){
	-bar(Hodor);
	protect(TABLE[( destroy(-37 / mislead(betray(-ROWS,-580.7))) )][rule(TABLE[-( Ygritte )][( 0.3 ) + ( ( Sansa ) )],Jon)]) * ( 80 )
} else {
	( ROWS );
	Hodor *= ( --y )
}
} else {

}
};
	foo(ROWS,-0)
}
var dog = TABLE[( 0.14 )][30.57]
def protect(Jon,Hodor){
	bar()
}
def foo(x,Arya,dog){
	if(-1){

} else {
	if(destroy(TABLE[foo(Jon)][Stark],y,foo(59,-Sansa,1))){

};
	Jon += ( Hodor + ROWS )
};
	-( ( ( --0.22 / protect(-ROWS,destroy(TABLE[( ( ( dog ) ) )][ROWS]),y) ) ) * ( -Hodor ) );
	if(( Arya )){
	if(--( -51 )){
	if(55 / mislead(( 1 ),COLS)){
	if(-59){
	-TABLE[Hodor][ROWS - ( TABLE[( rule(Hodor + mislead(foo(( ( protect() ) ) - TABLE[-TABLE[y][--TABLE[( ( ( -850.9241 ) ) ) + -0.25 * bar(( betray(protect(( -COLS ))) ))][foo(0.47)]]][TABLE[( TABLE[y][foo(14,protect(y))] * ROWS + Stark ) / destroy(-0.99)][ROWS] / Arya] / bar(Sansa,-( Hodor + ( TABLE[--( mislead() )][betray() + -850.863] ) / TABLE[Ygritte][--ROWS - -COLS] ) + ( Hodor ),TABLE[-( destroy(COLS) )][mislead()]),Stark,( protect(( --0.96 * y - -( --0.4 ) ),( COLS )) - ( ( Ygritte ) ) )),mislead(),-TABLE[( -36 )][( ( Jon ) )]),-42,0.54) )][dog] )] - Sansa;
	if(-0.66 - betray(COLS,-0.45)){
	if(-410.8){
	Stark;
	if(x){
	Jon /= 10;
	Arya -= foo(ROWS)
} else {

}
};
	if(( COLS )){

}
} else {
	dog - ( Arya );
	destroy() * Sansa / rule(( Stark ),TABLE[-63 * -66][( TABLE[( betray(Hodor / ( -foo(( betray(ROWS) ),COLS * COLS,betray(-ROWS)) )) )][-protect(--1,Sansa,( betray(Sansa,betray(-TABLE[0.72 / mislead(-Jon * -COLS - Hodor / -ROWS / betray(ROWS - ( destroy(ROWS,-dog,17) ),( TABLE[betray(Jon)][ROWS] )),( -1 ))][destroy()],Stark - TABLE[-0.8][dog],( foo() ))) ) + mislead(Hodor))] )],ROWS);
	TABLE[TABLE[-47][Sansa]][-490.3]
};
	Ygritte
} else {
	y -= ( -ROWS );
	y *= ROWS;
	( ( rule(-COLS / -37,( -100.46 / Jon ),rule(x) / x + Sansa - 100) ) )
};
	-0.27
} else {
	if(-Jon){
	if(Stark){
	if(TABLE[-mislead(-( bar(ROWS,-TABLE[rule(Hodor,rule() - 950.8234)][( Jon ) / Sansa - x] - betray(rule() - ( ( ROWS ) ))) + ( ( bar(foo(( 0.87 ),0.98)) ) ) ) / TABLE[( ( -Arya ) )][( betray(1,bar(--mislead(( foo(Jon,830.88) ),22 * rule(Sansa,COLS)))) )] * TABLE[-21 * 26][Hodor] / 330.4,protect(-Stark,1,Ygritte) / y,bar(( ( -41 * Stark ) )))][x]){

}
};
	if(( Arya / destroy(destroy(rule(ROWS),-mislead())) )){
	-88;
	Jon
} else {
	COLS * Ygritte * ROWS;
	( Arya );
	if(1 - Sansa){

}
}
};
	( ( Ygritte ) )
}
} else {
	3 * Hodor * destroy(-0.51,( COLS ),( y ));
	Arya -= -( x ) + COLS
}
}
}
assert COLS - destroy(TABLE[ROWS][----1 / --ROWS] - Jon,-ROWS) - ( ROWS ) : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){

}
assert TABLE[Hodor][protect(1,57,( ( bar(94,TABLE[betray(( bar() ),( --99 - -mislead(y) + Jon + ( TABLE[( Hodor )][--45 + -( 0.41 )] ) / TABLE[x][rule(-39)] ) / mislead(-0.92 * TABLE[rule()][0.47] / x,64) / TABLE[-COLS][ROWS])][( foo(--foo() - ( COLS ),-( TABLE[protect(1) * Arya][( ( -590.4 ) )] )) )]) ) ))] : "Fear cuts deeper than swords."
assert destroy(( 23 ) - -ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -0.09
def protect(Sansa){

}
assert Hodor : "Winter is coming"
var y = betray(bar(COLS,Arya),-Ygritte)
def mislead(Jon,Arya,y){
	Arya *= -24
}
var y = ( COLS )
def TABLE[protect(Hodor) + COLS][j] {
	0.24
}
def destroy(Arya){
	if(TABLE[-y][-0.06] - foo(mislead(rule(Hodor,--( TABLE[-COLS][rule(foo(( ROWS ),( -( ( destroy(-ROWS) ) - -39 ) - TABLE[-dog][880.9451] ) / mislead(-0.06,betray(-50.46 * betray(-34 + -47),destroy(( x * ( -ROWS ) / y )))),190.99),-1)] ) * mislead(1,rule(betray(Hodor,rule(x))),COLS) * COLS)),dog)){
	y += --( --43 )
};
	Hodor /= y
}
var Sansa = 77
assert rule(COLS) + --rule(-0.68,rule(0.41) / ( 0.32 ) * ROWS / ( protect() ) - mislead(( x ),COLS,mislead()) * foo(-( 0.41 ),-65) - -( 33 ),Stark * -0.58) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = bar(( ROWS ))
var Arya = foo(-1000.6 + Sansa)
assert protect(( 57 ) + TABLE[protect(-bar(-protect(( -( betray(COLS,( betray(-destroy(),97) )) ) - protect(Sansa) )),COLS),COLS) + -mislead(Arya) * --Ygritte + ( -( betray(rule(( ( Jon / protect(Jon) ) ) + COLS,( -destroy(( protect(Sansa,-COLS,-21) ),( protect() ) + ( ( bar(0.42) ) )) )),( ROWS )) ) ) / TABLE[mislead(--0.57)][-foo(540.21,--52,destroy(betray(34,-280.3)) / ( ROWS )) - rule(TABLE[( ( Jon + ROWS ) )][Jon],Sansa,Ygritte)] - 67][TABLE[betray(-ROWS)][( 1 )]]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Stark){
	if(630.278){
	if(ROWS){
	if(foo(-COLS,-1)){
	dog;
	-1 * 1
} else {
	if(( -37 )){
	if(-COLS){
	1 + dog;
	1
} else {
	if(( destroy(ROWS,-0.84) )){

};
	Ygritte += ( Sansa );
	rule(860.224,0.62)
}
};
	if(-betray(( Stark ))){
	-0.39 - -betray(-( 1 )) - Sansa
} else {
	if(0.93){
	-COLS
};
	Stark *= --8
}
};
	Arya -= ( x + -520.9 / destroy(-TABLE[Ygritte][TABLE[-91][( bar(( ( TABLE[protect(Jon,y)][87] ) ),mislead(-COLS + ( ROWS ) / Arya * -0.35,Sansa,( 0.97 ) + ROWS),----57 * -ROWS) )]],COLS) ) + -Sansa
}
};
	-protect();
	x -= 0.94
}
assert -TABLE[dog][0.94] : "One can not simply parse himself"
def TABLE[Arya][k] {
	-0.15;
	Stark -= -0.81
}
assert Arya : "One can not simply parse himself"
assert -( ROWS ) : "What do we say to the Lord of Death?"
assert ( --( ( bar(-1,-0.63) ) ) ) : "What do we say to the Lord of Death?"
def TABLE[( Sansa )][j] {
	-980.6
}
var Jon = mislead(-0.37 * Stark,COLS)
var y = ( betray() )
var y = rule(-Ygritte,( -ROWS ))
def TABLE[( Hodor * --0.01 * Sansa ) + Arya][k] {
	y -= 20;
	ROWS;
	Stark -= mislead(Arya,1,( ( COLS ) ))
}
var Jon = Hodor
def TABLE[Stark * Arya][k] {
	if(( ( -0.12 ) )){
	Stark /= y
} else {
	Jon - ( ( -mislead() ) );
	y -= rule(-74,COLS);
	-0.73
};
	if(mislead(Ygritte)){
	if(betray(COLS,66)){
	Hodor /= -84;
	if(protect(bar(TABLE[Ygritte - ( TABLE[-TABLE[rule(Hodor) * bar(( -99 ))][COLS] / Arya][TABLE[ROWS + ( x )][protect(( --TABLE[ROWS][( ( 72 ) )] ))]] )][Ygritte] - betray(TABLE[-( rule(dog) / mislead(-rule(dog / rule(-660.64,COLS,-protect(rule(-65,-Jon),dog)),-dog / ( COLS ) * ( Arya + 0.31 )),( ( protect(protect(0.17,bar(COLS)),1) ) )) )][--( -destroy(Hodor,-0.97) )] / -( -TABLE[betray(Sansa) / betray(dog,rule(Arya,mislead(( COLS ),dog,( Jon )))) / ( Ygritte ) - Stark][( Sansa )] ),( mislead(Arya,Ygritte) )),-0.52 - ( y ),foo(-870.388)),ROWS)){
	-0.9;
	if(TABLE[foo(-1,protect(y * --bar(Stark),-rule(Arya,-74),-( ROWS ))) - foo(Jon,-TABLE[-690.723][-destroy(-ROWS + 160.443 * Jon)],foo(( ROWS ),betray()))][foo(Sansa,COLS)]){

} else {
	if(COLS){
	ROWS * -0.34;
	COLS
};
	if(-rule(( 41 ) * ( mislead(-0.72,87) )) / ROWS){
	-ROWS
} else {
	if(foo(41,Ygritte - --380.13)){
	x - protect(( TABLE[TABLE[( -ROWS )][-dog]][( TABLE[bar()][protect(-0.51 / -Arya - 69)] )] ),bar(( protect(Ygritte,rule(-490.61)) * Jon ),foo()));
	if(Arya){
	Jon *= COLS
} else {
	Sansa
};
	if(ROWS){
	if(-TABLE[1][y]){
	if(( dog )){
	Hodor / -rule(ROWS);
	if(-( protect(COLS,Jon) )){
	-TABLE[mislead(0.91,Arya)][--14];
	Stark += 27 * ( -65 )
}
}
} else {
	0.71;
	rule(-( ( COLS ) ),--betray(( --Stark ),--1) - -45 - mislead(-650.95,destroy(67)),dog);
	if(ROWS){
	Arya += COLS
}
}
}
} else {
	if(( ( destroy() ) )){
	Arya += TABLE[-0.59][( Stark )]
} else {
	y -= ROWS + destroy() * rule(Jon,destroy(0.77 - COLS,dog),COLS)
}
}
}
}
} else {
	Arya /= ( Sansa ) * --41;
	Stark += ROWS / Sansa;
	x /= 45
}
}
} else {
	bar(foo(foo()),COLS)
}
}
var Jon = ( --COLS )
var Hodor = -foo(-ROWS / destroy(-18),dog - ( ( y ) ))
def TABLE[0.72][j] {

}
assert -Sansa : "One can not simply parse himself"
def TABLE[-1][j] {
	if(1){
	dog *= dog
}
}
var Jon = ( -TABLE[--Stark][-TABLE[destroy(-COLS,bar() + Jon - ROWS,ROWS * ---0.41 - TABLE[0.07][--( 420.39 )])][( -0.92 )]] + Jon + 1 ) + ( rule(rule(0.26,( 1 )),ROWS * COLS / ( 910.64 )) ) * -12
assert -97 : "Winter is coming"
var Stark = COLS
def TABLE[-ROWS][k] {
	if(TABLE[--1 - -1][betray(COLS,( rule(-650.5008,Hodor) ) / y,( x ) * ( -bar(( ROWS ),Hodor * bar(TABLE[dog][( ( ( -mislead(( mislead(-1,( -TABLE[78][-0.03] ) * Hodor + ( y ) + -Hodor / Ygritte - Arya) )) ) ) )],-( -85 ) * ( ( --20.485 + -0.21 / Jon / ( -130.5392 / -COLS ) ) / ( Stark ) + 37 ),Stark * TABLE[( betray(( ( TABLE[betray(--COLS + -Hodor,-0.42 + -440.74,-bar(COLS))][-0.29] ) ),( Arya )) )][-dog] * Ygritte),-110.5) )) - COLS]){
	if(COLS - Jon){
	if(-mislead(( -TABLE[x][89] ),mislead(-1),bar(Arya) / destroy(Arya) - Jon)){
	Arya += -2 - Stark
};
	TABLE[-dog][foo(COLS,protect() * -( TABLE[COLS][COLS] ))]
} else {
	if(--ROWS){
	COLS;
	-670.31 + -Jon;
	if(Sansa){

}
};
	Stark;
	if(-COLS){
	if(--( ( --protect() ) )){
	y += -0.59 + dog
}
} else {
	Stark *= ( 0.41 );
	destroy()
}
};
	Arya -= -980.61
} else {
	if(63){
	Ygritte;
	mislead(( COLS ))
}
};
	if(ROWS){
	dog *= x;
	x -= betray(--69,530.8787 + rule(TABLE[( ( -87 ) )][--x * -81 / ( foo(rule(47,x,-820.32)) - -0.77 )],99),destroy(protect(TABLE[bar(COLS,-( COLS + TABLE[foo()][( -TABLE[Ygritte][dog] )] )) + COLS + destroy(( ( Ygritte ) ) * ROWS) + y - 1][protect()],-( 1 ) + x,1 / 1),-mislead(-4,y)))
} else {
	if(Ygritte){
	-foo(mislead(( Arya ) / ROWS - rule(TABLE[foo(-protect(),x)][( -34 )])))
} else {
	rule(Ygritte,-21);
	rule(betray(),-0.87 - ROWS)
}
};
	if(( --80 )){
	if(TABLE[800.24][betray(-13 / foo(-ROWS),Sansa)]){
	if(COLS){
	if(Jon){
	( Jon );
	Hodor *= -0.21;
	if(COLS){
	( 86 );
	x *= ( Arya );
	if(( --betray(ROWS,-dog,ROWS) + TABLE[24][-0.49] / mislead(-610.38,-18) * Hodor / protect(1,0.97,-TABLE[280.5 * TABLE[Stark][destroy(COLS * -TABLE[rule(Ygritte,-1) * foo(Sansa,Arya) / COLS][TABLE[( mislead(( Ygritte ),TABLE[( -betray(Stark / Stark,TABLE[rule(-970.83)][-ROWS]) )][Stark] / ( foo() )) )][0.09]] / ROWS)]][--0.88]) )){

}
} else {
	if(betray(( Hodor ),x,Arya)){
	if(69){
	if(TABLE[( -COLS )][-Sansa]){

} else {
	x;
	if(protect(-betray(),x,Hodor)){
	Sansa;
	Jon * ( COLS ) - -TABLE[dog][Hodor] * Arya + -0.21;
	protect()
} else {
	Arya /= Stark + Arya
};
	dog *= -( -0.47 )
};
	dog += destroy(( -foo(bar(mislead(-TABLE[mislead(--( TABLE[-betray(Ygritte * --20,foo(Hodor),( ( betray(Stark,mislead() * ( ----COLS - ( -0.9 / ROWS * -ROWS ) - --( ( Arya / ( ( betray() ) ) - -betray(400.91 - -8 / -1,670.12,-360.7743) * ( mislead(37) ) ) ) ) - ( --mislead(betray(-270.84,( ( dog ) * 1 ))) ) * ROWS * ROWS) ) ))][foo(-Hodor)] - ( ROWS ) + Sansa * ( dog ) + dog ) - ( -640.4 ) / ROWS - --foo(--0.18))][-1],mislead(COLS),TABLE[1][ROWS])),-( ( COLS ) )) ),1);
	( 980.859 )
} else {
	if(-Stark){
	if(-1){
	if(x * ---( -( bar(foo(-26,destroy()),COLS) - --0.09 ) )){
	if(mislead(-foo(( ( protect() ) ) - --( destroy(35) ),( -( destroy(betray(foo(Jon / ROWS),Stark),-0.64) ) * -66 / ( TABLE[-0.41][COLS] ) )))){
	ROWS
}
}
} else {
	if(2){
	if(--TABLE[protect(rule(-0.34,dog - ( -ROWS )),protect(ROWS))][--( Jon )]){
	if(-1){
	TABLE[( --0.21 )][( mislead() * 1 / Hodor )];
	TABLE[TABLE[ROWS][-( Sansa * TABLE[Jon][-Hodor] )]][Ygritte]
};
	Hodor += -42;
	Arya *= ( 1 ) / 0.33
};
	( -( -rule(Arya,Arya / --( Stark ) + COLS / mislead()) ) );
	7 - -31
} else {
	x -= Jon
}
};
	if(( ( y ) ) + Arya){

}
} else {
	y += destroy(dog);
	if(ROWS){
	Stark += bar(Ygritte * -14,Arya) / --14
} else {
	y -= ( -foo(ROWS,---0.69) * ( -1 + ROWS ) );
	if(-ROWS + Ygritte){
	if(( -0.13 + protect(( --( 0.87 ) * protect(-63) ) + y,Sansa) / Arya - protect(Stark) )){

} else {
	if(--270.993){
	( protect(36,-0.83 * ( Stark )) )
} else {
	Stark *= Sansa
};
	ROWS
};
	if(Sansa){
	COLS
};
	y /= COLS
}
};
	if(bar(ROWS)){
	if(y / ROWS){

};
	COLS
}
}
};
	betray(270.7615);
	Stark *= protect(900.027,( -( ( ( ( ---200.853 ) ) ) ) - ( TABLE[betray(destroy(--48,COLS))][destroy(bar())] ) ),--bar(Hodor * foo(-1,COLS,Arya),-rule(530.2891,Arya * 40 + ( y + -( bar() ) + -Ygritte ) * x / Sansa + protect(-betray(( y ) + 0.42 * Jon),1,0.73)),ROWS + x))
}
}
};
	if(-1){

};
	Ygritte += rule(55 * mislead(590.7,y)) * ( ( bar(( betray(ROWS,-ROWS) ),protect(Ygritte)) ) / ( --rule(-destroy(0.55,Arya,-1)) ) )
};
	dog
} else {
	destroy(y)
};
	protect(-( protect(TABLE[Stark / TABLE[---560.384][COLS]][y]) ) + 0.13,-0.26)
}
}
def destroy(Sansa){
	Hodor /= dog
}
assert Stark : "What do we say to the Lord of Death?"
def TABLE[-0.42][k] {
	Arya *= 440.99;
	if(-32){

}
}
def TABLE[TABLE[Jon][bar(foo(( protect(( ROWS ) + ( ( betray(-betray(y,destroy(0 / dog) / mislead(( -60 ),dog)) / TABLE[-y / -Arya / ( 72 )][Arya]) ) ),foo()) )),Ygritte,COLS)]][i] {
	( rule(Arya) );
	dog *= -830.06;
	if(bar(Hodor,-760.3)){

}
}
assert -0.59 : "What do we say to the Lord of Death?"
assert --protect(Hodor,COLS,rule(ROWS,ROWS * ( ( ( Ygritte ) - -ROWS * ROWS ) ) - dog) - COLS) : "Winter is coming"
def foo(Jon,Arya){
	Ygritte /= 0.9;
	dog -= mislead(TABLE[-Hodor][( Sansa )])
}
assert rule(Arya,-53) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -destroy(Jon,destroy(-0.28,--dog) - rule(ROWS,foo(( -540.5495 ),0.52) + ( ( 0.08 ) ))) - -0.73 : "One can not simply parse himself"
def TABLE[TABLE[-( TABLE[Jon][ROWS] )][( -bar(foo(ROWS,0.35)) )]][k] {
	-betray(-1,ROWS) / 0.18;
	Sansa *= ( ROWS )
}
assert --1 * destroy(-0.45) + foo(TABLE[TABLE[72][-14]][dog]) : "What do we say to the Lord of Death?"
var Arya = 98 * COLS
var Hodor = ( Jon )
def TABLE[( Hodor )][j] {
	Sansa *= ( Stark )
}
var Sansa = destroy(-42,--470.0276,Sansa * ( --protect(TABLE[Sansa][-( 0.82 )],( destroy(( 57 )) )) + 30 )) / ( -960.4 )
def TABLE[1][i] {
	4;
	TABLE[COLS][protect(Hodor)]
}
assert 0.37 : "Winter is coming"
var Jon = 1
assert rule(rule(Stark,betray(-bar(( betray() )))) - bar(-80,destroy(-ROWS / destroy(Arya / Hodor) / destroy(rule(protect(---76),( mislead(( protect(Jon + ( x - x ) + -x * -protect(),( betray(20) ),( protect(rule(ROWS,destroy(-betray(),y,-0.05)) - ROWS,-rule(ROWS,Sansa,foo(Ygritte,( destroy(dog / -3,ROWS) ))) * destroy(COLS,-31) / -( Stark ) - -rule(--Ygritte,betray())) + ( Jon ) )) ) * ---42) ),-57 * ( -0.37 )),rule() * ( x ))),-y)) : "One can not simply parse himself"
var Stark = -destroy(0.3 * ( bar(( rule(67) * destroy(COLS,betray(),-30) )) ),-78,( 1 * ( Arya ) ))
assert COLS / Hodor : "Winter is coming"
assert ROWS : "What do we say to the Lord of Death?"
var x = --30.752
assert dog : "Fear cuts deeper than swords."
assert TABLE[TABLE[( bar() )][dog]][--mislead(Ygritte)] : "What do we say to the Lord of Death?"
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(){
	if(Sansa){
	rule(( mislead(rule(),--980.2322 + 10,bar(bar(-TABLE[-0.6 * ( -Arya ) / ( -ROWS / -( 0.88 ) - dog - COLS )][0.17]))) ));
	Jon /= ROWS;
	if(ROWS){
	if(-protect(Stark,-rule(0.98 / -11 + -48)) * ( 150.64 )){
	if(--bar() - ( Stark ) + betray(( protect(-41,mislead()) ),y)){
	-TABLE[ROWS][( Ygritte )] - ROWS;
	( Hodor );
	foo(-110.2)
} else {
	x /= ( ROWS );
	( Sansa )
}
} else {
	if(-0.97){
	( -Sansa );
	x *= ( ( -ROWS ) / protect(-COLS - y,-0.99) )
};
	Jon - 43 / destroy(-1 - dog,( TABLE[ROWS][rule(Stark / foo(destroy(),11 + betray(ROWS,y)) - 65)] ));
	if(COLS){

}
};
	Arya += betray(foo())
}
} else {
	( -( TABLE[Arya][ROWS] ) );
	Hodor += bar(destroy(mislead(( -( ( -24 ) ) ),betray(foo(( dog ),( ---( 67 ) / -( ( 80 ) ) ),protect(0.2,Sansa)),-44,120.2)),Hodor,protect(COLS) * TABLE[( ROWS )][( TABLE[x][-24] )]))
};
	if(-( -( -( Ygritte ) - ( Sansa ) ) / -800.1581 ) * mislead(dog,0.72)){
	Sansa += 0.45
}
}
def TABLE[COLS][j] {
	( -0.23 );
	if(-Sansa - -0.87 / mislead(-ROWS,dog)){
	betray(160.8);
	Stark *= ROWS
} else {
	x += COLS
};
	protect()
}
def destroy(x,Ygritte){
	if(--0.05 + Jon){
	if(( foo(( 1 ),( foo(( ROWS ) * ( 1 ) * ( 520.014 )) )) ) - ( destroy() )){
	( Ygritte ) + Hodor;
	if(ROWS){
	Sansa *= ( Ygritte );
	dog *= COLS;
	if(---COLS - COLS){
	Ygritte -= -1;
	if(-0.75 - x){

}
} else {
	-( rule(( -1 ),-TABLE[rule(ROWS,bar(Arya,Sansa,Sansa),15)][0.77]) ) * Jon;
	bar(( 61 ),ROWS) / bar(Arya,x,foo(( 87 ) * COLS / betray(protect(-( ( 0.37 ) ) / x))));
	COLS * ( -TABLE[---870.123 + protect(580.64 - 40)][Jon] )
}
} else {

}
};
	if(Ygritte){
	Hodor -= dog;
	Sansa += 60.2
};
	protect(mislead(TABLE[COLS][( ROWS )],rule(0.63,31),destroy(protect(ROWS,-46 * -( Arya )),( Ygritte ))))
} else {
	( ( ( 32 ) ) )
}
}
var Hodor = rule(-8,COLS,-1)
var Sansa = -36
def TABLE[TABLE[COLS][TABLE[-destroy(ROWS,Arya)][( rule(--0.07,Arya,ROWS) )]]][k] {
	if(mislead(destroy(-1,rule(-29,COLS)),Ygritte,x)){
	if(-( -x / ( dog + ( COLS ) ) )){

};
	( protect(mislead(COLS,betray(Arya),Stark) + dog + 41,foo() / betray(90.137 + betray(ROWS),destroy(-mislead(dog,Sansa) - TABLE[x][-dog],x,--( -59 ))),mislead(-1,x)) );
	x /= ( rule(COLS) )
};
	Stark
}
def TABLE[Arya][j] {
	( Hodor );
	Stark
}
assert foo(( foo() ) * 450.7) : "Fear cuts deeper than swords."
def mislead(Jon,Arya,Arya){
	if(Jon){
	COLS;
	if(-18){
	Ygritte
};
	if(dog){
	Hodor *= ( -55 ) + 24;
	protect(43,-Hodor / -1,0.35);
	Stark
}
}
}
def TABLE[0.38][i] {
	Hodor += TABLE[ROWS / COLS][610.529];
	-TABLE[-( 31 )][TABLE[-0.06][dog]] * -0.17 / Arya;
	( Sansa )
}
def betray(Stark){
	if(1){
	0.95
}
}
assert ( -COLS ) * ROWS : "Nothing burns like the cold."
var Stark = -21
def TABLE[destroy(Jon,protect(),COLS)][k] {
	if(rule(( COLS ),-0.5 - ( -52 ))){
	destroy(-( Hodor / Hodor ) - y,-dog);
	Stark
};
	TABLE[TABLE[( mislead(mislead(-( -Jon / -Ygritte )) * 0.22) ) + foo(protect(ROWS,ROWS,TABLE[TABLE[COLS][( ( TABLE[( --1 )][--1] - COLS ) )]][ROWS] * Stark),Jon,430.781)][( TABLE[COLS - destroy(destroy(( Hodor ),0.74,foo(( ( ( 29 ) ) ),rule(Stark / --destroy() - bar(TABLE[( Stark )][COLS])))))][( Hodor )] )]][mislead(COLS)]
}
def mislead(x){
	y
}
def mislead(Sansa,Jon){
	if(--0.61 * dog){
	y /= Ygritte
} else {
	COLS;
	if(TABLE[Arya][protect(ROWS + Hodor * rule(Stark,ROWS,-y))]){
	if(Arya){
	Hodor -= TABLE[Stark][-COLS] + ( ( -66 ) )
}
}
};
	( Stark )
}
def destroy(x){
	Stark /= rule(ROWS,bar())
}
assert Stark : "Winter is coming"
assert 0.75 : "What do we say to the Lord of Death?"
def TABLE[1][k] {
	--( --destroy(rule(40,y)) );
	if(-COLS / TABLE[390.35][-mislead(Stark)]){
	if(-16 - ROWS){
	betray(-59);
	Jon /= ( 0.47 );
	x *= ( rule(TABLE[bar(( x - protect(-300.619,( -TABLE[( bar(dog) - 720.3 )][protect()] ),( ( ( y - COLS ) ) )) ),( protect(protect(y)) + TABLE[x][( Arya )] )) - foo(destroy(( -80 ),COLS) - -0.01,COLS * -0.33)][-33]) )
} else {
	if(COLS){
	protect(ROWS);
	y += bar(--66,y);
	betray(Stark,Arya)
} else {
	if(-1){

} else {
	mislead(COLS);
	Stark
};
	if(Arya){
	y -= destroy(( -58 / -ROWS ),-Arya,ROWS);
	-( 0.88 + TABLE[COLS][92 - ( ROWS * ROWS )] ) - TABLE[TABLE[-mislead(ROWS) / -bar(betray(( ( COLS ) )),destroy())][Arya] / Ygritte / Ygritte][ROWS]
} else {
	TABLE[COLS][-COLS]
}
};
	if(--Ygritte - ROWS){
	if(destroy(-92,55,( ROWS )) * ( -ROWS * ( ( COLS ) ) )){
	( destroy(( Jon )) );
	-1;
	Hodor *= -COLS
}
} else {

};
	Jon -= Stark
};
	if(x){

}
};
	x *= protect(mislead(( 0.79 ),73))
}
var Jon = ( bar() )
def bar(){
	Ygritte /= mislead(( TABLE[Hodor][-protect(Hodor)] )) * -41 * -( protect(ROWS) ) * ROWS
}
assert y / ( -betray(TABLE[bar()][ROWS]) ) : "Nothing burns like the cold."
def TABLE[( destroy(-( TABLE[---14][-TABLE[0.19][Ygritte * mislead(( ROWS ),-TABLE[ROWS / ( COLS )][foo(-rule(( ( ROWS ) ),-0.35,Stark)) - Ygritte])]] ),( -580.5 )) )][k] {
	Ygritte *= -0.04;
	if(Ygritte){

} else {
	x /= Jon;
	betray(-ROWS,bar(( 0.92 )));
	if(( 0.98 )){
	if(Ygritte){
	2
} else {
	y -= -( Arya );
	Jon += ROWS
};
	y /= -1
}
}
}
def rule(Ygritte,Hodor){

}
var dog = --93 / -( COLS )
var y = Jon
assert ( dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Stark][k] {
	if(Hodor){
	Arya;
	if(TABLE[Hodor][( ( bar(Arya * ( Ygritte ) + COLS) ) ) + ( Stark ) / -foo(-( 0.61 ))]){
	Arya -= COLS + COLS * ( -( bar(COLS,foo(-TABLE[-0.49][y / -0.97 * ROWS],-170.435),y) * protect(87) ) - ( Ygritte ) ) - Ygritte - -COLS;
	if(x){
	y -= ( betray(Sansa,bar()) )
}
} else {
	x /= ROWS;
	if(protect(x,( -0.27 ),-16)){
	-betray(--0.36,-betray(bar(860.61,--10.9524,COLS),ROWS));
	y -= TABLE[( ROWS )][Stark]
} else {
	Ygritte += 0.42
};
	y -= protect(( --42 - COLS + -( Ygritte - mislead(1 - -0.77,protect(( ( bar() ) ))) - ROWS - 710.817 * ( rule(Stark) ) ) ))
}
} else {
	dog += ( -ROWS )
};
	if(COLS){
	if(( 1 )){

} else {

}
}
}
def foo(y,Sansa){
	dog *= ( bar(rule(bar(0.74,--0.14,foo(Jon))),-Arya) );
	ROWS
}
var Stark = COLS
def TABLE[x][i] {
	if(--ROWS - ROWS){
	Jon += -90
}
}
def bar(){
	ROWS
}
def TABLE[( ROWS )][k] {
	Stark -= foo(rule(( Sansa ),destroy(( ---Sansa ) * ( ---TABLE[ROWS][betray(---TABLE[( 17 )][( rule(60,( Ygritte ),COLS) ) - bar() - -Hodor - --dog],0.7)] ) * ( -ROWS ),COLS),( ---COLS + Stark )),ROWS,Hodor)
}
var y = protect()
def betray(x,Ygritte){
	COLS;
	TABLE[TABLE[dog * -0.97][x]][-1] - -( ( ( bar(--0.15) ) ) );
	if(-0.76){

}
}
def foo(Hodor,Stark){
	Arya += -( -0.52 );
	destroy(( destroy(-0.88,ROWS) ),dog,Hodor / ROWS)
}
assert ( -COLS ) : "One can not simply parse himself"
def mislead(x){
	y += protect(COLS)
}
def protect(Ygritte,Jon,y){
	-ROWS
}
def betray(){
	---0.93;
	Sansa -= -42
}
assert COLS : "Winter is coming"
def foo(Hodor){
	COLS;
	97 - 0.89;
	Jon -= -rule()
}
assert -Arya : "One can not simply parse himself"
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( Hodor )][j] {
	y *= Jon;
	Hodor
}
def TABLE[Sansa][j] {
	x += ( x )
}
var dog = COLS
def TABLE[-( -57 )][k] {
	dog += ROWS;
	Sansa += --35
}
var y = betray(-69 + COLS) - x
var Hodor = x
def TABLE[-22][k] {
	y;
	y -= ( COLS + Ygritte / ( Stark ) );
	if(COLS){
	0.82;
	if(( destroy(foo() * dog * TABLE[ROWS][( y ) / COLS],( -1 )) )){
	if(foo(-betray(),-20)){
	Ygritte -= y
};
	-18 - -destroy(Arya) * -960.085;
	Arya *= protect()
};
	x
} else {

}
}
def betray(x){
	Hodor -= ( 1 ) * rule();
	-68 - protect()
}
var dog = bar(dog,Ygritte,0.77)
assert --bar(dog,bar(100.488)) : "Nothing burns like the cold."
var y = betray(TABLE[1][-740.266],Ygritte)
def destroy(Arya,Jon){

}
def protect(Sansa){
	x /= ( ( TABLE[bar(-ROWS,Hodor,0.71)][-( -540.51 )] ) * -mislead(1,( ( 0.54 ) )) - -protect(-( -770.69 ),--ROWS + ( ---Hodor - foo() / -0.92 ) / destroy(betray(Arya * COLS + Stark,Jon,( -19 )) * COLS,Sansa) - 970.555 / ( ( -destroy(Hodor,( --( -0.26 ) + ( ROWS + ( TABLE[-0.83 / -Ygritte][-20 - ROWS / --x] ) ) / -Sansa ) / ( mislead() ) / foo(x) / ( Arya ) * Jon) ) ),( Jon )) );
	if(( mislead() ) / Sansa / mislead(( y ),Arya) / dog * ( --ROWS + y )){
	( ( -mislead(-( ( betray(ROWS) ) ),-destroy() * Jon) ) )
} else {
	-Jon
};
	if(( --1 - -Stark + 18 )){
	if(protect(Hodor)){
	if(( ( --COLS ) )){
	if(-56){
	-71;
	if(rule(Jon,( TABLE[-0.83][( 0.59 )] ),( -COLS ))){
	( betray(mislead(ROWS,-COLS / x * 1 + -protect(rule(TABLE[( betray() )][-52],( betray(mislead(),Ygritte) ) * Ygritte,y)) * ( TABLE[-protect(bar(TABLE[destroy(( -0.29 ),Jon,foo(-0.02))][COLS],-COLS / Ygritte) - -0.41 / ( ( TABLE[bar(-dog) + Arya][-ROWS] ) - ( ( betray(( ( rule(-78) ) ),Sansa * bar(destroy(TABLE[-0.85 / bar(ROWS)][COLS],89),-bar(-750.2884,-protect(COLS,-TABLE[Stark][( y )] / TABLE[0.91][ROWS] - 0.82),-72 - -y),-Arya),-( -Hodor )) ) ) ))][( --TABLE[Sansa][TABLE[ROWS][( foo(( -protect(--770.01,-( -0.19 )) )) )]] )] ) - COLS - Hodor - ( ( -COLS / -( ( protect(foo(protect(-y / betray(COLS * ( 69 ),dog),-0.65)),Arya,mislead(x,( TABLE[bar(ROWS)][ROWS / -1] ))) ) + -55 ) ) )) + ROWS,dog - ( Ygritte ),Sansa - Stark) + --Jon );
	if(51){
	Sansa += destroy();
	Sansa -= ( -destroy(-410.7,( -COLS ) * mislead(( ROWS ),( protect(Arya,( TABLE[y][-( -rule(-26) / -( ( Jon ) ) - ( COLS ) + 0.41 )] )) )) + 16 + ROWS) )
}
} else {
	Hodor /= ROWS
}
} else {
	Sansa += ( 340.309 );
	if(Stark){
	if(--480.99){
	--TABLE[destroy(-destroy(destroy(),COLS,TABLE[15][foo(( foo(y,TABLE[protect(-1,betray(-0.04,TABLE[TABLE[Jon][-( ( Sansa ) )]][COLS]) - ( mislead(( rule(mislead(--0.65,TABLE[( -620.7437 )][protect(( ( TABLE[TABLE[betray(mislead(ROWS),Ygritte)][TABLE[mislead(rule(betray(dog - protect(ROWS),TABLE[ROWS + mislead(dog,Arya)][--530.596])))][COLS]]][ROWS] ) )) + rule(( ( Sansa ) ),60)],bar(protect(0.94,COLS))),Hodor) )) ))][0.29]) ),destroy(-foo(51,-betray(--0.87 + ( ( ( COLS + y - ( TABLE[TABLE[rule(-mislead(x))][betray(-57,( bar(-TABLE[( -( protect(TABLE[rule(( x ))][Jon],TABLE[betray(rule(TABLE[TABLE[( -ROWS )][---mislead(( ROWS ),-( dog )) + TABLE[ROWS][1] + 0.33 + --Jon]][( TABLE[-y][-Stark] ) - ----COLS + Sansa + Hodor],mislead(990.19,betray()) * -mislead(foo(( COLS ))) / ( ( ( 0.07 ) + x * -Hodor ) )))][--Hodor]) / TABLE[( foo(rule()) )][--37] ) )][--Arya * Hodor] * 0.05,-Sansa + -TABLE[( betray(Hodor) )][-betray(-COLS,-9,1)],( ( Jon + -( mislead(rule(Hodor / TABLE[( TABLE[mislead(0.12,-26,foo(ROWS,0.42))][-COLS - destroy(( -( ( -( TABLE[( Ygritte )][24] ) ) ) ),mislead(--betray(Hodor) + -Arya,--0.84 + -730.47))] )][y],TABLE[protect() * ROWS][destroy(0.56,( --47 ),mislead(-Ygritte,TABLE[71][y]))]),( 0.92 ),( 1 ) + ROWS) ) - 0.87 ) * -31 )) ))]][bar(( TABLE[Sansa][COLS] ))] ) + destroy(Arya,ROWS) / -Jon ) ) ),( betray(-Sansa + COLS,--0.32 + ( Ygritte )) * ROWS ),rule(-( rule(dog) ),( -( ( COLS ) ) ),-( ---Hodor + TABLE[-0.81][0.36] + -280.5 ))),bar(( dog ),-0.31,-destroy(-bar(( ( protect(betray(--ROWS / 6,Ygritte)) ) )) + ( Stark ))))))]))][destroy(TABLE[ROWS][---COLS * -Hodor / -1])] * betray(bar(x)) + ( 0.4 );
	if(destroy()){
	if(ROWS){
	Arya;
	protect(0.53,Sansa,-1)
}
}
} else {
	betray(COLS,-83,bar(( Arya ),( ( -98 ) / ROWS ))) - ( -TABLE[bar(bar(-mislead(-26) * Stark,Ygritte - x) * Stark / -( -30 ) * Arya,ROWS / destroy(mislead(bar(y) / -950.984),-bar()) + COLS * ( ROWS ),-1 / 1) / x][destroy(ROWS + 200.8)] / -130.4095 ) - bar(( 240.69 ),( ( -Sansa ) ),foo(bar(-9)));
	COLS
};
	dog *= COLS / mislead(-protect(dog,ROWS))
}
};
	Ygritte *= --protect(bar(-COLS,-( -0.05 )),-0.57,( ( ( -mislead() ) ) ));
	Ygritte += mislead(y)
} else {

}
} else {
	if(( ( ( Hodor / ( TABLE[-84][Hodor * -betray(-bar(betray(97,380.968,( ( -x - foo(( foo(--( -( -Ygritte ) )) ) / -1) ) / mislead(ROWS,39) ))) + 0.46,( x ),( betray(y,betray(( COLS + -y ),mislead(--Ygritte,-COLS),betray()),-rule(93)) )) + COLS - TABLE[1 - ROWS * 10 / x][Stark]] ) ) ) * ( ( dog ) ) + ( -0.48 ) )){
	Ygritte += dog;
	ROWS
} else {
	if(-ROWS + -78){
	Stark += y
};
	if(-rule(destroy(( -32 )),COLS)){

} else {

}
};
	if(ROWS){
	if(-( COLS )){
	Sansa;
	130.288
} else {

}
} else {
	if(-x * -0.47){
	if(dog){

}
} else {

}
};
	if(rule(--50 / 27)){
	Arya /= -50;
	Jon *= TABLE[betray()][Jon] * ( ( Sansa ) )
} else {
	if(COLS){

} else {
	if(mislead(-( ( TABLE[-540.89][260.84] ) ),( x ))){
	if(( ( Sansa ) )){
	Arya *= ( TABLE[0.51][ROWS] - TABLE[( -dog * Sansa ) - mislead(-( 74 ) - destroy(TABLE[( COLS )][destroy(( ( mislead(betray()) ) ) / ( 700.6 + COLS ))],-240.131) * Sansa + ( 87 ))][destroy(-TABLE[-92][bar(-36)],ROWS) * -( -TABLE[--Stark - COLS - -0.98][Stark] * y - dog + COLS )] );
	Hodor *= COLS;
	--920.89
} else {
	Ygritte *= --64;
	x /= --52
};
	if(Sansa){
	-1
} else {
	if(COLS + y){

}
}
} else {
	if(ROWS + 1){
	( ( destroy(dog / mislead(( 880.4 ),TABLE[-1][( ( -mislead(Arya) ) )],-0.8),-0.4 + y / 1,foo(Hodor,rule(Sansa))) - x ) );
	Arya /= ( -80 ) + betray(Sansa,48 / ( ( destroy() ) ))
} else {
	Jon -= mislead(-ROWS,0.53);
	-betray()
}
};
	-0.63
};
	Stark -= Ygritte
}
}
}
}
def TABLE[( ROWS )][k] {
	if(x){
	if(TABLE[mislead(0,Ygritte + x,Stark)][Jon]){
	-bar(-( COLS ),0.07)
} else {

}
}
}
def betray(){
	if(610.87){
	x /= rule(y,-COLS);
	if(-ROWS / ( Sansa )){

}
}
}
def betray(x){
	Arya *= -1
}
assert Ygritte : "Nothing burns like the cold."
var Sansa = ( y ) - protect(( Jon / ROWS + protect(rule(destroy(-dog),COLS),-100.9596) + ( ( -52 ) ) ) + x / -0.69 + ----0.62)
var dog = ( ( ( -0.22 ) * ( Stark ) * -1 * COLS ) )
assert TABLE[--destroy(Stark,--36) * -foo(-910.039)][-81 * TABLE[( 1 )][bar()] / y] : "One can not simply parse himself"
assert ( -bar(( 0.19 )) - rule() + Stark ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--1][k] {
	if(( -ROWS )){
	Jon += -rule();
	if(bar()){
	if(( TABLE[COLS][1] )){
	y /= Jon;
	Stark -= ( -( rule(-( -( rule(Sansa) ) ) - -1) + 390.4 ) )
}
}
};
	if(( ROWS )){

}
}
assert foo(ROWS,destroy(( ( betray(-ROWS / ROWS + dog * TABLE[betray() * Sansa][( mislead() )] / dog / destroy(Arya,--0.16),-50 / Arya) ) / Stark )),-ROWS) : "Winter is coming"
var Hodor = bar(betray(ROWS,-bar(Hodor)) * 0.54,( ROWS ),dog / bar(77 + protect(-10.6,x) - ( --0.36 ),betray()))
def TABLE[mislead(destroy(),protect(-ROWS / ( ( -ROWS ) ),-( 0 ),( Sansa )))][i] {

}
def betray(){
	dog;
	Stark += y
}
var Sansa = -COLS
def protect(Ygritte,Arya){

}
assert -( Ygritte ) + betray(( Sansa + -Stark - -920.5265 - ( 0.61 ) )) + -destroy(foo(ROWS,protect(dog + --rule(protect(),ROWS / COLS - -820.558 / -TABLE[Sansa][----( y ) + rule()]) + TABLE[TABLE[( Ygritte )][-( -TABLE[destroy(-bar(--TABLE[-1][-0.22],-Sansa),dog) - 1][-1 - ( mislead(-destroy(COLS),x,TABLE[( x )][mislead(-1 * TABLE[---53 / COLS - ( x )][x])]) )] ) + -rule(0.88,destroy(61,1 / mislead(-Stark,Stark) + foo(0.13) + COLS,Jon + -1))]][y] + ROWS,Hodor))) / -COLS * rule() / -foo(COLS) : "Nothing burns like the cold."
def TABLE[-18][i] {

}
var dog = protect(COLS)
def TABLE[96][i] {
	( COLS ) + Hodor;
	if(--ROWS * y){
	Sansa /= 69 - ROWS;
	-bar(---14);
	x /= ( mislead(--490.256) * Hodor )
} else {
	if(ROWS + -0.39 * COLS + protect(( -Sansa ))){
	bar(ROWS,COLS,310.2);
	Sansa += rule(Hodor)
} else {
	x *= ( Stark * Ygritte );
	y *= ROWS;
	Hodor *= ( -1 )
}
};
	Ygritte * Ygritte
}
var x = Sansa
def TABLE[TABLE[0.37][Sansa + COLS]][j] {
	( ROWS * bar(-0.23) )
}
var Ygritte = ( ( Ygritte ) * ( ( ( Jon ) ) ) )
assert x : "What do we say to the Lord of Death?"
var x = ( Sansa )
var Hodor = COLS * -( Sansa - --98 / -52 )
assert TABLE[1][0.97] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -TABLE[ROWS][betray() / ( Hodor ) / Sansa / 0.07] : "Nothing burns like the cold."
var Ygritte = Sansa
def bar(){
	( -450.24 )
}
def foo(Jon){
	Arya += Ygritte
}
def foo(){
	Ygritte *= -99;
	rule(betray(( -TABLE[-foo(protect(--( COLS * Hodor ) + 33 / -0.25 + ( -13 ) - 81,destroy(( Sansa )))) - y][rule(TABLE[rule(COLS)][-26 - ( ROWS )],-x - -protect(-1))] + ROWS / COLS - ROWS ),rule(( ( Stark ) ) - ( -( ( 0.26 / protect(foo(rule(Sansa * --ROWS + mislead(--740.354,-39,-Jon))),Ygritte) - TABLE[TABLE[-ROWS][Hodor]][dog] ) ) - ( mislead(-( ROWS ),-59 * protect(0.11)) ) + -ROWS * ( bar(Jon,COLS,ROWS + ( COLS + y )) ) ),0.11) + -ROWS) * TABLE[( ( ( dog ) ) )][0.01],betray(TABLE[-Jon][-( foo(Sansa) )]));
	if(--( y )){
	if(x){

};
	TABLE[( TABLE[COLS][Ygritte] )][-( -foo(( ( -6 ) ),-ROWS,foo(---1 * -COLS,ROWS)) ) - ( betray(ROWS,-0.76) )]
} else {
	Ygritte /= -foo(-380.6,Hodor)
}
}
def TABLE[foo(y)][k] {
	if(destroy(---0.2)){
	if(-66){
	Ygritte /= COLS
}
};
	780.97
}
assert TABLE[bar(TABLE[69][y],--88)][2] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "One can not simply parse himself"
var dog = -80
var Stark = ( ROWS )
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[730.0675 * dog][i] {
	if(foo()){
	if(betray(foo(betray(( -COLS ),COLS),-70.55,bar())) / mislead(Arya,Stark)){
	y += rule(protect(--45),Jon)
} else {
	( ROWS )
};
	y += COLS
} else {
	Stark -= Sansa
}
}
assert 20 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "What do we say to the Lord of Death?"
def betray(){
	TABLE[-Stark + TABLE[betray()][TABLE[COLS][( -destroy(-0.3,Sansa) )]] * destroy(betray(-Stark / TABLE[( Stark )][-Sansa] + Arya),640.815 / -( ( Stark ) + rule(TABLE[foo(COLS,( y ))][-0.22]) * 630.84 / -( -COLS ) ) - -Sansa * ( TABLE[-0.09][rule(-0.75)] ))][betray(ROWS) * Ygritte * Ygritte * COLS + ( dog + -490.275 ) / -( COLS ) * -COLS]
}
assert TABLE[-Stark][( Stark )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ROWS
assert TABLE[( COLS )][betray(--480.291 * ( ( foo() + 0.79 ) ),1) / ( --betray(-0.66,-0.71) / ( ROWS * COLS * -900.519 ) )] : "Nothing burns like the cold."
var Sansa = ( --0.78 )
def bar(Ygritte,y){

}
def mislead(x){

}
def TABLE[TABLE[-foo(0.92) / ( ( foo() ) ) * dog * destroy(TABLE[1][67] - -0.05)][( destroy(dog,-0.82,( -0.19 )) / --1 )]][k] {
	if(mislead(1,-0.69)){
	if(---TABLE[TABLE[-0.61][TABLE[bar(foo(bar(destroy(350.86,-69))))][Ygritte]]][( -( ( Arya ) ) )] * dog){
	Sansa
};
	Jon /= -ROWS
} else {
	if(-0.68){
	dog += --0.66;
	Ygritte
};
	x /= -Hodor + Jon / ( --Hodor );
	if(-COLS){
	Stark
}
}
}
def TABLE[foo(--24,x)][j] {

}
def TABLE[0.12][j] {

}
var Jon = ROWS
def TABLE[foo(( --Arya / -0.18 ))][j] {
	Stark -= TABLE[destroy(betray(14 * bar(( COLS )),betray(COLS,ROWS)),-Hodor)][-53] - betray(( -831 ));
	if(destroy(-63,---1 - bar(foo(( COLS ),rule(betray(),ROWS)),-31,-mislead())) - -220.3){
	x / Arya;
	COLS
} else {
	-betray(Arya,-0.9,dog - ( ( ROWS ) / 0.64 + TABLE[TABLE[( ( -y ) )][Ygritte]][-Ygritte] ))
}
}
def TABLE[--Ygritte * -63][k] {
	Hodor -= TABLE[COLS][-ROWS];
	if(-( -foo(mislead(TABLE[mislead(x)][COLS],y),( rule() ),COLS) )){
	COLS;
	ROWS / -0.49 + ( -( ROWS ) );
	if(bar(TABLE[ROWS][bar()],( -y ),-41)){

} else {
	if(( ( 0 ) )){
	bar(-80,y * Arya);
	Sansa *= destroy(( TABLE[( ( -( -( ( Hodor ) ) ) - Sansa ) / COLS )][rule(( ROWS ) + TABLE[( TABLE[rule(-0.23,Jon,destroy(Sansa,780.806))][ROWS] )][76 * ROWS],foo()) - bar(-35,( TABLE[( destroy(-0.4,Ygritte,ROWS) )][mislead(mislead(ROWS),Ygritte)] ))] - -5 ))
} else {
	x *= Ygritte / betray(--COLS,--rule(--0.74));
	Sansa *= protect(mislead(-ROWS,-89,430.9741),betray(foo(-0.84),-foo(betray(),-ROWS) + 14 + ( Arya ) + Ygritte),( ( ROWS ) * Arya ))
};
	if(-Ygritte){
	destroy(Stark,13);
	Stark -= ( COLS );
	if(-Jon){
	ROWS
}
}
}
}
}
assert 57 : "Nothing burns like the cold."
def betray(Hodor,Hodor){
	Jon -= -0.72
}
def TABLE[( protect(ROWS) )][i] {
	-( -37 ) * Stark - ROWS - ROWS;
	( ( --1 ) * protect() )
}
def TABLE[( 1 )][i] {
	Jon * Jon
}
assert -ROWS : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
def foo(Jon,dog){
	( Ygritte );
	if(( -( protect() ) )){
	x *= 42;
	if(-Ygritte * Hodor / -Hodor){
	Jon += -Jon;
	Arya
}
}
}
assert foo() : "Fear cuts deeper than swords."
assert mislead() + Stark : "Nothing burns like the cold."
def rule(Ygritte,Stark){
	if(Ygritte){

};
	( Arya );
	Ygritte /= -foo(foo(-Hodor,bar(( mislead(( -Hodor ),mislead()) * 1 ))),-destroy(( Ygritte )) / 60 + COLS)
}
assert --rule(COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Stark,Ygritte,Arya){
	if(--TABLE[TABLE[( ( 0.27 ) )][( --920.385 )]][ROWS + x]){
	COLS
};
	y;
	Jon -= rule(bar(-protect(-Ygritte,65,destroy(( x ) * -Stark - -63,-mislead(betray(0.55) + Ygritte,( bar(-ROWS) ),0.53),ROWS)) + ( x ),Sansa))
}
def protect(){
	TABLE[-140.843][( Sansa )]
}
def TABLE[-59][k] {
	if(-Stark){
	if(68){
	y *= ( ROWS )
} else {
	x *= Arya / destroy(TABLE[betray(( mislead(-83,380.8) * betray(Ygritte - foo(( Jon ),( 10 ))) ),-0.33,-rule()) * ( mislead(( -destroy(x) )) )][( rule(Hodor,-( ( protect(-420.3,( destroy(Jon) )) ) / ( ROWS ) ),mislead()) )]);
	ROWS
}
};
	if(rule(COLS,Stark)){
	x *= dog;
	ROWS
}
}
def TABLE[y][j] {
	-destroy(-39,( betray() ))
}
var x = protect(( -0.6 )) - betray(-1) + 0.54
def TABLE[1][i] {
	-( -ROWS / -betray(-21) );
	if(TABLE[Jon / --TABLE[--y / Arya][( bar(-( -27 ) * ( ROWS ),-1 * 0.42 / mislead(protect(mislead(COLS) + ROWS),-0.39)) - --86 - --950.7499 )] + ROWS / ( 37 )][( ( Ygritte ) )] * -Stark * ( rule(( ( 18 ) ),( rule(ROWS) )) )){
	TABLE[0.66][-0.56];
	if(--82){
	-260.2096;
	y
} else {
	dog
}
} else {
	-800.06;
	-0.11
};
	y
}
assert -protect(( ROWS )) : "What do we say to the Lord of Death?"
def TABLE[( ROWS )][j] {
	if(dog){
	if(Arya){
	if(--Stark + ROWS){
	-64;
	-1
};
	if(rule(-16,1 - x + TABLE[Sansa][bar(-y / 64)])){
	if(foo(370.9) / -Ygritte){
	if(-ROWS){
	x -= Hodor;
	if(--130.061 - Sansa){
	Ygritte -= ( x );
	rule(-foo(TABLE[( dog )][( --( ( ROWS ) ) )]) + ( ( Sansa ) ) + mislead(bar()),-dog,Stark)
};
	Ygritte /= -0.54
} else {
	ROWS;
	if(protect(-0.71)){
	0.24
} else {
	-COLS;
	if(Sansa){
	-ROWS;
	Ygritte /= COLS / TABLE[-1][77] - foo(protect(COLS));
	y /= Ygritte
} else {
	if(Hodor){

} else {
	Arya *= dog;
	Arya;
	x += TABLE[( COLS )][mislead()]
};
	x += ( bar() )
}
}
};
	Arya -= ( -0.03 ) + ( foo(( Jon )) );
	Stark
}
}
} else {
	if(20){
	Ygritte;
	dog /= 31
}
};
	Ygritte + COLS + 98 * COLS * -foo(destroy(( rule(-bar(x / destroy(31 - -1),Sansa)) ),( -ROWS )) + COLS,---90.499,( -Arya )) + --Ygritte + ( ( 0.26 ) - --0.8 )
};
	if(( ( Ygritte ) )){
	40;
	if(( -780.1 ) / -0.84){
	if(dog){
	if(x + bar(--( foo(ROWS + COLS + TABLE[-1][COLS],ROWS) ) - ( 0.89 ))){
	if(protect(ROWS,ROWS,-protect(-mislead(dog,-1),protect(Hodor,COLS,( foo(bar(TABLE[TABLE[dog][ROWS]][( --710.108 / Ygritte )],-COLS),betray(Stark),( -0.08 / COLS / --protect(( ROWS )) )) ))))){
	y -= -Stark / --( -foo() ) / --Arya;
	if(betray(-( Sansa ),foo(Jon),-0.97)){
	if(rule(-1)){

};
	if(( COLS )){

};
	--rule(TABLE[Arya][foo(rule()) * ( ( mislead(-130.8) ) ) - 270.2],( ( Ygritte ) ) - betray(( 60.1 - ( 0.46 ) )),destroy(TABLE[( ROWS )][rule(-0.63)])) / Sansa
}
};
	x += Jon
} else {
	--100;
	( Ygritte )
}
} else {

}
} else {
	Stark -= Ygritte;
	Hodor /= Sansa;
	Arya -= -( Stark )
}
}
}
var Ygritte = foo(foo(),COLS)
var Sansa = ROWS
var dog = bar(Ygritte,-0.02 - -COLS)
var y = -Sansa
def destroy(Arya){
	Hodor / destroy()
}
def TABLE[-1][j] {
	Ygritte += ( 750.91 )
}
assert Sansa : "One can not simply parse himself"
var Sansa = --11 / 0.49 * mislead(Arya)
assert TABLE[-Sansa][2 * ROWS] : "Winter is coming"
assert ( -TABLE[TABLE[ROWS][-y - --ROWS]][COLS] ) : "One can not simply parse himself"
def TABLE[730.3][i] {
	COLS;
	Sansa += dog
}
def protect(Sansa,dog){
	if(x){
	Arya -= 900.8;
	Stark += -( ( TABLE[( rule(protect(Hodor)) )][0.81] ) );
	if(-( 450.28 )){
	y /= rule()
} else {

}
}
}
var Arya = ( -0.31 )
assert ( --mislead(y,-Arya,mislead(-betray(-COLS) + y,y)) ) : "Fear cuts deeper than swords."
assert rule(Arya) : "What do we say to the Lord of Death?"
def foo(Arya,Stark){
	-( -21 )
}
def bar(){
	bar(--( ( Ygritte / -betray() + betray(TABLE[mislead(-24,bar())][Arya],foo(Stark)) / ( Arya ) - 89 ) ),rule(Sansa + TABLE[( -( mislead(x,-79) ) ) + -15][bar(75) / -0.36 / -mislead(-bar(destroy() * destroy(betray(Sansa / ( betray(betray()) ) - Hodor)) * 0.82))]));
	Stark
}
var x = -1
assert ( Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = TABLE[foo(-0.5 - x)][-Hodor]
def mislead(Sansa,x){
	if(( ROWS )){
	if(1){
	if(ROWS){
	Jon /= mislead(1,-46 * -0.18 / -TABLE[-94][( bar(( Hodor ) * ROWS - ( foo() ),--92) )],-x / COLS / protect(1,( -0.7 * 1 - ( TABLE[dog][Sansa] ) )));
	y /= -130.44 - -TABLE[Stark - --x + TABLE[-foo(foo(Arya),-0.78,Jon) - TABLE[Hodor][-( destroy(--44,-0.66,Stark) )] * ( -mislead(-rule()) - rule(mislead(-93) * COLS,( -( ( ( -41 ) ) + ( ( TABLE[( 98 )][x / rule()] - -bar(foo(( COLS ),Hodor) + dog,-0.71,80.2176) ) ) - dog ) )) * -bar(-( Arya ) - TABLE[15][( COLS )]) )][-( COLS )] + -0.16 * -( -0.15 ) / ( dog )][ROWS] * TABLE[destroy(-foo(rule(protect(--83 / Stark,TABLE[Hodor][( x )] * -1 + -betray(-1,y)) * -dog),( betray(TABLE[( -TABLE[-TABLE[-Arya][-0.86] / x][Ygritte] + --0.3 * ( mislead(-15) ) - ( Jon ) )][( mislead() )] - bar(),foo(( COLS ),betray(-0.16,--( Hodor ) - TABLE[-92 * ---620.82][-11] / 39 + 0.52))) )),Stark,0.81)][6]
} else {
	TABLE[dog][y];
	Arya /= -0.66
};
	if(-betray(( ( protect() ) ),( ( -210.3809 ) ))){
	COLS
}
} else {
	Hodor
};
	if(0.37){
	if(betray(-800.67)){
	dog /= 96
};
	if(protect()){
	Stark *= ( -destroy(protect(-Arya / Ygritte / TABLE[( ( mislead(Hodor + TABLE[TABLE[( -( ( ( ( rule() ) ) ) ) )][-36 - ROWS]][Stark] - ( -dog / -920.833 + -( COLS - destroy(0.21) ) )) ) )][Hodor] + ROWS) - ( COLS )) )
} else {
	0.55;
	COLS;
	Ygritte += --( Ygritte / -foo(TABLE[Arya][ROWS * ( Stark + -Stark )],110.06) - dog - bar(-destroy(-dog,TABLE[-destroy(( -59 ),ROWS,TABLE[-COLS][-( Jon - 30 )]) + ( ( -( -68 - -( ROWS ) - 0.09 ) - destroy(dog) ) ) + -( --83 + 1 * betray(99) )][-( 34 / --( ROWS * 110.3783 ) / ( rule(0.88) ) )] - ( -Sansa ) / Sansa) / --protect(--( Ygritte ) - ( ROWS ) + --1 / -18),-x) ) - -92
}
} else {
	if(COLS){
	if(( -TABLE[Jon][( COLS ) + Hodor] / ( -0.92 ) / 320.2211 )){
	Hodor += -y
} else {
	-( COLS );
	if(Arya){
	mislead(( Jon ),( rule(Sansa,Ygritte) )) - ---Arya + x;
	dog -= TABLE[-COLS][Jon]
} else {
	( -1 - ( -61 ) );
	( bar(ROWS,-0.35) );
	0.98
}
}
};
	Arya /= Arya
}
} else {

}
}
var y = -foo()
def TABLE[1][k] {
	if(1 + -73){
	Arya *= 0.71 * 89
}
}
var Sansa = -( ( Jon ) )
assert Stark * ROWS * -1 : "What do we say to the Lord of Death?"
assert ROWS : "One can not simply parse himself"
def destroy(y){
	if(foo(94,betray())){
	if(Sansa){

} else {

};
	-83
} else {

}
}
assert COLS : "Nothing burns like the cold."
def destroy(Hodor,Sansa){
	65;
	y
}
def mislead(Arya,Hodor,Stark){
	x /= --mislead(-( Hodor ),destroy(y)) + ( COLS )
}
def destroy(dog,y,Arya){
	if(bar(( rule(destroy(-ROWS,-( -destroy(-57) ) + Hodor) * ROWS,-66) + --COLS ),x,-1)){
	TABLE[( y + protect() * -( TABLE[dog / ( 0.98 )][( rule(Arya,--bar(mislead(destroy(Jon,-betray(( TABLE[rule(betray(),---destroy() - COLS)][protect(( rule(-dog) ),protect(COLS),-bar(( 0.63 ),betray(1,ROWS,-mislead(( TABLE[protect(Sansa)][COLS] - -bar(-0.56,foo(-( 33 + x / mislead(-0.21,( -x + -460.323 ) + ( 53 )) ),( y )) * COLS,--80.5 / y) ),Jon))))] ),-( ( COLS ) )),COLS),ROWS,TABLE[ROWS][Jon]) + bar(y,( -70 ),bar(COLS))),TABLE[-dog / -( TABLE[Arya][( x )] ) * ROWS][protect(protect(990.3613,dog)) * ( rule(destroy(COLS,62)) )]) )] / destroy() ) )][betray() / COLS - ( y )]
};
	-0.96
}
assert -610.21 : "One can not simply parse himself"
var x = -0.09
def TABLE[--y][k] {

}
def destroy(Stark){
	betray(foo(1),( ( mislead(( destroy(y,COLS) ),79) ) ) * COLS / Jon);
	( 52 - -0.95 )
}
def rule(){

}
def TABLE[-Jon * TABLE[--0.21][1] / -Hodor][k] {
	-0.23
}
def TABLE[mislead()][j] {
	Stark += ( -mislead(ROWS) );
	COLS
}
assert TABLE[-COLS / Hodor * -1 / Stark][COLS] : "Fear cuts deeper than swords."
def mislead(){
	Stark += TABLE[Arya * -1][0.44]
}
def TABLE[foo(rule(ROWS,TABLE[destroy(Hodor,rule() / -foo(rule(foo(0.88,--900.49),dog) / rule() - 0.77) * Stark - ROWS)][( 73 )] / ( -Arya )))][k] {
	dog;
	Jon
}
assert y : "Fear cuts deeper than swords."
def TABLE[( rule(Ygritte,Jon + x) )][i] {

}
assert Hodor : "What do we say to the Lord of Death?"
assert TABLE[betray(dog,-COLS,x)][Arya] : "Winter is coming"
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte){
	600.233;
	-0.65;
	dog *= ---ROWS * foo(betray(Stark,( 470.74 )),-ROWS,Arya * -ROWS)
}
assert protect() : "What do we say to the Lord of Death?"
def protect(Arya){
	if(-rule()){

}
}
def destroy(Ygritte,Stark,dog){
	( 0.74 )
}
assert -destroy() + Hodor : "Nothing burns like the cold."
def rule(){
	if(( mislead(TABLE[COLS][COLS]) - ( ( ROWS ) ) + -47 ) * --14 * ( -1 )){
	( bar(-y,ROWS,ROWS) )
} else {
	-95 - ( -890.251 );
	betray() / destroy(ROWS)
}
}
def TABLE[COLS][k] {
	Ygritte -= x
}
def foo(){
	if(( rule(43) - foo(y,( Arya ),protect(( ( TABLE[protect(-( 0.17 ) / -mislead(),foo(-bar(-ROWS) + Sansa),COLS)][COLS] ) ))) ) - -Arya){
	Stark
} else {

};
	if(TABLE[TABLE[TABLE[-54][-y]][( Sansa )]][-1]){
	if(foo() * -73){
	Sansa;
	Jon /= TABLE[-68][( x )] + -protect()
};
	Hodor += -620.7 / -Stark;
	( foo() )
} else {
	Stark -= Hodor;
	if(1){
	if(Hodor){
	x += ROWS
} else {
	if(dog){
	-( ( Stark * COLS ) ) + ( TABLE[0.36][betray(-Stark * rule(--( -0.97 )),-0.54,( -0.96 ))] )
};
	if(( COLS )){
	Hodor += ( ( TABLE[--31][COLS] ) * Jon ) - 12;
	if(TABLE[dog + 0.1][( Hodor )]){
	Sansa -= protect(-930.767,destroy())
} else {
	if(ROWS){
	Sansa -= y;
	Hodor /= -protect(-y)
} else {
	Hodor *= ( 0.88 * COLS ) - -1 / ( 810.563 ) - ( ( -mislead(( -x ),COLS,Ygritte / protect() - Stark) ) ) + betray(77,( -betray(COLS,Ygritte) ),x)
};
	Hodor -= bar(x,COLS)
}
};
	Arya
};
	Sansa -= -( TABLE[betray(COLS,84,( ( -Jon ) ) + Ygritte)][-TABLE[COLS - COLS][0.42]] )
};
	destroy(COLS - betray(Hodor,0.62,protect(-x,-foo(TABLE[( ( ROWS ) )][0.83],destroy(rule(-50) - ( Stark ) - ( ( ROWS ) ) - destroy(-44 / ( -foo(1,-Ygritte + Stark,COLS + x) ) - protect()) + destroy(( ROWS ) - ( Hodor ),---0.33,TABLE[0.11][bar(( -mislead(-0.17) ),-Stark)]) - Arya)) / Stark)) + foo() * ( -Stark ) - -dog,0.3,ROWS)
}
}
def TABLE[-34][i] {
	x /= -210.638;
	if(( --TABLE[0.85][protect(-TABLE[TABLE[0.89][( ( ( ( ( COLS ) ) ) ) )]][-rule(ROWS)],Jon)] )){
	if(-COLS){
	( Arya ) / ( x / rule(COLS,( ( foo(----Stark) ) )) );
	if(( foo(-protect(( Jon ),bar(TABLE[x][mislead(TABLE[0.4][TABLE[0.92 + ( ( COLS ) - 0.4 )][Hodor]],-26)])),Jon) )){
	-1
} else {
	x -= 12;
	Sansa *= TABLE[rule(Jon,-98 / bar(mislead(),0.29 + dog + --( foo(Arya / ( -( Stark / destroy() ) )) ) / -530.67,( Stark )),destroy(Hodor))][foo(rule(TABLE[protect(-1)][-( ROWS + protect(-ROWS + Stark) - Arya )]),COLS,-ROWS * COLS - ( -TABLE[--( ROWS )][COLS] + COLS ))];
	Sansa *= protect(( ( COLS ) ))
}
} else {
	Hodor -= bar(( 530.62 ));
	dog
}
} else {
	rule(mislead(-1,COLS / -0.08),( Jon ))
}
}
def TABLE[ROWS][i] {
	dog += ( Jon )
}
def TABLE[1][j] {
	if(y){

} else {

}
}
def foo(Arya,Stark,dog){

}
var Arya = ( -52 )
var Ygritte = Arya
var Jon = Sansa
def TABLE[-79 - ROWS * Sansa][k] {
	x *= destroy(--bar())
}
var x = ( mislead(Ygritte * -31) )
var Hodor = betray(( -290.7783 ))
assert -76 : "Nothing burns like the cold."
var Jon = Jon
assert -1 : "Nothing burns like the cold."
def TABLE[Arya][i] {
	-9;
	foo(( -72 ),-COLS)
}
def TABLE[mislead(Ygritte,COLS)][i] {
	if(Arya){
	0.3;
	Hodor += Stark
} else {
	Jon -= TABLE[ROWS][dog];
	if(( protect(( ( destroy() ) ) * --x + COLS - --0.09 - ( ROWS / Arya )) )){
	if(-450.97){
	0.24
};
	Ygritte / --ROWS - -1
} else {
	if(( Sansa )){
	-foo(-COLS,bar(TABLE[Hodor][( rule(betray(),ROWS,-betray() + 0.85) ) * ROWS],( ROWS ) + COLS,88),ROWS);
	( ( ( 0.74 ) - destroy() ) ) - dog
};
	Ygritte += Arya;
	if(x){
	if(( Sansa ) / -( x ) + x){
	if(( Arya )){
	Arya *= bar(-96,( ROWS ));
	if(( ( y ) ) / Jon - -850.7 * -( COLS )){
	dog -= x;
	-TABLE[1][destroy(( COLS ) * COLS)]
} else {
	if(COLS){

} else {
	if(-rule(1,Arya,-y) * ( bar() )){
	Ygritte += Ygritte;
	if(( TABLE[destroy(( ( ( Ygritte ) - ( -0.43 + 17 ) ) ) / rule(Sansa,-33,1),Sansa)][0.47] )){
	if(-ROWS - ( ( TABLE[( -0.92 ) - foo(( -Ygritte ) * Jon - dog,Jon) / -27 - ( COLS )][---( Sansa ) / -57] ) )){

} else {
	Stark += dog - TABLE[-Ygritte][ROWS]
};
	Arya -= ROWS;
	--TABLE[( -20 )][-( foo(55,( TABLE[1][Jon] * -( -foo(-0.92) / rule(780.03) ) )) )] + dog
} else {
	if(0.47){
	protect() + betray(protect(0.57,COLS)) * rule(( ( ROWS ) )) * rule(( x ),-( Hodor ));
	if(( ( TABLE[dog][0.18] ) )){
	Hodor *= -0.95
};
	Arya += Arya / TABLE[Hodor][rule()]
};
	if(-rule() - protect()){
	y /= 1
} else {
	y *= Stark
};
	if(ROWS - Sansa){
	0.52
} else {
	Stark -= Sansa
}
};
	if(COLS){
	Sansa *= Hodor * --dog * ROWS;
	if(( -dog * -75 )){
	if(-89){
	x -= Jon
}
} else {

}
}
}
};
	if(( 10 )){
	Arya *= TABLE[TABLE[-( -Stark )][( Jon )]][( -1 )];
	if(Arya){

}
}
}
};
	TABLE[COLS + Stark][( ( 1 ) )]
} else {
	if(-70.2744){
	if(mislead(0.78)){
	if(TABLE[protect() + dog - -850.901 + ( -1 * protect(TABLE[COLS][( -ROWS - betray(Stark) )]) )][mislead(0.1)] + dog + ROWS){
	Stark /= 850.54;
	if(( mislead(TABLE[( --y )][betray()]) ) / Arya){
	y;
	Arya /= COLS
}
} else {
	COLS;
	dog -= ( betray(-( TABLE[COLS][protect(-380.5 - TABLE[Hodor][TABLE[Sansa][-0.49]],-90.3 / -0.8)] ),1 + -Ygritte) )
};
	if(-Arya + COLS - mislead(Hodor) * ( betray() / x - Ygritte / -Hodor ) + ( Stark )){
	dog -= -980.884
}
} else {
	if(( ROWS / -490.5 / --foo(rule(),( Sansa )) / Arya )){
	-TABLE[( ROWS )][rule(( -0.64 ),Jon)] - -0.04;
	betray(y * 89,COLS)
};
	if(( ---0.03 )){
	y;
	( -Hodor )
}
}
};
	Ygritte *= ROWS
};
	if(-96){
	( --rule(COLS,COLS,0.94) );
	Hodor
}
}
}
};
	if(Arya){
	Ygritte += COLS
};
	-790.826
}
def TABLE[0.09][k] {
	Arya + 45
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 1 : "One can not simply parse himself"
assert 500.228 : "Winter is coming"
def mislead(Arya){
	x -= mislead(-95,bar(),-betray(Sansa + ROWS,protect()))
}
var x = ROWS
assert -bar(1) : "Winter is coming"
assert ( -( COLS ) * ( -( COLS ) ) + ROWS ) : "Fear cuts deeper than swords."
def protect(Sansa,Ygritte){
	--( rule(---91,-11 / -ROWS / ( TABLE[-55 * bar(mislead(bar(53) / ( 0.3 ) / -Sansa * -0.4,( destroy(Sansa) )))][( TABLE[y][440.4257] )] ),--( rule(Arya) )) ) + COLS + protect(( ( -0.54 ) ))
}
def TABLE[( -0.47 )][i] {
	0.67;
	dog -= protect()
}
var Sansa = -rule(COLS,36)
assert x : "One can not simply parse himself"
assert TABLE[78][protect(-1,( 35 ),( COLS ))] : "Fear cuts deeper than swords."
def TABLE[-Hodor * -550.396][i] {
	Arya /= ( ( ( -( y + --TABLE[x][-62 * ( ( ROWS ) / destroy(( 40 / -( ---750.67 + mislead(foo(),betray(),-0.1) ) * COLS ),-110.2769) )] ) ) ) ) / protect(dog)
}
def TABLE[COLS][j] {

}
assert ROWS : "What do we say to the Lord of Death?"
def protect(y){
	if(-foo(destroy(bar(Stark,-0.4,( -( 0.36 ) )),TABLE[Stark][Arya / Stark] / TABLE[( -rule(COLS * rule(betray(Hodor),-270.7),bar(-380.476 * COLS),-0.11) ) - -( ( mislead(protect(ROWS,rule()),( mislead(Sansa) + 0.61 * rule(Sansa) ),( ( -70.47 ) )) ) )][46] * rule(TABLE[-( -( -COLS ) - ( ROWS ) )][COLS],dog),Arya * ( COLS )),-1,COLS)){
	if(( -89 )){
	dog *= ROWS
}
};
	-COLS
}
var Jon = foo(betray(-1 / -destroy(( destroy(destroy(bar(( ROWS ),x),Hodor),-0.2) ),--ROWS),Hodor))
def rule(x,Arya){
	COLS
}
def protect(dog,Stark,dog){
	Sansa += Sansa;
	x /= ( Stark );
	( 0.75 )
}
assert --53 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--83 * ROWS * Jon][i] {

}
var x = bar(-31)
def foo(Jon){
	if(bar(Stark,-protect(-mislead(-30.939)) + 630.492 - ( Ygritte ),mislead(mislead() / foo(Arya - 1,( Hodor ))))){
	if(ROWS){

} else {
	protect(COLS,dog)
};
	-74
}
}
def TABLE[TABLE[bar(-0.26,COLS,Jon)][ROWS] + ( COLS )][i] {
	if(Jon){
	TABLE[( ROWS )][-( dog / Sansa )];
	if(destroy(Stark * ROWS,1)){
	1;
	if(mislead(-Hodor,1,mislead(Ygritte,Arya))){
	if(-11 + betray(-0.59 / mislead(---64,--0.47),protect(Hodor))){
	if(-COLS){

} else {
	TABLE[ROWS][0.1] - dog
}
}
} else {
	x += -16
}
} else {
	Sansa -= Arya
}
};
	ROWS;
	x -= -protect(destroy())
}
def TABLE[-0.73][j] {
	Sansa *= protect(TABLE[foo(-1) / -0.62 - -COLS - ( betray(( ---32 ),-11) ) / betray(( rule() ),-0.95)][-ROWS] + --300.9935);
	betray(( 1 ),betray(),-ROWS + 1)
}
assert ( ( Sansa ) ) + ( ---Arya / COLS + ( Hodor ) ) : "Winter is coming"
def rule(Arya,Hodor){
	Arya += ROWS;
	if(0.1){
	-x
} else {

}
}
def TABLE[-1][k] {
	rule(Stark)
}
assert -TABLE[dog][bar()] : "Fear cuts deeper than swords."
def rule(Arya,y,Stark){
	Jon += ( ( TABLE[Stark][( 0.38 )] ) - 940.55 )
}
def TABLE[-910.007][j] {
	if(COLS){
	if(ROWS){
	y -= --( TABLE[COLS][protect(x)] ) * -ROWS + mislead(750.628,-60.56,betray(COLS,-0.68,TABLE[0.89][55] - COLS)) / TABLE[ROWS][0.95];
	( COLS );
	-COLS
};
	bar()
} else {
	0.61
};
	Jon /= x;
	-TABLE[-0.83][COLS]
}
assert -0.72 : "Nothing burns like the cold."
def TABLE[440.87][k] {
	( 0.82 );
	betray(-20.4951,( ( Stark ) ) * -( COLS )) + foo(( ( ( ( destroy(1) ) ) ) + --0.81 ),ROWS,foo()) + ROWS
}
def rule(){
	430.828
}
assert -Ygritte : "Winter is coming"
def bar(Arya){
	if(ROWS){
	Jon *= -( ( ( ROWS ) ) ) / -68;
	( 1 ) - -Ygritte
} else {
	COLS;
	if(-y / ( rule(bar()) - 560.54 )){
	if(( 1 )){
	if(x){

}
};
	Jon /= -protect(( ( ( COLS ) ) ))
};
	Sansa *= 50
}
}
def protect(Jon){

}
def destroy(y){
	if(x){
	if(( foo(-Stark) + -( ( foo(destroy(TABLE[protect()][x],( ( -( betray(-0.21) ) * COLS ) ),ROWS) * COLS) ) ) / -destroy(rule(COLS) - rule(protect(-0.87),( -COLS )) - ( ROWS )) ) + Stark){
	if(-Sansa){
	Stark /= y / ( ( TABLE[protect(( ( -( rule(( TABLE[-0.58][dog] )) ) ) ),( destroy() ),-( protect(dog + 0.2 * COLS * bar(( 10.7345 ),( -0.85 ),( --0.89 )),-( 45 ),Jon) ))][0.69] ) * ( 50.67 ) );
	-ROWS / ( -Stark + destroy() * COLS )
} else {
	Hodor -= 1;
	Ygritte -= -( Jon ) - -0.07 * ( ( COLS ) ) - ( TABLE[x][( rule(-TABLE[COLS][mislead(Ygritte)] + -( COLS * Jon ) * TABLE[Jon][( -1 )]) ) / Arya] ) / --1 / COLS * rule(-Sansa * ROWS * -900.8) * COLS * ( Sansa ) / --1
}
};
	protect(ROWS,-0.2,dog + rule(( -rule(TABLE[0.03][TABLE[-130.51][Sansa - -35]] / y,Ygritte) / rule(( -0.1 + 46 )) ) / 1))
} else {
	COLS
};
	Sansa /= -( foo(ROWS,bar(--bar(( ----TABLE[betray(bar(--30,destroy(rule(mislead(bar(1,--dog,destroy(y,1))),rule(21,-1)),protect(dog,betray(Sansa,-0.63) - -( COLS + -betray(TABLE[( ( mislead(TABLE[protect(-0.25) - Arya - betray()][-Arya] * mislead()) ) )][TABLE[( COLS )][( -0.34 )]]) - rule(( Hodor ),COLS) ) + Arya * destroy()))),( foo() ),COLS) * 20][x] / 0.79 ),( TABLE[bar(( Sansa ) + Sansa,TABLE[protect()][x])][0.9] + -protect(-1 - ROWS * -Sansa - ( -foo(( mislead(Hodor,Jon,TABLE[( -1 * ROWS / TABLE[-TABLE[( foo(ROWS,-bar(--Arya,( -( TABLE[0.13][mislead(-( ( -( COLS ) ) ) / dog,foo(Ygritte,bar(Arya)) / ( 0.48 ),Sansa)] ) )),protect()) )][0.82]][Jon] )][TABLE[--871][-590.2 + -99]] + Hodor * TABLE[( protect(Arya) )][TABLE[-TABLE[--( protect(-ROWS,--4 - ( ( foo(Ygritte) ) ),0.43) )][--51] - Stark - betray() * ROWS][mislead(-destroy(TABLE[( TABLE[x][Jon] ) + ROWS - Arya][betray(ROWS - ( TABLE[Ygritte][0.19 + bar(COLS,y)] + x / Stark ) / Arya * ( Jon ),0.61) - protect(Sansa,foo(betray())) + TABLE[protect(Hodor)][foo(TABLE[Stark / TABLE[0.58 * -1][( Sansa )]][( -dog )],Jon,( ( foo(-ROWS / -( dog ),Arya + -0.11,( bar(-Jon - -340.611,destroy(Ygritte,( dog ))) )) ) + COLS * ( --Ygritte ) / 99 * -37 ))] + -COLS],-1,-900.1 + ------83 + destroy(TABLE[-300.4213][-80],TABLE[-( protect(( -Arya ) / Hodor) ) / TABLE[Sansa][betray(( -41 )) + Stark]][mislead(( mislead(Sansa / ( 1 ),( --0.76 )) ) * 43,x) * -protect(--80)])) / Ygritte)]]) ),Jon,( ( Jon ) )) ),foo()) ),dog),( ( Hodor ) / Ygritte ))) )
}
def betray(Sansa){
	dog /= -150.797
}
var y = COLS
def TABLE[Ygritte + betray() + TABLE[ROWS][ROWS]][k] {
	if(betray(COLS)){
	y += TABLE[COLS][---protect()];
	if(-rule(--19,bar(( bar(-COLS,-mislead(-0.23 - ( y - Ygritte ),-Sansa) + 0.15 - -330.764) - ( 47 ) )))){
	( 96 );
	dog /= -930.911
}
};
	if(( ( bar() ) )){

}
}
assert ( dog ) : "Fear cuts deeper than swords."
def TABLE[( mislead(( ( Jon ) - Jon )) )][k] {
	if(foo(TABLE[( ROWS )][-TABLE[( ( Stark ) )][-190.46]])){
	-rule(mislead(( rule() ),rule(Hodor)))
};
	( Jon );
	if(COLS + ( destroy(( TABLE[-ROWS][dog] )) + ( TABLE[-1][bar(-84,-betray(COLS))] / betray(ROWS) + 610.8558 * ( 0.53 ) * dog / x / --0.34 / COLS - bar() + -( Arya ) - protect(0.63,TABLE[dog + ( -x * -ROWS ) + -dog][0.66],foo(protect(( --( bar(-1,rule(( 78 ),-x)) ) ) - ( -Arya * protect(rule(bar(-ROWS - --betray(x,COLS) * -0.64),( ( -rule(dog,-( bar(mislead(protect(foo(( ( protect(-47 * 53) ) ),destroy(45),bar(( ( 0.04 / destroy(TABLE[-1][2]) ) ))),Stark) * -ROWS)) ) + -16) ) )),bar(-0.59,--0.2,--130.05 * rule(COLS + COLS,foo(ROWS,-dog,Ygritte)) * ROWS / Jon / 590.32)) * Hodor )))) + destroy(destroy(mislead(( foo(-0.06,y,dog) ) - --Arya + -79,290.3)),COLS,-20.7) ) )){
	x *= -( rule() );
	COLS * -0.9
}
}
def TABLE[y / x][i] {
	if(Stark){
	if(( -dog )){
	y *= 0.21;
	if(y){
	if(COLS){
	COLS;
	if(-mislead(--46,0.34) * Stark + 43){
	Arya -= Jon
}
};
	if(-1){
	if(Hodor){
	Stark *= Stark
} else {
	if(( -COLS )){
	ROWS / TABLE[-( ( --destroy(-foo(Hodor,560.75)) ) )][destroy(bar(50),--330.42 * ( Arya + destroy() / --13 ))]
};
	Arya -= ( y )
};
	if(COLS){
	if(17){
	if(-TABLE[dog][Ygritte - ROWS]){
	bar(COLS,300.13);
	Jon *= TABLE[-rule()][x];
	Ygritte /= -5
};
	y /= Jon
} else {
	if(rule(90,--63)){
	Sansa *= ( 76 );
	y *= x;
	Sansa
}
}
} else {
	Jon += -80 / ( dog );
	if(ROWS){
	x /= foo(-Hodor,( -530.6992 ),--26 * 0.41 / ROWS) / --( destroy(bar() + ( 1 ) + COLS) ) + -0.31 - betray(foo(( -60 ),Hodor - dog),Stark);
	--( ( Stark ) );
	dog /= -COLS
};
	if(---52){
	if(-1 * ( Stark )){
	betray(bar(( -0.24 - -0.79 )));
	dog += bar(rule(),COLS) / 0.29 * -Sansa;
	Ygritte -= --66 + protect(-TABLE[-0.93][destroy(( Sansa ))],foo(93),-destroy(ROWS,dog))
}
} else {

}
}
}
} else {
	Ygritte += -4 * TABLE[0.41][TABLE[foo(0.7)][TABLE[0.26][( -( protect(COLS,-0.36) ) )]]];
	Jon *= --0.59;
	Sansa -= -( ----( destroy(-1,-0.73) ) / ( 1 + ( 7 ) * ( 0.66 ) + x ) * 0.82 )
}
};
	if(45){
	( Sansa ) - ROWS * -protect(TABLE[Jon][-rule(COLS)],15,( ( protect(COLS) ) )) / -3 / Arya / ( bar(( ( Stark ) ),-y,( bar(ROWS) )) ) - 66 * 20
} else {
	( betray() );
	if(ROWS){
	( -ROWS );
	Jon += ( -0.83 )
}
}
};
	Ygritte -= 85;
	dog += 700.11
}
assert -0.56 * ( --110.99 ) : "Winter is coming"
assert Arya : "Winter is coming"
var Ygritte = -0.49
assert -Arya : "Fear cuts deeper than swords."
var Jon = -ROWS
assert -Arya : "Nothing burns like the cold."
def TABLE[-1][i] {
	Jon *= Hodor
}
var y = Hodor
var dog = dog
var y = -foo(64,Hodor)
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -x + Jon * 92 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( --820.223 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert protect(mislead(destroy(( Ygritte )),protect(--COLS,62,Hodor)) * Sansa,destroy(-27,mislead(49,-ROWS)),rule(betray(dog / ( -foo() ),protect(ROWS)))) + ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -52 : "Fear cuts deeper than swords."
def TABLE[( 0.99 )][k] {
	if(protect(( rule() ))){
	Ygritte *= -( Ygritte * 0.53 );
	dog *= ( 75 * 670.201 )
} else {
	37
}
}
def protect(Sansa){
	-x
}
def destroy(Arya){

}
def destroy(x,Stark,y){
	-betray(TABLE[destroy()][Arya] * COLS) * ( -TABLE[TABLE[COLS][-23] + TABLE[1][ROWS]][COLS] );
	if(COLS){

};
	Jon /= Sansa
}
var Hodor = ( Hodor ) / dog
def TABLE[mislead(( -0.28 / 590.81 ),betray(betray(--betray(Stark)),protect(),-0.52 / --( Jon ) / TABLE[foo(350.596 / x,Jon) + --1][Ygritte] - -29),x)][i] {
	ROWS;
	Sansa -= 4
}
def protect(Arya,Jon){
	dog += foo(rule(),Ygritte) - Jon
}
var x = TABLE[520.8658][x * ( ( ( --COLS ) ) )]
def TABLE[COLS][i] {
	y /= -14
}
assert x : "Winter is coming"
var x = -Ygritte
def foo(dog){
	if(-0.51 * --1){

}
}
def TABLE[bar(Arya)][j] {
	if(-ROWS){
	if(rule(-85,-920.262,dog)){
	0.46;
	Arya += -Sansa - -( -0.96 )
} else {
	if(( 0.44 )){

}
}
} else {
	if(destroy()){
	if(TABLE[TABLE[1][TABLE[Jon][( ( COLS ) )]]][rule(Ygritte,( --( Ygritte ) - 0.09 * -0.18 ))]){
	TABLE[y - foo()][TABLE[foo(( COLS ) + -destroy(COLS,x) / ( 99 ) * --rule(Arya,-( ( -6 ) ) / -0.67) - TABLE[-0.99][-( ROWS ) * ( ( Arya ) ) + bar(TABLE[38][-( -0.14 )] / ( dog ),Stark,COLS)],Hodor,ROWS) * destroy(( TABLE[destroy(protect(Ygritte,COLS),rule(),( --830.9482 )) * ROWS][Jon - -1] * ( ( ( -530.1523 ) ) ) )) * y - -COLS][TABLE[--450.298][---( ( -dog ) )]] + -rule(-0.43 / -17 - Hodor + -15,COLS) + foo(ROWS,( --( -bar(protect(-rule(TABLE[( bar(( destroy(TABLE[-betray(1)][-TABLE[ROWS][-COLS]],( 0.89 ),-COLS) )) )][Arya] + ( TABLE[betray(y,dog,( 49 ))][-76] ),-mislead(-Jon,( Ygritte )),bar())),( ( destroy(( ( COLS ) )) ) / -12 + ( 85 ) )) ) ))]
} else {
	x /= 440.7;
	-510.55
}
};
	Sansa
};
	x /= Sansa
}
var dog = Stark - Sansa
def rule(){
	y -= COLS;
	if(0.5){
	Hodor *= rule(750.7022);
	if(-83){
	if(-Stark * Jon){

}
};
	-destroy()
}
}
def bar(Jon){

}
assert Hodor : "What do we say to the Lord of Death?"
var Stark = dog
def destroy(x,Stark){
	if(foo(-bar() - -COLS - Ygritte)){
	y -= Sansa
} else {
	TABLE[( -ROWS )][TABLE[y][( 940.216 )]];
	if(-540.4){
	if(-mislead(1)){
	Stark -= ( bar(0.11 * ROWS,( ROWS - -0.53 ) / -1) - -rule(rule(-protect(-Stark),Arya)) )
} else {
	Sansa -= TABLE[( -ROWS )][-20 + ( foo() )] - Arya - destroy(210.4,20 * ( -COLS ) / protect(COLS,Arya));
	Hodor += -protect(0.78);
	Ygritte *= ROWS
};
	Ygritte -= -59
} else {
	-( ( -0.75 ) * ( dog ) * COLS ) + protect(--( ( protect() ) + -16 ) - 1 * betray(destroy(--0.74 / TABLE[--ROWS][-( ( -TABLE[Jon][ROWS] * y / -rule(Hodor,4,ROWS) + COLS / ( 0.21 ) ) ) + 80]),-Ygritte),--rule(-y,-destroy(TABLE[Sansa][--( destroy(protect(( ( ROWS + 54 ) * -Jon ),( ROWS ),0.22) * ( TABLE[TABLE[Ygritte][foo(( bar(rule(1 * ---0.98) * dog,ROWS) ),0.84)]][COLS] - ( -1 ) * betray(-COLS * Stark + -( ( -( -140.281 ) ) ),-45) )) )]),( TABLE[TABLE[( -87 )][-1]][-Jon / -0.28] )) + -Hodor - -TABLE[( ( ROWS ) ) + y][( bar(foo(-0.16,-1,( 0.72 ))) )]);
	Hodor += Ygritte
};
	if(-( ( ( destroy(-( -1 - rule(-1,Jon,x) ) / ( -23 )) ) * Ygritte ) )){
	destroy(mislead(37,-28,betray(( ( -2 ) ) * y + Hodor)),( -16 / betray(Arya,Sansa,Sansa) ))
} else {
	Ygritte -= Arya;
	x *= 870.295 / x
}
}
}
def TABLE[67][j] {
	-( ( rule() ) );
	protect(dog)
}
def TABLE[0.69][k] {
	Jon /= ( COLS * -480.9 );
	-y - rule(Stark,betray(Stark,Jon,-96)) - COLS
}
def TABLE[30][j] {
	x
}
def TABLE[0.82][i] {
	if(--COLS / -0.16){

}
}
def protect(x,Hodor){
	ROWS
}
assert betray(protect(( COLS ),ROWS)) : "Fear cuts deeper than swords."
assert Arya : "One can not simply parse himself"
def protect(Jon,dog){
	x /= bar(mislead(),Stark) - ROWS * -630.039
}
def destroy(){
	Jon += ROWS;
	if(Jon){
	x -= 1
} else {
	if(TABLE[ROWS][TABLE[( COLS )][mislead(( ( -foo() ) ))]]){
	if(-Arya){
	Hodor -= -ROWS - 1
} else {
	if(protect(1)){
	Arya *= -bar()
}
};
	Arya /= ROWS
} else {

};
	if(( -( mislead() ) )){
	if(betray(29)){
	if(( TABLE[COLS][COLS] )){

} else {
	-Hodor
};
	-foo(--1) * ( 0.15 )
} else {
	destroy(destroy(78 / -Hodor,Stark));
	Arya -= ( -0.4 )
};
	Hodor += ( -0.76 )
}
}
}
def TABLE[-TABLE[destroy(( protect(TABLE[mislead(--93 - -1,x)][-59],( COLS )) )) + ( y )][-54] / x][i] {
	-dog;
	Ygritte *= -y
}
def destroy(Sansa,Stark,x){
	if(--betray(( -1 ),rule(protect(( 850.33 )),protect(670.19,0.53) / -0.6),-TABLE[-380.7 * dog][-82 / ( Sansa ) / betray(( Sansa )) - COLS]) / ( mislead(-Stark,x,-81) )){
	Arya
};
	if(( Hodor )){
	( COLS );
	440.201
} else {
	Sansa *= --COLS / ( -ROWS )
}
}
def TABLE[( ---89 ) * mislead(---1) + Stark][k] {
	Stark *= protect(ROWS,-0.74)
}
def destroy(){
	if(-Sansa){
	protect(( ( COLS ) ) - 1 - -bar(ROWS,ROWS),-550.93);
	if(ROWS){
	dog *= 1
} else {

}
} else {

}
}
def TABLE[720.83][k] {
	y *= --8 * rule(-1 * -0.9) * 17;
	Stark *= ( mislead() ) + Jon * -7
}
var x = Hodor
assert ( -Sansa + ( destroy() ) ) : "One can not simply parse himself"
assert ( ( -betray(1,( foo(( ( 67 ) ),-680.71 - -( ( 250.449 ) ) + TABLE[( -760.13 )][( Sansa )],-520.355) ) + destroy(protect(( Hodor ) + betray()))) ) ) : "Nothing burns like the cold."
def TABLE[-ROWS - -0.07 / -( --TABLE[( TABLE[-x][ROWS] )][bar()] ) - 0.17 + -Sansa - Jon + COLS][j] {
	Ygritte -= -( ( TABLE[( x )][-COLS] - -bar(-x) / -0.39 ) );
	if(mislead(( ( -100.8 ) ),( Stark ))){
	32;
	-640.16
}
}
def TABLE[dog][i] {
	-Stark - 0.18;
	Stark -= 0.12
}
def foo(x){
	-46 / Jon - y
}
def foo(Hodor){
	if(Arya){
	Sansa -= foo(bar(-1,1),3) - foo();
	Ygritte
} else {

};
	Ygritte /= 950.84
}
assert ROWS : "Winter is coming"
def protect(Sansa,y){
	if(rule(( 0.22 ))){
	( --( COLS ) + y );
	x *= ( COLS )
} else {
	if(COLS + foo(-630.782,Hodor)){
	if(--ROWS){
	dog /= ( protect() );
	if(Hodor){
	if(( ---Stark )){
	if(betray(COLS)){
	protect(ROWS) - rule(y,COLS)
} else {
	-dog * 0.96;
	( -COLS )
}
}
};
	( -340.7 )
} else {
	if(mislead(COLS,( COLS + mislead(--( x )) )) + 8){
	Sansa += ( -( -ROWS ) );
	( foo(foo(x),( --protect(( mislead() )) )) )
} else {
	if(ROWS + 0.54 - ( protect(--( --110.804 ) * Stark - 26) ) + x){
	y += ( ( ( ( Ygritte ) ) ) + Sansa );
	protect(Jon - -7,foo(-0.31))
}
}
};
	--0.41
} else {
	if(Ygritte){
	if(mislead(Sansa,ROWS)){
	--Sansa / ( -foo(( ( COLS ) ),( -protect(( ( Hodor ) ) + TABLE[Ygritte][-0.65],Jon,COLS) ) / -86,TABLE[TABLE[destroy(COLS,COLS,Jon)][--57]][65]) );
	Jon;
	x *= Ygritte
} else {

}
} else {
	if(x){
	mislead(COLS);
	Hodor + ( ( ROWS - TABLE[TABLE[-890.16][86]][TABLE[-190.28][rule(COLS)]] ) - 0.72 / Arya / mislead(-( ( dog ) )) - -Jon / -11 ) + ROWS;
	-76
} else {
	if(0.24 + ( mislead(-97) - destroy(COLS / -foo(------8,0.93) - ( destroy(0.64 - TABLE[( 6 )][--TABLE[mislead(-( ( TABLE[( --protect(400.167 - ROWS / rule(protect(protect(Stark,TABLE[0.72 * betray(( -COLS ))][rule(betray(TABLE[COLS][-ROWS]))] + ( ROWS ),COLS + -COLS))) * -betray(-21) + --1 / dog * --Hodor,mislead(-COLS + -( -590.3807 ))) )][-0.56] ) ))][--( ( -destroy(TABLE[( ---74 ) - COLS][TABLE[rule(-0.06,-TABLE[( ROWS )][Ygritte],-ROWS)][COLS]],TABLE[--destroy(ROWS,0.93) / ROWS][Sansa],y / TABLE[57][TABLE[--65][16]]) ) )]],mislead(Hodor,-Arya,TABLE[-( ( ROWS ) ) + Jon - TABLE[Jon][mislead(( 1 )) / Jon]][x])) * TABLE[COLS / -58][COLS] ),Ygritte,0.38 / --1) )){
	if(--ROWS){
	-( -990.077 );
	0.35;
	Jon *= Hodor + COLS
} else {
	if(( TABLE[( -1 )][mislead(--61,bar(( 960.921 ) + -protect(ROWS),bar(( betray() ))),-Jon)] * -( ( mislead(( dog ),COLS,COLS) ) - y - -0.77 ) )){
	dog += ( ( Arya ) );
	if(ROWS){
	x -= mislead(-( Arya ),( TABLE[y][dog] )) * Sansa;
	Sansa *= -1
} else {
	mislead(( TABLE[--( -TABLE[Hodor][Stark] )][x] ),( -1 )) * protect(TABLE[-270.957][-0.2]);
	dog
}
}
};
	dog += ( ( 1 - -ROWS ) )
} else {
	if(-( destroy(ROWS) )){
	if(( COLS + -TABLE[550.39 + -1 / ( ( ( x ) ) )][foo(-foo(bar(),340.53))] )){
	--COLS
} else {
	( COLS )
}
};
	if(-1){
	if(23){
	( mislead(-0.17) );
	if(-( COLS )){
	mislead(Stark,TABLE[( rule(-ROWS) )][COLS]);
	Sansa += protect(( -Arya ) - TABLE[( ROWS )][-83 * ROWS],Sansa);
	if(--1 - -0.94){
	Hodor += COLS;
	if(( ROWS )){
	if(-( 1 + -COLS ) - mislead(COLS,1)){

};
	58;
	y /= ( 0.95 )
} else {
	Arya += rule(( -Stark ),COLS,COLS)
}
}
} else {
	if(-0.06){
	Arya -= 16;
	Stark;
	-destroy(0.3 + ( ( -27 ) ),Jon)
};
	Hodor += ( 560.478 / --0.28 * COLS )
}
};
	Arya -= ( COLS );
	Arya += Sansa
};
	if(( -270.232 )){
	if(( y ) * -( ( foo(28,ROWS) / ROWS ) ) - -----TABLE[Sansa][TABLE[x][( y )]]){

} else {
	( --( y ) ) - -Ygritte + 590.582 * -foo(destroy(betray(x + ( Hodor )) + ( ROWS - -0.71 * rule(-COLS,-37 - -destroy()) )) * destroy(( ( COLS ) )) * -32 + --TABLE[COLS][( Hodor + -50 ) / ( 47 ) / Stark * COLS * ( ( destroy(-38) ) )] + Jon) + ROWS;
	Hodor -= -0.16
};
	( 81 )
} else {
	y *= ( ( Hodor ) );
	x /= -( -( -( -0.2 ) ) ) * betray(( TABLE[-1][TABLE[0.08][Jon]] - --y / 1 ),-Sansa) / ROWS
}
};
	bar(Jon)
}
}
};
	dog *= y;
	if(( dog )){

}
}
}
def TABLE[-38][i] {
	if(( Ygritte ) / ( destroy(28) )){
	x;
	dog += -1
} else {

}
}
assert betray(-TABLE[betray(-1)][( COLS )],COLS - destroy(( 27 ) + Jon),y) : "Fear cuts deeper than swords."
def bar(){
	Stark /= ( 49 ) - -( TABLE[--0.6][910.479] )
}
var Sansa = Jon
assert COLS * 0.64 : "What do we say to the Lord of Death?"
def TABLE[dog][k] {
	Jon += -foo(rule(( -( betray(( ( ( bar() ) ) ),COLS) * ( TABLE[TABLE[y][-78]][( Stark ) / Jon] - TABLE[rule(COLS,ROWS,Sansa * Stark / -0.84)][Sansa + -1] ) ) ),Arya - Arya - ---12,destroy(x,COLS / Stark / protect(protect(),ROWS) - TABLE[-79][rule(( Stark ),COLS)],( foo(ROWS,betray(-TABLE[-1][( TABLE[-1][Ygritte] )])) ))),( -( -32 ) - Arya ))
}
var y = ( ( 0.39 ) ) + -84
def rule(Ygritte,Hodor){

}
def TABLE[( ( betray(destroy(( -y * -0.59 ),dog)) ) )][j] {
	x /= -( bar(Sansa) );
	if(( mislead() + -ROWS )){
	if(610.8){
	dog;
	if(( dog )){
	if(Stark){
	Sansa *= Sansa;
	bar() + -1 * ( Arya ) * Stark * -COLS;
	Hodor -= --1
} else {
	Hodor *= -( ( 480.673 ) )
}
}
} else {
	if(( -COLS )){
	x -= mislead(Stark);
	Jon += 93;
	Arya -= ( -11 )
}
};
	if(-dog){
	if(COLS){

} else {
	if(-Arya){
	Stark *= ( -3 ) + -46 / 7
}
}
} else {
	x -= -Sansa;
	ROWS;
	if(betray(-ROWS,-rule(( ( TABLE[TABLE[ROWS][( -rule(x,betray(ROWS)) )]][Arya] ) ) + ( -( -mislead(ROWS,TABLE[destroy(TABLE[x][0.83] * 0.32)][Hodor]) ) ),-Ygritte),( --1 ))){
	Ygritte;
	if(37){
	Sansa /= --0.62
}
} else {
	if(rule()){
	if(-97){
	Arya *= 1;
	TABLE[( ROWS )][mislead(( -0.39 ))]
} else {
	if(( --ROWS )){
	if(mislead(-1 * 1,Stark)){
	dog;
	( rule(TABLE[destroy(-96 - rule(destroy(0.72,( Stark / ( -betray(( ( TABLE[-mislead(TABLE[TABLE[betray(0) - -Arya][y]][-TABLE[-( ( mislead() ) )][COLS]],( -Sansa ))][1] ) )) ) ))) / -5,( -( --destroy(-( ( -betray(550.96) ) )) + --0.17 ) ))][bar(( -5 + ( ( -0.04 ) ) ),rule(Arya - ROWS,---betray(-0.35,-74,( y / -1 - mislead(COLS,-mislead(1,TABLE[( --ROWS + --0.59 / rule(0.85,foo(Arya + ROWS,betray(-Arya,destroy(ROWS,TABLE[-Sansa][( -COLS )],y - -bar(protect(( --58 ),0.84),COLS))))) ) * ( ( bar(mislead(),ROWS,0.39) ) ) + TABLE[destroy()][( ( ROWS ) ) + -COLS * ( ROWS )] * -protect(destroy(mislead(-( Ygritte / Sansa ) - y,mislead(foo(Stark,rule()),0.02 * -( destroy(rule(),TABLE[Stark][--1],ROWS) ) - -90.2) + TABLE[Jon][-bar(0.01)],dog)),0.32)][destroy(destroy(betray(dog),Ygritte),-rule(Jon)) - Ygritte / TABLE[--30][Hodor] / TABLE[--0.43][destroy(-0.28,TABLE[-0.07][bar(bar(ROWS,-( --2 ) + ( --93 ) - -1 + foo(bar(-0.25 * Sansa),--COLS + Stark - ROWS,-( ( 82 ) )))) / Arya + ( -COLS ) - ( bar(protect(protect(-0.63 * -COLS),6,dog),( ROWS )) ) * ( -1 + destroy(--COLS - betray() / ( mislead() )) - -1 - bar(-( dog ),TABLE[rule(TABLE[( -rule(-( COLS + ( TABLE[-Stark][-Arya] * Stark ) * --1 / -( Ygritte ) ),0.52,( TABLE[betray()][-y] * -0.57 ) / 0.03 * y) / --0.56 )][COLS])][( TABLE[betray(x,TABLE[Jon][130.99])][Sansa] )],-91 / --protect(-bar(( Jon ),Sansa),protect(0.77 * ( Ygritte ) - bar(betray(),Jon),y,1),--y)) ) + TABLE[Hodor][-ROWS - COLS * x]],y)] / ( TABLE[COLS][-ROWS] )]) / TABLE[Arya][COLS]) )))) * betray(-180.4,x,--28 / Ygritte * -0.73) - TABLE[protect(-0.89,Ygritte)][( ----0.83 / --43 + ( destroy(ROWS) ) )] - ( --0.25 )] * COLS / -0.42,-COLS) );
	x -= foo(( 0.57 ))
}
};
	0.2
};
	Ygritte -= -( dog )
} else {

};
	Hodor /= COLS
}
}
}
}
var Stark = --0.92 + -54
var x = TABLE[35][-( 0.82 )]
def TABLE[COLS][i] {
	Hodor /= foo(Arya)
}
def rule(){
	if(destroy(( COLS + ( x ) - x + COLS ),Ygritte)){
	Hodor
};
	foo()
}
def TABLE[foo(-( --ROWS ),y,TABLE[protect(-99,-rule(ROWS) * 92 / COLS,y)][( ( -1 / x ) )])][k] {
	( ( bar(--0.04,y) * ( bar(mislead(betray(Jon / Sansa + 0.66,-840.418)),y) ) ) );
	-mislead(ROWS,ROWS,-900.244)
}
def TABLE[( COLS + TABLE[-Stark][ROWS] / 84 )][i] {
	Stark -= -( ( foo(1,-44,ROWS) / dog ) )
}
def TABLE[( foo(-89) )][i] {
	if(COLS){
	----( Ygritte );
	COLS
} else {
	( -39 );
	( -1 );
	if(--ROWS * rule(-x,Sansa,destroy(destroy(0.48),--23 - ROWS,-260.79))){
	if(( ( foo(-0.65,COLS,( -380.82 ) + 16) * TABLE[TABLE[--320.7][protect(-10.411)]][betray(--foo(( foo(( Arya )) )) - Sansa / -( 0.07 ),( bar(-protect(0.42) - -72 - -TABLE[Sansa][Sansa] / ( -89 ),( 19 ),TABLE[Arya][COLS]) ) - -87)] * TABLE[-0.72][1] * 0.21 ) )){
	if(( Jon / -Jon / TABLE[destroy(mislead(betray()),TABLE[destroy()][-( protect(-bar(-840.62,( ( --destroy(COLS,mislead(Jon,destroy(-( ( 0.83 ) ),-Stark))) / y - -ROWS ) ),Stark),y) ) * -52])][( --TABLE[bar()][( ( -32 ) ) * COLS] )] + bar() )){
	( -y ) - -( -0.42 );
	Arya -= -880.69;
	Hodor
}
}
} else {
	dog += ROWS;
	Jon -= 300;
	if(y){
	Hodor /= rule(betray(rule(--( ROWS ) * 1 / ( COLS ) / -1,-( -Ygritte )),0.08,rule(( COLS * -0.02 ))),Arya,-( COLS ))
} else {
	dog *= -320.2
}
}
};
	Hodor -= -( COLS )
}
var Jon = Ygritte
def TABLE[foo(bar(( -Hodor )))][j] {
	if(-0.52){
	( y );
	if(---betray()){
	if(TABLE[TABLE[bar(0.3)][( ( 1 ) )]][protect() * 0.92]){

} else {
	dog / Ygritte;
	x
}
}
};
	( mislead(Ygritte - Hodor,rule(Stark),3) );
	Jon
}
def betray(Sansa){
	x += Sansa;
	y /= betray(---( -20 / ROWS ) / ROWS)
}
def TABLE[x][j] {
	Arya += mislead(foo(Hodor))
}
def mislead(dog,Ygritte,Stark){

}
assert ( foo(0 / 49,( -mislead(-70,rule(Jon,Ygritte,-mislead(--( ROWS - 0 ),ROWS)),foo()) )) ) : "Fear cuts deeper than swords."
def mislead(Stark,Jon,Jon){
	Stark += mislead(( Sansa ),COLS,( Ygritte + x / bar(COLS) * ( ROWS ) ));
	betray(-Sansa)
}
def rule(Sansa,Hodor,dog){
	Arya -= ( TABLE[COLS][-0.42] / destroy(x,ROWS) - COLS )
}
assert 58 : "One can not simply parse himself"
def TABLE[( Arya )][i] {

}
var Stark = COLS
assert TABLE[dog][bar(COLS / -660.543,( -61 ) / bar(-98) - Hodor + x,( Arya ))] - TABLE[-destroy(protect(Stark,( mislead(Jon,-0.57 / ( foo() )) )),Arya * ( COLS ) / ROWS)][protect(COLS,x,( Stark ))] - -0.43 : "One can not simply parse himself"
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][j] {
	if(TABLE[TABLE[-ROWS][Jon]][( ( Hodor ) )] + bar(( ROWS )) / TABLE[dog][COLS]){
	( -( --580.784 ) / -COLS ) / --1 - ( ( TABLE[bar(Ygritte) * ROWS][-dog] ) * destroy(mislead(-Sansa / -34 * -COLS / destroy(( 0.16 ))),-630.7591) ) - -( dog );
	dog += --Hodor
} else {
	if(destroy(COLS)){
	if(( rule(mislead(( Arya )),x,Jon) )){
	( TABLE[Arya][mislead(( Ygritte * destroy(Arya,ROWS) + -860.948 ),COLS)] )
};
	--( Arya )
} else {
	y -= foo()
}
};
	if(mislead(mislead(-1,-dog),mislead(Jon * TABLE[( -foo(( ( Arya ) ) + -6) )][0.72],Ygritte) / -1,-( ( COLS ) ) / -1 * -0.86 * foo(-( mislead(protect(),ROWS) ),---0.37 - x - bar(( TABLE[TABLE[mislead(dog,mislead(--0.34) * 17)][92] / COLS][-330.91] ),0.02,Sansa)))){
	y /= Jon
} else {
	-1;
	if(y){
	Jon *= -28;
	x *= bar(0.28,-( -1 * Hodor ));
	Stark -= ROWS
};
	Sansa *= Hodor + -0.96 + TABLE[TABLE[( ( -1 ) )][-0.22]][betray(( 1 / TABLE[( -0.25 )][Sansa] ),Stark) * mislead(-13) + -1] * 0.66 + -Arya
}
}
def destroy(Jon){
	Stark += TABLE[foo(0.65 / protect())][TABLE[Jon + --0.65][y]];
	if(28){
	( COLS - 93 )
}
}
def destroy(){
	Stark -= TABLE[-Hodor][ROWS]
}
def TABLE[---destroy(x,destroy(-( rule(betray(-71 + 560.71 - x / -TABLE[-940.668][ROWS],COLS,Sansa)) )))][i] {
	x *= Ygritte;
	if(TABLE[y][destroy(0.81) * 0.08] - dog - destroy(( y ),-bar(55,-0.2,( protect(Arya) * -betray(( -15 ),33,( ---0.33 )) )) + ROWS) + TABLE[-x + betray(-Jon,destroy(protect(0.54,foo() - bar(y,foo(COLS * ( ( Arya ) ) + Sansa,dog),-0.28),destroy(rule(0.66,700.5),60)),-0.5),ROWS)][foo(betray(( foo(bar(),( -71 )) ),-Stark) - -y)]){
	Sansa / -29 + Sansa;
	Arya *= TABLE[( -0.12 ) / ( Stark ) / betray(y)][( 0.28 )]
}
}
assert 97 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Ygritte){
	Ygritte += y;
	if(protect(( TABLE[( ( ---ROWS ) )][( Ygritte )] ))){
	if(COLS + ( rule(rule(( -dog ))) )){

} else {
	ROWS
};
	if(protect(ROWS,-73,-ROWS)){
	-Sansa
} else {
	if(-dog){
	x /= -Arya;
	--ROWS;
	if(-43){
	( ROWS );
	Hodor -= -1 + Hodor;
	if(mislead(--COLS,8)){
	dog += 0.32
}
} else {
	dog;
	x /= betray(Ygritte,-TABLE[( destroy() )][Stark] + COLS - -10.091,Sansa)
}
} else {
	Arya -= destroy(COLS,4);
	if(y){
	if(( -( ( ROWS ) ) )){
	( Arya ) + -14;
	Jon
} else {
	if(bar(( COLS - mislead() ),TABLE[28][--0.66 - ( 0.41 - ( Arya + ( ( ROWS ) ) ) / bar() + Arya )],-( destroy() )) / Arya / 1 / -9){
	Sansa /= -rule(protect(x),dog)
}
};
	x -= Arya
};
	if(ROWS){
	if(Stark){
	Sansa;
	if(( -destroy(-( COLS ),-foo(-dog,TABLE[-84 + mislead(COLS,COLS,TABLE[destroy(-COLS,( Ygritte ))][y])][29])) + -Sansa / betray() )){
	Ygritte *= 0.14 + ( ROWS )
} else {
	COLS;
	y /= y;
	x -= mislead(dog,ROWS)
}
} else {
	Hodor -= ROWS;
	Arya /= ( -760.1352 / COLS );
	x *= ( Stark )
};
	Jon -= TABLE[mislead()][78]
} else {
	COLS
}
};
	if(( destroy(30) ) - ( --( -0.62 ) + x )){
	if(( COLS )){
	if(( Sansa )){

} else {
	COLS;
	if(11 * ( TABLE[betray(-TABLE[COLS][protect(Sansa,--0.65)],8)][-y] )){
	if(-rule(Arya,rule(bar())) / ( -betray(-( ROWS / ( ROWS ) ),bar(),COLS) ) / TABLE[---0.77][TABLE[--Arya][16]]){
	dog -= x;
	y;
	if(betray(x - TABLE[bar() * -0.89 / Jon / ( ( -59 ) )][TABLE[protect(-ROWS,-destroy(dog,( rule() )),TABLE[( -Ygritte )][dog] * betray(--TABLE[Ygritte][Hodor],Hodor))][COLS * Stark * ( Arya ) + TABLE[protect(( -( -TABLE[--TABLE[Hodor][( -ROWS ) - TABLE[( ( -870.4615 ) )][46 + Hodor]] * protect()][-ROWS * Stark] ) ),( protect(ROWS,TABLE[ROWS][-ROWS],foo()) / protect(-y,0.26,--bar(dog,-destroy() - 1)) ),-y) * --TABLE[Hodor][TABLE[--Ygritte * -16][COLS - -Stark / ( ( TABLE[x][x + ( COLS * ROWS )] ) )]]][( -betray(rule(TABLE[-protect(( ---foo() / ROWS ),-protect()) + ( -y * ROWS - -Sansa )][ROWS],x,Hodor)) ) / Sansa] / -Jon]],Ygritte,-90)){
	ROWS;
	if(-( -y ) + -0.23){
	if(-( TABLE[betray(protect(-( destroy(Stark,--protect()) ),-betray(TABLE[foo(dog * ( -( ( rule() ) ) ))][betray(protect(( --ROWS ),( --TABLE[( -bar() )][( foo(mislead(( Sansa ),betray(rule(0.86,ROWS),-0.28) * 73 * rule(y,COLS)),foo(41 + TABLE[ROWS * destroy(( x ),-39,betray())][0.07 + bar()])) )] )),38)])),ROWS,protect(1) * -protect(0.43))][Ygritte] ) + destroy()){
	if(ROWS){

} else {
	-28;
	COLS
}
} else {
	Ygritte /= dog
};
	dog += y
} else {

};
	-25
} else {
	( Hodor ) * ( -540.627 )
}
} else {
	if(COLS){
	if(( ROWS ) - ROWS){

} else {
	TABLE[-Sansa / TABLE[foo(Ygritte,-( Arya ))][protect() - --89]][TABLE[COLS][220.6524]];
	Ygritte /= -( -0.69 ) - ( -y + TABLE[rule(Stark)][57] ) / Sansa
}
} else {
	x -= y;
	Sansa -= bar();
	( Sansa ) * 18 + Stark
};
	TABLE[( -( ( -0.45 + 1 ) ) )][0.06]
};
	Ygritte *= 440.824 - TABLE[1][-1] + -y
}
};
	x -= x
};
	TABLE[-0.11][-rule(bar(-( --COLS )),0.9,rule(ROWS,Ygritte,ROWS)) + ( Hodor ) - ( 0.73 )] / -ROWS - Sansa * Arya;
	-1 * mislead(0.83) / 350.9293
} else {
	--( -0.26 );
	y *= ROWS
}
}
} else {
	dog
}
}
def TABLE[( destroy() )][j] {
	COLS;
	ROWS
}
def betray(x,Ygritte,Ygritte){

}
def TABLE[Stark][k] {
	Sansa *= -90
}
assert ROWS : "One can not simply parse himself"
assert -( x ) : "What do we say to the Lord of Death?"
def TABLE[( ( ( COLS + foo(-1,-94 * COLS + bar(970.096,y) * 30,Hodor) - -21 ) ) )][i] {
	Arya *= COLS;
	Ygritte += Jon
}
var Arya = --Jon
assert Jon : "Fear cuts deeper than swords."
var x = TABLE[Ygritte / ( -0.76 )][350.88 * TABLE[ROWS + 1][mislead(Hodor)]]
var dog = -0.87
def rule(Sansa){
	if(( -31 * ROWS ) / bar()){
	ROWS
}
}
def bar(){
	if(( COLS )){
	x /= rule(bar(ROWS,( x / 0.27 ),19),mislead(Jon,x,53 / -x),TABLE[--ROWS][destroy(betray(COLS))]);
	if(rule(ROWS)){
	dog -= foo(( COLS ),( ( ( 440.305 ) ) ))
} else {
	Sansa *= ( Hodor ) - 0.15
};
	850.526
}
}
def rule(y,Jon){
	Stark += ROWS
}
var Ygritte = x * ROWS
def foo(dog,Stark){
	Stark -= -46 / ROWS
}
def mislead(x,y){
	if(rule(mislead(1,dog) * Stark) - -COLS){
	0.79;
	if(-60){
	if(( -1 )){
	Arya -= Jon
}
} else {
	Stark += dog
};
	y *= -( 1 ) + destroy(dog / mislead() * COLS - 30)
};
	x /= Ygritte - COLS;
	Arya /= ( COLS )
}
var Sansa = -mislead(( Arya )) / COLS
def TABLE[0.65][j] {
	if(( -Jon )){
	ROWS;
	if(-66){
	if(ROWS + COLS){
	if(---protect(-92,( ( protect(-COLS,-( ( protect(-730.12) ) )) ) )) + ( -( Ygritte ) )){
	if(16){
	if(y){
	Jon += 1;
	if(y){
	y;
	Ygritte /= ---Stark;
	Hodor += mislead(-Jon,Ygritte)
} else {
	0.77;
	if(rule(97,( ( ( ROWS ) ) ))){
	Jon /= Arya;
	Jon
} else {
	if(destroy(-( -destroy(--( ( ( -( protect(( dog ),Sansa) ) + COLS ) ) ) * -ROWS,mislead(( protect(--( -53 ),-38,COLS) ),--1)) ))){
	Hodor;
	x += ROWS;
	Ygritte
} else {
	if(-( -ROWS - ( mislead(-94) ) )){
	if(Sansa + ( Arya ) + ROWS){

} else {
	if(Jon){

}
};
	Jon *= COLS
};
	y /= Jon - ( -( ( bar() ) ) )
};
	Arya *= protect(mislead(dog));
	Sansa -= -COLS + destroy(( mislead(ROWS * -80 + Stark - -0.16,dog) )) * TABLE[Hodor][170.025] * --ROWS / -Stark / --12 / ( ROWS )
}
};
	Hodor -= dog
} else {
	dog *= rule(Ygritte / Hodor)
}
}
};
	if(-mislead(-( -( ( 7 ) / -mislead(TABLE[destroy()][Arya],-Arya,COLS) / COLS * COLS - Sansa ) ),Sansa * ( ( Hodor ) ) - ( protect() ),y)){
	dog += ( -96 );
	0.47
} else {
	Jon -= 1;
	if(( 1 )){
	dog;
	if(( Ygritte )){
	y += Jon
} else {
	bar(mislead(-dog,foo(( protect() ),foo(destroy(foo(-ROWS + Stark,( 60.9598 )),rule(y,-( protect(( destroy(-9 / -0.96,TABLE[dog][-( 1 ) + ( mislead(dog + 58) ) * ( Arya * -dog )]) + mislead(Stark,-betray()) )) ) * betray() + 46) + bar(dog)) - ROWS),( dog ) * bar(Sansa,1))) + y - TABLE[COLS][Hodor] / ROWS + rule(x),( ( Hodor ) )) * -COLS * mislead(( Hodor ),bar(-y,Jon),96);
	if(( ( ( TABLE[0.95][TABLE[Stark][mislead(-99)]] ) - foo(( 31 / destroy() * 130.04 ),-COLS) ) )){
	COLS
} else {
	dog /= betray(ROWS,x)
};
	79
};
	if(TABLE[protect(y,( Sansa ))][( TABLE[x / foo(ROWS,-Jon)][ROWS * destroy(( foo(-0.58) )) * ( -Ygritte ) * -TABLE[( -700.9116 ) / ( 79 )][-( ( ( ( --ROWS ) ) ) )]] )]){

} else {
	TABLE[-Stark - ( rule(0,-dog,Arya) * betray(bar(-0.15,-( rule(Arya) * -47 ),Ygritte),rule()) * COLS ) - ( y + -58 ) + ( Ygritte ) / foo(destroy(x,--190.1 * ( destroy(ROWS) ),-( -46 )),COLS)][Hodor]
}
}
}
};
	Jon -= Hodor
} else {
	Stark -= Ygritte;
	Jon *= TABLE[( 0.68 ) / betray(( 0.74 ),destroy(-0.86,protect(--( ROWS ) / TABLE[ROWS][bar(Sansa,-( Sansa ))]),mislead(-( ROWS ) / destroy(Stark),( ( 0.27 ) ))))][( ( TABLE[rule(( ( 25 ) ))][-ROWS + COLS] ) )] / ( ( ROWS + 33 ) )
}
} else {
	if(COLS){
	( COLS )
};
	y *= Hodor;
	-57
}
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Hodor][i] {
	if(destroy(x,TABLE[protect()][protect(ROWS + Jon * ( -Hodor * Hodor ),( ( ( COLS ) - destroy(TABLE[Sansa][--77],-0.7 - COLS) ) / -0.02 - ( rule(-1) ) - ( ROWS ) - COLS / Stark ),-310.9474)])){
	if(820.59){
	if(-TABLE[betray(betray())][betray(-TABLE[-protect(( -COLS ) - -74) / TABLE[-60.9 - 1][( ( ---8 ) )]][-72] - -0.92,1)] / betray(COLS,-0.19)){
	if(protect(COLS)){
	y += ( -bar(Stark,-550.9109) );
	Jon /= ( -45 );
	Stark *= -62 / -1
};
	Sansa
};
	( ROWS + -33 )
} else {

};
	--0.35 * ROWS;
	18 * Jon
};
	if(Jon){
	if(--foo(rule(),43,destroy(-( ( destroy(mislead(-destroy(x,TABLE[rule(( ROWS ),betray(-TABLE[--betray(300.544,Jon)][foo(0.43)] / Hodor) * -Jon / ROWS)][-( Stark )]) + COLS),560.8) ) )))){

} else {
	bar(ROWS,COLS)
}
}
}
def TABLE[Hodor][i] {
	if(TABLE[44][TABLE[-( TABLE[-0.87][TABLE[-TABLE[TABLE[Jon][ROWS]][1]][Jon * dog] - ---23 - 0.57] ) / bar(TABLE[-( COLS ) * -800.3][destroy(bar(-1),( ( 770.26 / -31 * foo() / 98 ) ))],y)][( TABLE[Stark][ROWS] )]] / -1){
	y -= destroy(980.281) / COLS
};
	Sansa += COLS
}
var Stark = -1
def foo(Arya){
	Sansa *= 340.124;
	-TABLE[-dog][Ygritte];
	-0.19
}
def protect(dog,Sansa,Ygritte){
	y += ( ( TABLE[--Stark + -0.06][( -betray() )] ) ) * -450.563
}
assert Stark : "One can not simply parse himself"
def destroy(Sansa,dog,Hodor){
	Ygritte += 0.17;
	protect(-TABLE[( -TABLE[betray(-1)][COLS] )][Jon])
}
var Arya = ( ROWS / 78 - -0.37 / Stark + ROWS )
def TABLE[Ygritte][j] {
	Sansa -= 0.59
}
def TABLE[TABLE[-COLS + -1][Stark]][k] {
	foo(-370.1)
}
def TABLE[-( rule(( TABLE[ROWS][destroy(Sansa) + 0.77] ),mislead(Arya)) )][k] {
	if(ROWS){
	if(TABLE[bar(ROWS,destroy())][-0.07]){
	Stark /= -( ( Sansa ) ) * ROWS;
	if(-TABLE[Stark][( ( TABLE[( betray(-0.27 - COLS + COLS + 0.36,( ( --71 - 0.34 ) )) + 94 )][-betray(--58)] ) )] / COLS / x - ( COLS ) + y){

} else {
	-betray();
	Jon -= COLS
}
}
} else {
	x *= ROWS
};
	( betray(1,-0.43) )
}
def TABLE[ROWS][i] {
	y -= ( 28 )
}
assert -TABLE[0.68][1] : "One can not simply parse himself"
var Stark = dog
def TABLE[dog][i] {
	if(( -1 )){
	if(---destroy(TABLE[( COLS ) - -bar(-0.7 / dog) + Arya][-ROWS] + ( 87 ),26,Ygritte)){
	Stark *= dog;
	Stark *= -( x ) / Jon
}
};
	if(( TABLE[1][Ygritte] )){
	-( ( TABLE[TABLE[betray()][( 0.12 )] * ROWS][Stark * -COLS] ) * Ygritte );
	Sansa *= ( -1 )
};
	if(Jon){
	if(Hodor){
	dog -= betray(570.6002,ROWS)
} else {
	Stark += -rule(( foo(mislead(destroy(foo(bar(-520.562,Sansa,-0.85)) + rule(-0.79,290.255),COLS,( -40.6 )))) ));
	x *= mislead(-520.839)
};
	if(-Ygritte){
	Arya /= -Stark
};
	( protect(-TABLE[ROWS][Arya]) )
}
}
def destroy(Jon){
	Jon -= -betray(( bar() ),protect(protect(-y),dog,COLS));
	Arya -= destroy(-Hodor,-1,-bar(-( Stark )) - -( mislead(-96) ));
	if(0.62){
	x;
	if(mislead(-( TABLE[-COLS][dog] ),( Ygritte - -1 ) - ( ( ROWS ) ) * bar(( Sansa ),760.323 * 56),-protect())){
	dog *= x;
	Hodor
} else {
	x *= ( Hodor )
}
} else {
	Jon += Jon;
	Sansa -= Arya
}
}
assert --1 : "Fear cuts deeper than swords."
def destroy(Hodor,Jon){

}
def foo(Stark,Arya,Stark){
	Hodor *= -0.13
}
assert bar(ROWS - ---( Jon )) : "One can not simply parse himself"
def bar(Sansa,Hodor,Stark){
	if(x){
	if(-COLS){
	Stark;
	Hodor -= dog
};
	if(-0.15){
	if(COLS){

};
	if(Sansa){
	if(dog){
	if(TABLE[0.34][betray(--6 * COLS,Arya,TABLE[-destroy() * -0.89][mislead(Jon,x)])]){
	if(y){
	y -= y / ROWS / --0.03;
	rule(-32)
}
} else {

}
} else {

};
	Sansa
} else {
	if(betray(TABLE[COLS][ROWS],TABLE[Sansa + COLS][( -0.68 )] - --70.326)){
	Ygritte += TABLE[dog][1];
	Arya -= -COLS;
	dog *= TABLE[0.74][Jon] + ( Ygritte )
} else {
	if(foo(mislead(Sansa,ROWS - ( ROWS )))){
	Sansa /= 990.15 / -( foo(----( rule(x,Sansa) ) - --0.48 - ROWS) ) + 780.15 + -betray(COLS,destroy(COLS,Ygritte,rule(( TABLE[ROWS][-0.75] ))) * ( Jon ));
	Stark -= -COLS
};
	COLS;
	y
}
}
} else {
	if(protect()){
	-700.9183;
	Arya += --y
};
	29
}
} else {
	Jon * Sansa;
	-Jon * Jon
};
	Stark -= x
}
var Stark = Arya
var Jon = dog + TABLE[( Arya )][-( ( ( ( -1 ) ) ) ) - TABLE[mislead(y,Arya)][COLS]]
def bar(Arya){

}
def rule(y){
	y -= 94;
	Arya *= ( -( -( Ygritte / 0.43 ) ) * -foo(( 55 )) - bar(Arya) )
}
def TABLE[mislead(-( 0.74 ) / COLS,TABLE[( -30 )][-25]) * -ROWS][i] {

}
def TABLE[( TABLE[Hodor * --TABLE[COLS][COLS] + -49][Hodor] + mislead(Jon) ) * x][i] {
	Ygritte *= betray(protect(COLS,57),( --0.34 + -y ))
}
assert Sansa : "One can not simply parse himself"
def TABLE[TABLE[foo(0.4,bar(dog,( -betray(COLS) ) + rule(TABLE[( -0.45 ) - 0.89][TABLE[( 0.38 )][( foo(bar(-dog,ROWS),-ROWS,( ( y * ROWS ) )) )]],--( ( dog ) ) - protect(betray(),( destroy(COLS,dog) / -75 / x - -COLS )) + destroy(ROWS,TABLE[---41][-0.04]) * -1,foo(( 0.98 )))))][foo(( COLS ),Hodor)] / COLS][i] {

}
var y = ROWS
def bar(Ygritte,x){
	Sansa -= --56
}
var y = 10
def foo(Stark){
	( ( 0.1 ) );
	-0.86;
	protect(COLS)
}
def betray(Jon,Ygritte){
	Ygritte += Jon;
	if(Stark){

} else {
	Stark -= -0.07
}
}
def TABLE[-35][i] {
	if(--TABLE[( Hodor )][-0.98]){
	Stark *= Hodor;
	if(Jon){
	Hodor * ( ( TABLE[betray()][ROWS] ) );
	TABLE[bar(y)][ROWS] - TABLE[( 600.502 )][( -37 )]
};
	if(-0.86){
	if(COLS){

};
	if(TABLE[( 77 )][-rule()]){
	Hodor -= destroy(protect(),( ( -bar() - --Ygritte ) )) + Stark / dog - -60 / TABLE[--0.45][-Sansa] / betray() + ROWS;
	protect();
	( foo(0.36,x) )
};
	-COLS + Arya
} else {
	Ygritte *= COLS
}
};
	dog /= -0.7
}
var Sansa = ( TABLE[betray(mislead(( TABLE[betray()][( ( bar(mislead(Sansa),destroy(-Arya,bar())) ) ) + protect(betray(Hodor),( -87 )) - ( --COLS )] )),-0.75)][( -ROWS )] ) + TABLE[Jon - protect() / destroy(-dog,( x ))][COLS]
var Ygritte = mislead(ROWS,---( foo(( betray(y,-protect(-bar(Stark,( ( -700.6 / destroy(rule()) - ROWS ) )),( 1 )) + protect(-Ygritte)) )) ),--COLS) - mislead(--26 - betray(destroy(ROWS),-rule(ROWS) / betray(ROWS)) * Stark) * 280.95
var y = COLS
var dog = ( rule(COLS,-ROWS) ) - ( 0.46 ) + bar(destroy(-61) - COLS)
var Arya = foo(Arya)
def betray(y,Sansa,Sansa){
	if(TABLE[dog][( y )] - ROWS){
	rule(Stark)
}
}
def TABLE[26][j] {
	if(-0.43 / 0.32){
	y += ROWS;
	y += Sansa / -COLS - Ygritte
}
}
var Jon = foo(Stark,-8) + destroy(Ygritte,COLS)
def TABLE[ROWS / protect(COLS,destroy()) / dog / Stark][k] {
	Sansa -= ---Ygritte / 92 / COLS - COLS;
	rule(-foo(-0.14))
}
def betray(){
	if(COLS){
	COLS
}
}
var Arya = --COLS
def bar(Ygritte,y){
	dog
}
var Sansa = x
assert Ygritte : "Nothing burns like the cold."
assert -betray(0.95) : "One can not simply parse himself"
var Hodor = ROWS
def TABLE[ROWS][i] {
	-33;
	x;
	x -= ROWS
}
def rule(Sansa,Stark){

}
var Jon = mislead(TABLE[Arya][foo(-0.72 / -rule(( -29 )) + ( ( protect(COLS,( ---( -rule(dog,-( -0.18 ) / --TABLE[( ROWS )][COLS] * -COLS * 100,ROWS) ) - mislead(rule(Stark,-54),51) ),x) ) ),mislead(bar(foo(91,betray()))))])
def mislead(Stark){
	Arya -= -ROWS;
	Sansa -= -1;
	Ygritte /= COLS
}
var Ygritte = ROWS
var Hodor = COLS
def rule(dog,Hodor){
	Jon += protect();
	Sansa /= rule(TABLE[( -y * COLS )][Sansa],y * 32);
	COLS
}
assert x : "Fear cuts deeper than swords."
var Stark = COLS / 250.91
def TABLE[ROWS][i] {
	Arya -= -betray() / betray(Jon)
}
def rule(Jon,Sansa){
	-0.08;
	Ygritte -= --betray(betray(ROWS) + -35,Stark)
}
var y = ROWS
assert ---0.78 * --66 + y / foo(--0.59,protect(TABLE[ROWS][-0.38] + Sansa)) : "Nothing burns like the cold."
var Arya = rule(protect(bar(ROWS,( ROWS ))) - foo(0.77,ROWS))
def protect(Ygritte){
	Jon -= -1;
	dog -= y;
	if(( 310.8329 ) / Hodor){
	Stark += -( --Stark * x / 0.27 ) + ( ( -( dog ) ) ) - ( ---0.93 ) / -8 / TABLE[dog][-31] - --0.95
}
}
assert -( -0.05 ) : "What do we say to the Lord of Death?"
assert ( 28 + mislead(-bar(x,( COLS / y ))) - TABLE[ROWS][Arya] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy()][k] {
	Jon -= -810.033;
	if(( 0.81 )){

} else {
	Sansa += TABLE[( bar(Stark - COLS) )][dog];
	if(-Sansa){
	protect(mislead(1))
};
	if(( foo() ) - ROWS){
	Jon *= -35;
	Ygritte /= 0.43
}
}
}
def TABLE[mislead(TABLE[( TABLE[( -0.58 ) - ( -0.86 )][protect(--1)] )][-COLS])][k] {
	destroy(COLS);
	x + ( -42 )
}
var dog = x
assert protect(-14,Sansa,ROWS) : "Fear cuts deeper than swords."
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Stark + -44][i] {
	if(26 - TABLE[( bar(TABLE[Arya][( ROWS )],rule(( 93 )),betray(( foo(y,0.41) ) + ( ( COLS ) ),COLS) * Hodor) )][protect(( TABLE[Hodor][-0.48 + ROWS] ) - 42)] * betray()){
	if(protect(-Arya)){
	Stark /= ROWS
} else {
	if(-63){
	if(protect(TABLE[Jon][rule(( ( -0.45 - 1 * -rule(x) - -ROWS * TABLE[COLS * COLS][protect(( foo(--3) )) - COLS] ) ),--1)],( ROWS ),-dog)){
	y -= TABLE[-( -1 )][-COLS];
	Hodor += 77 + ---Ygritte / Sansa * ( ( --0.56 + TABLE[( ROWS )][TABLE[x][-y]] ) );
	( ( destroy(( ( x ) ),-foo(TABLE[910.756][ROWS] + -Arya - ( foo() ),460.8,1)) ) )
} else {
	if(1 - TABLE[-protect(-91,foo())][( TABLE[( y )][Ygritte] )]){
	Sansa *= -1
};
	-45
}
} else {
	x
}
};
	if(-82){
	if(1 + Sansa + ( Arya )){
	y -= destroy(destroy(ROWS * ROWS,ROWS),( rule() * 0.85 ))
};
	x /= -270.9
}
}
}
assert TABLE[--72 * -510.629 / -480.09][TABLE[destroy(Ygritte,ROWS)][-foo(-betray(COLS,--0.6 - -( x )),--TABLE[ROWS][Arya]) * destroy(x,Arya,Jon)]] : "One can not simply parse himself"
var Jon = dog
def betray(){

}
var Arya = -betray(betray(mislead(protect(protect(-bar(Sansa),COLS)),COLS,( y + Hodor ))))
var Sansa = 0.49
var Sansa = protect(-destroy(0.33,TABLE[-50][COLS] - x * -73) + -1,-0.04,-0.53)
def rule(Sansa){
	Stark += destroy(COLS)
}
def foo(dog,Hodor,x){
	if(foo(0.03,-Arya)){
	--mislead(y);
	x *= TABLE[Hodor][COLS]
};
	if(-COLS){
	Ygritte /= -protect(--880.615,TABLE[-0.67][Jon] + -400.9,-33)
} else {
	if(-601){
	if(protect(( -0.29 ) + Sansa,TABLE[-Ygritte - 1][Jon],( x ))){
	COLS
} else {

};
	mislead(betray(rule(-( ( protect(Jon - ( protect() ),34 * ( bar(690.14 + --ROWS,x / --1,Ygritte) * -Arya )) / -Hodor ) ) + bar() - 0.67,-( mislead(--( 93 ) - ( COLS ) - -ROWS - TABLE[( 0.52 )][Arya]) ) - Ygritte),( -COLS ),-foo(rule(COLS),-0.45) - ( mislead() ) - Hodor))
};
	y += betray(-mislead())
}
}
def protect(y,Hodor){
	-0.93;
	Jon *= protect(-0.87,-0.33)
}
def TABLE[-y][i] {
	if(Hodor){
	if(( bar(x - -rule(( TABLE[ROWS][Hodor - dog - 0.99] ),TABLE[bar(0.92,TABLE[-410.2402][0.11])][-mislead(-Jon)]) + -64,--560.4201) )){
	rule(-0.25,-50)
};
	-900.27;
	Sansa + --900.9494 * Hodor
} else {

}
}
def bar(y){
	y += -( 980.9065 );
	protect(( 1 ),rule(-0.4))
}
def foo(y,Jon,x){

}
def TABLE[( foo(-5 + -Arya - 72,( --42 )) )][k] {

}
var Ygritte = -( ROWS )
def mislead(y){
	x *= 890.7974;
	y *= --( ( Jon + -ROWS - Hodor ) * 1 ) + destroy();
	( ( ( ( ( -11 ) ) ) ) )
}
def TABLE[mislead(Hodor)][k] {
	-67 - 11;
	if(ROWS){

} else {
	y /= ( -ROWS );
	Sansa -= ROWS
}
}
def TABLE[TABLE[( TABLE[( ROWS )][-( betray(( -780.152 )) )] )][-Ygritte / ( Stark ) - ROWS + -ROWS]][j] {
	( COLS );
	x += -0.08
}
def foo(){
	Arya *= COLS
}
def TABLE[--180.467][i] {
	if(( ( x ) ) + 0.43 - ( -rule(( ROWS ),Ygritte) )){
	if(protect(-Sansa * -mislead(),x * -7)){
	ROWS;
	if(( bar(x,Hodor,COLS) / 1 )){
	Arya
}
} else {
	if(COLS * x / rule(--Sansa,( Stark ) + destroy(TABLE[-Arya][rule()],bar(Stark))) - 72){
	if(dog){
	-foo(COLS + betray() * TABLE[COLS - -45][y],COLS);
	if(-3){
	Jon
} else {
	if(destroy(( protect(y) ),x,-0.14)){
	TABLE[--8 * x][-bar(( -( -( Sansa ) ) + -890.0314 ) + Arya * protect(( mislead(( ROWS ) / betray(---1),( destroy() )) ),ROWS,COLS)) / bar(Ygritte * destroy(-1 / COLS / -47 * Sansa * ( destroy(-betray(93,-( ( Ygritte ) ))) ) / rule(dog,( -720.402 + Stark ) * x) * ROWS - COLS / ROWS,( COLS )) * --0.11) * ( 0.38 )]
}
}
} else {
	y /= betray(55)
}
} else {
	30;
	y *= 0.44
};
	if(( -0.33 )){
	x += ROWS;
	Sansa *= dog
};
	if(Arya){
	Ygritte += COLS
}
};
	TABLE[( ( betray(Sansa,mislead(destroy(-mislead(-0.74,-0.62) * ROWS + x,protect(protect(-bar(Arya,ROWS)))),bar(rule(-93))),protect(-0.76,rule() + betray(protect(( ( 1 - Ygritte - ( bar(( ( 0.01 ) - foo(TABLE[Hodor][-0.02 * TABLE[760.124][TABLE[( y )][-ROWS * destroy()] - 49]]) ),-betray(( Jon ),( mislead(( ( ( betray(Jon,Stark,bar(foo(-1),ROWS + TABLE[destroy(protect())][-180.191]) + -( dog / COLS )) ) ) ) + -Ygritte,-( Stark ),-0.88) )) + -COLS) ) + Sansa - ( COLS ) / -foo(ROWS + ( -1 ) + ( ROWS ),mislead(-1 * COLS,TABLE[-1 * y][-0.95],0.06) + TABLE[protect() / ( foo(COLS) )][-1]) * ( dog ) ) ) + bar(-Ygritte) + -3,-( 25 )),ROWS,---0.12) - ( -1 ))) ) )][( TABLE[betray(( Sansa ))][--820.7 / ( ( ( ( TABLE[Hodor - bar(-0.85,x,ROWS) * foo(foo(-68,( betray(--62,x,-0.88 + COLS) )),dog) * Ygritte][mislead(-960.8785)] ) ) ) )] )];
	0.84
} else {

};
	if(foo(-0.12) / betray(COLS,( Hodor ),-70)){
	dog += --( ( -( Jon ) + -86 ) - 0.1 )
} else {
	Hodor *= TABLE[x][TABLE[Hodor][86]]
}
}
assert bar(( ( ( ROWS ) ) )) : "Winter is coming"
def mislead(){
	Sansa *= -7;
	if(--0.14){
	if(bar(TABLE[foo()][--58 * ( -ROWS ) * -0.52 / ROWS - Jon],-ROWS * ( ( ( 1 ) ) ))){
	Ygritte *= -0.44 - foo(ROWS);
	Jon -= rule(TABLE[destroy(( -Jon ) - bar(dog,-( betray(( -y / ( Ygritte ) / ( -84 ) )) )))][( TABLE[ROWS][( Stark + ( -210.4 ) )] + -( ( x ) ) * -rule(-1) / dog / -1 )])
};
	if(COLS){
	if(--0.61){
	if(---98){
	Sansa += TABLE[Ygritte][-0.15];
	bar()
} else {
	( ( 1 ) );
	if(y){
	if(( y )){
	if(( ( Sansa ) )){
	if(-0.4){
	( y + foo(Sansa,Ygritte,-0.75) )
} else {
	-y / foo(--0.36 * ( ( Sansa ) ),Hodor,Hodor) * Ygritte
}
} else {
	Jon += COLS
};
	Hodor += 60 / -0.09
}
} else {
	Sansa += TABLE[foo(rule(0.78)) * --( ( ( ( -( x ) + Sansa ) ) * 220.62 - -1 ) )][Arya];
	66
}
};
	destroy();
	Jon * -0.58
}
};
	-Ygritte * 0.21 - COLS + COLS / -97
}
}
def TABLE[ROWS][i] {
	Stark *= -protect(-( ROWS ) - TABLE[29 / -Jon * TABLE[ROWS / TABLE[TABLE[Hodor][( protect(( -( -TABLE[-ROWS + -530.4138 / ( -11 )][destroy(-68)] ) ) * ( -38 ),( Jon ),Ygritte) )]][-0.25]][-24] * -COLS / ( 860.87 ) - COLS][x - ( ROWS ) + 1],-0.52,--ROWS)
}
def foo(Sansa){

}
assert rule(-( Jon ) + -x * -Arya,TABLE[ROWS][dog] - foo(Stark,-Jon)) / mislead() - ( 380.73 ) / ( ---ROWS ) + ( -790.12 ) - ( -rule(COLS) - Sansa ) - ( COLS ) : "Winter is coming"
assert 0 : "One can not simply parse himself"
def protect(Arya){
	if(850.6){

} else {
	if(-0.66){
	if(COLS + betray(-0.97,-( mislead(Ygritte,TABLE[0.16 / ROWS / TABLE[-0.01][x]][( destroy(ROWS) )]) ) * COLS) * ( TABLE[Stark][( destroy(930.6,y) )] / ( ( destroy(x,ROWS) ) ) )){
	if(-TABLE[( 0.84 )][0.45] / -rule() + ( foo() / Arya ) - -360.3095 * ( ( 0.32 ) ) + -dog - mislead(bar(( rule(1,0.18 + -( bar() )) ),Stark),-0.44 / TABLE[Hodor / Jon][Hodor]) / -0.87 + foo(protect(-foo(( -TABLE[-( Sansa )][destroy()] / ( -Stark ) ),-56,TABLE[( ( Ygritte ) / -( ( foo(ROWS,( TABLE[-Hodor][-0.06 * -1] ),TABLE[( bar(COLS) ) + -ROWS][dog]) ) ) )][69]),( ( COLS ) )) * ROWS) + Arya){
	Stark -= 19 + -ROWS * -( --43 ) - -1;
	Sansa
};
	if(COLS - mislead(ROWS)){
	-0.52;
	if(-destroy() - rule(COLS) - -ROWS){
	-ROWS
}
}
}
} else {
	y += -33
};
	x -= ( TABLE[-mislead(ROWS,mislead())][TABLE[Stark][foo(Hodor) + --0.43]] )
}
}
def rule(Arya){
	COLS
}
def betray(Hodor,y,x){
	ROWS * 860.331 + y / ( TABLE[--1][-0.23] );
	dog /= Arya
}
def mislead(Sansa){
	rule(mislead(( 37 ) + TABLE[ROWS / Jon - -y][mislead() / 77 * bar(( mislead(TABLE[-TABLE[( mislead() )][( 84 )]][Arya],foo(Arya,( ROWS ),rule(-0.86 * Stark * -10.27,COLS * COLS,protect(destroy(( 70.39 ),95,COLS),TABLE[-TABLE[-( TABLE[Jon][1] ) / ( -( destroy(TABLE[ROWS][( Stark )]) ) )][1]][Ygritte])))) ),destroy())],---0.82,dog))
}
assert ROWS : "Winter is coming"
def TABLE[-84][i] {
	( rule(TABLE[foo()][-( protect(( COLS ),bar(ROWS,ROWS),Arya) ) + destroy(-1,( bar(800.237,Ygritte) ),COLS)]) )
}
var Ygritte = Arya
def mislead(Hodor){
	if(mislead(foo(Ygritte,TABLE[mislead(-1) - -( TABLE[protect(( destroy() ))][protect(mislead(ROWS,betray(ROWS * -0.58),TABLE[-TABLE[( -30.79 )][( protect(0.54,-( mislead(dog) ),60) + x )] * 0.75][( -0.82 )]))] + ( -0.12 ) ) + -( 77 - y )][Sansa],-1),( -ROWS ) * --Sansa)){

} else {
	foo()
};
	if(--COLS){
	if(-( protect(( TABLE[TABLE[x][ROWS]][( Hodor )] )) ) * ( 0.07 )){
	Stark /= bar(Stark,destroy(( ROWS )),( dog ));
	if(Ygritte){
	35;
	if(Arya / COLS){
	if(( bar(580.247,foo(foo(( -Ygritte ),COLS + 600.6283) * 0.8,Stark,( TABLE[TABLE[dog][0.75]][bar(COLS) - Stark] - ( 74 / -( Ygritte ) + 55 ) ))) )){
	630.4 - y
};
	x += foo();
	-TABLE[-COLS][--bar(foo(-0.4 * Sansa,bar(Arya) + Hodor,-protect(-0.05,TABLE[ROWS - -ROWS][-betray(destroy(-( ROWS ),-COLS,bar(-( -91 ),TABLE[betray(100 / COLS)][0.68],-700.84)))]))) * ( protect(Sansa / TABLE[Arya][destroy(protect(COLS))]) )]
} else {
	if(( 20.21 )){
	dog
}
}
}
} else {
	Jon *= COLS;
	if(x){

} else {
	Stark /= ROWS
}
};
	TABLE[0.39][( dog )];
	if(-( Jon )){
	Sansa *= ( destroy() )
}
} else {

}
}
var Stark = COLS
assert protect(-COLS) : "Nothing burns like the cold."
def TABLE[destroy(( ( -1 ) ),mislead(( 1 )))][i] {
	TABLE[( -TABLE[( ( Ygritte + Hodor ) )][( -34 )] * bar(Hodor) )][-0.32];
	-62
}
def rule(x){
	Ygritte -= dog;
	( Stark ) / -12 - bar(Arya,( COLS )) + bar(-0.36) / ( ( bar(-Arya) ) )
}
def betray(){
	if(rule(-( -88 - -0.45 - protect(-protect(--COLS,-0.46)) ) * --41,Hodor,TABLE[Stark][betray(bar(TABLE[( -17 )][Stark] / Jon))])){
	Sansa
};
	if(-0.81){
	dog += mislead(destroy())
} else {
	( -1 ) / COLS
}
}
var Ygritte = -Hodor * dog * --0.88
def betray(Arya){
	if(Ygritte){

} else {
	Sansa /= Sansa;
	if(TABLE[( COLS )][-0.72] - foo(--Arya * Hodor * -( ( Jon ) ),rule(),-9)){

} else {
	Sansa -= TABLE[TABLE[-foo(Ygritte,-1) / dog][destroy(mislead(--0.24),-( -COLS ) - bar(-TABLE[Arya][COLS] * -( COLS ),-6))]][-Ygritte]
}
}
}
assert Ygritte + -protect(( Hodor ) / ---( ( ( -0.48 + mislead(--0.35,Hodor) * protect(( Stark ),---9 + TABLE[-x + 370.1627][ROWS]) * -( ROWS ) ) ) ),( ( foo(betray(-26,mislead(( dog ))),-720.757 / mislead(),-TABLE[TABLE[ROWS - Hodor + 500.623 + mislead(dog * COLS,---53,-23)][91]][-40]) ) )) + betray(1) - Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 0.35
def rule(){

}
var Sansa = COLS + -( -1 )
def TABLE[-( betray(ROWS) )][i] {
	Ygritte += destroy(-0.21,-74) + ( ( -TABLE[COLS][--foo(Arya,( -bar() ))] ) )
}
def TABLE[-6][i] {
	ROWS;
	( foo(( Hodor ),-ROWS,( 0.23 )) )
}
def TABLE[Ygritte][k] {
	if(rule(Sansa)){

};
	Stark *= mislead(betray(-0.21 * Sansa),( TABLE[730.59][( ROWS )] + 1 ))
}
def foo(Stark,dog){

}
def TABLE[bar(destroy(Jon,betray(dog)),-56,( ( Hodor ) ))][k] {

}
var y = foo()
assert ( -COLS ) : "Fear cuts deeper than swords."
def bar(dog,Sansa){
	Sansa -= COLS
}
def betray(y,Sansa,Arya){

}
var Hodor = -83
def TABLE[( ( 8 ) )][i] {
	if(-TABLE[-betray(( Stark ) * foo(y),( 60 - Stark ))][Arya]){
	if(Jon){
	Sansa /= protect();
	if(foo(-50.5154 / ( -( ( TABLE[x][29] ) ) ),--x / 20)){
	TABLE[-( -680.5 + protect(protect(),( ( TABLE[390.085][-protect(-0.48,730.839)] ) ),protect()) )][TABLE[TABLE[ROWS][COLS * ROWS]][-0.28]];
	dog;
	ROWS
}
} else {
	dog += ---( 61 ) - ( -ROWS - COLS - -protect(( ( Hodor ) )) - Arya - -( Arya ) + ( dog ) / 710.124 )
};
	if(-COLS){
	Sansa *= ( dog ) + -Ygritte
};
	Ygritte
};
	Stark
}
def TABLE[( rule(destroy(-( Sansa + y ))) )][k] {
	if(-TABLE[x + foo(COLS * 0.52 - destroy(foo(0.2,ROWS)))][Jon]){
	( foo(dog,bar(x * Hodor,protect(-( ( -77 ) ),( Arya )))) )
} else {
	Jon += dog;
	( -protect(-( foo(--TABLE[destroy(--Hodor + -COLS - Arya,( ( x ) )) * -1 * ( -ROWS ) * betray()][-370.133] - 49 / ( y ),Sansa,rule(-100 - y,( -1 ) + ROWS)) )) )
}
}
def betray(Hodor){
	dog /= ( ( --( --foo(Sansa) - ( 1 ) ) ) );
	-Hodor / destroy(-x)
}
def TABLE[--TABLE[Hodor][( -23 )]][j] {
	if(---TABLE[( TABLE[bar(( -TABLE[Stark][Jon / --0.78 * TABLE[bar(-COLS)][( -rule(--COLS) )]] + TABLE[0.77][-( ROWS )] ),COLS) / foo(-0.69) + -y][-1] )][protect()]){

};
	Sansa += COLS;
	if(70){

} else {
	if(ROWS + rule(( -1 - -TABLE[destroy(( x - Jon ),--( ( ( TABLE[-( TABLE[ROWS][( ( -rule(COLS,Jon) ) - -0.94 ) * Sansa] )][( 380.63 ) - COLS] ) ) ) * ( -0.66 ) * foo(Hodor - 51,protect(bar(-0.63),destroy(protect(Arya,-Arya,ROWS)))),( ( 0.24 ) * 0.56 + ( 8 ) ) + Arya)][ROWS] ),---1,protect(Hodor))){
	if(bar(( ROWS * ( Arya ) ),TABLE[COLS][410.9643],Ygritte) + destroy(protect(-betray(Jon + TABLE[Ygritte][0.8])) - ROWS)){
	Sansa *= -1;
	-ROWS;
	if(( bar(66) )){
	Sansa -= 730.26;
	--COLS - bar() / ( COLS )
}
} else {
	COLS;
	if(-dog){

}
};
	Jon -= ( Arya )
} else {
	COLS
};
	Jon += Sansa
}
}
var Arya = -0.61
def destroy(Ygritte,Arya){
	( ( rule(( --Sansa / -41 )) ) )
}
var x = dog
def TABLE[TABLE[bar() * Ygritte][-0.82 / Stark]][i] {
	if(Ygritte + -4){

}
}
assert protect(Ygritte) + Arya * protect(x) - -80.3 / protect(-1,38 / mislead(40.228,-27)) + destroy(COLS,foo(-Ygritte * y,bar(),( -( ( Hodor ) ) )) / --protect(Hodor,( ( COLS ) )) * COLS) : "One can not simply parse himself"
var Sansa = ( -96 )
var Jon = ( COLS )
assert 0.87 : "One can not simply parse himself"
def bar(x,Stark){
	y += ( -----Ygritte + foo(ROWS) )
}
var Sansa = foo()
def TABLE[-32][i] {

}
var Arya = COLS
assert -Stark : "Nothing burns like the cold."
def destroy(Hodor,Jon,Arya){
	ROWS + COLS;
	if(--0.36 / TABLE[rule(59,-TABLE[-450.5378][Hodor + foo()]) / -protect(COLS,-63 + mislead(--730.0614 - Jon,( Jon )) / Arya) + ( ( TABLE[Arya][Jon] ) )][betray(-Ygritte - -0.28 - TABLE[( ( COLS ) )][-ROWS - ROWS] - ---49 / ROWS * 94,( ( ROWS ) ),Arya * ( 360.3 ))] + -1){
	Sansa;
	Arya -= 0.56
}
}
var Hodor = -destroy(destroy(destroy(( rule(0.42) / -( ( -( Ygritte ) ) ) - ( ( betray(COLS - dog,1) - mislead(-destroy(TABLE[( 0.33 )][( 41 / x )] + TABLE[betray(-COLS,TABLE[destroy(Sansa + 29,-Stark)][-COLS])][( Hodor + 0.72 ) * -( ( ( ( bar() ) ) ) ) / ROWS / -protect(63,TABLE[y][Hodor]) * -Arya])) ) ) ) + foo(( x ),destroy()) + 0.52 + -580.986 + foo(),-Stark - Jon),Arya / ( 48 - TABLE[dog][200.647 / foo(--( ROWS / -88 ))] )),( 1 ))
def TABLE[COLS + ( destroy(Ygritte / -( mislead() ),-81) ) + dog][k] {
	TABLE[bar(--rule(dog,TABLE[-ROWS][( 0.35 )]))][---( -( --dog ) )];
	if(Ygritte){
	if(( COLS )){
	if(( COLS )){
	if(---mislead() * -foo(( ( bar(( protect(( -( mislead(-COLS) ) ),--foo(-( ( 62 ) ))) )) ) ),0.18 / -Sansa,protect(COLS,x,ROWS))){
	if(Sansa){
	if(COLS){
	if(350.143){
	if(y){
	protect(destroy(protect(-1 / foo(COLS - ROWS,COLS))))
}
} else {
	y
};
	Jon -= ( Sansa )
} else {
	if(( bar(Stark,( bar(protect(( ( TABLE[54][COLS] ) ),ROWS,-bar(-betray(),Ygritte))) - Stark ),TABLE[-970.8027][protect()]) ) - ( -60.707 )){
	Jon -= Ygritte;
	Ygritte /= -( mislead(bar(betray(-COLS),Ygritte),-x * -1 * betray(ROWS) / -ROWS + Arya / ROWS * -62 / x) );
	( Jon )
}
}
} else {
	Ygritte *= ( destroy(1) );
	mislead(0.29)
};
	( ROWS ) / -( ( 0.19 ) ) - Jon - -protect(COLS) - Jon;
	Ygritte -= ( -TABLE[mislead(foo(),Ygritte)][-( bar(ROWS) )] )
} else {
	if(COLS){
	rule(( 0.13 )) * -ROWS
} else {
	if(-Sansa){
	if(( betray(-0.9) )){
	-ROWS
};
	Stark;
	-740.271
};
	if(Stark - protect(foo(--480.767,mislead()),destroy(-68,Jon) + COLS,-x * Arya * TABLE[-y][490.1 - betray()]) * ( ( ( ( destroy() ) ) ) )){
	Hodor += ( TABLE[betray(ROWS,( -1 * ( ( 1 + foo(-( ROWS ) / -protect(destroy(),--20),( ( ( ( ( ROWS ) ) ) ) )) - -COLS / Ygritte - -15 + y ) * --67 ) ) + Hodor,COLS)][-x] );
	Sansa *= protect(-1,( -Sansa ),betray(-0.23));
	if(( ( -( Arya ) ) * foo(Arya,600.7,1 + ( -( destroy(0.39,-0.11,Ygritte) ) / -42 ) * ( Arya + ( TABLE[y][Stark / -Jon - ( -destroy(TABLE[protect(Jon / ( ( -betray(Sansa,--0.09) ) ))][Arya]) )] / ( ( Hodor ) ) ) )) )){
	if(-Stark){
	if(570.641){
	Sansa * ( y )
} else {
	if(( Arya )){
	Stark /= ( betray(mislead(ROWS,--TABLE[( Arya )][( TABLE[COLS][--protect(( foo(0.45,COLS,( ( dog ) )) * -1 ))] + -0.52 )],bar(0.13)) + ( foo(protect(protect(-COLS,-1 + Hodor),TABLE[COLS][foo()]) * destroy(( -( -Stark ) ) / ( 450.1 ),-18)) ),ROWS - COLS) )
}
};
	Stark += dog
} else {
	if(--Sansa){

};
	Jon *= mislead(Stark,-37);
	if(-( ( protect(-TABLE[-3][destroy(mislead())],-0.38) * TABLE[bar()][-( -0.63 )] ) )){
	ROWS;
	y -= Arya;
	if(( Jon )){
	-54;
	y += mislead()
}
}
}
} else {
	dog += ( mislead(( destroy(betray() - ( -ROWS )) * TABLE[Jon][---0.4] ),--foo(--50)) )
}
};
	if(Sansa){
	dog += y
} else {
	protect(-33);
	-0.82;
	Sansa += x
}
}
};
	if(85){
	Jon *= Stark / ROWS;
	dog
} else {
	if(destroy(TABLE[bar(Jon)][( -x )])){
	Jon /= rule(-360.2,dog,betray())
};
	( -ROWS * destroy(1,-1000.04) ) + ROWS
}
} else {
	Ygritte *= 0.51;
	Stark *= x;
	y -= x
};
	-0.48
}
};
	--1
}
def foo(Jon,Ygritte){
	-rule(mislead(-60),TABLE[( bar(( dog ),-bar()) )][0.05])
}
assert Sansa : "Nothing burns like the cold."
def foo(){

}
assert -COLS : "Nothing burns like the cold."
assert dog : "Fear cuts deeper than swords."
def TABLE[1][k] {
	Hodor -= ( COLS ) * -0.61
}
def TABLE[-260.66][j] {
	y += ( ROWS );
	Arya /= -1
}
assert dog : "Nothing burns like the cold."
def TABLE[-( x / -0.63 )][k] {
	dog;
	if(-0.62){
	Arya += 70
} else {
	if(-mislead(( Hodor )) / COLS){
	if(-1){

} else {
	if(Sansa){
	protect(-0.17,TABLE[-Sansa][990.83]);
	if(-COLS){

};
	( -betray(TABLE[-COLS][-97],-x,---mislead(-TABLE[COLS][destroy(bar(78,( destroy(1) ),protect(( ( 22 * --betray(ROWS) / -COLS ) )) + --( -( -Hodor ) ) / Stark))],Jon)) )
};
	if(-Hodor){
	Ygritte;
	y -= Sansa;
	( -99 )
} else {

};
	23
};
	( -( dog ) * -( -foo(ROWS,Ygritte) ) );
	Stark *= betray(-COLS,-Arya)
}
};
	Jon += rule(-0.79,ROWS)
}
def rule(){

}
assert ( TABLE[destroy(Ygritte,---( 26 / ( x * -0.45 ) - --destroy(-foo(betray(1,COLS - ROWS) + ( COLS ),COLS),-TABLE[x * ( TABLE[Arya][y] )][Stark + Hodor] / -x) ))][-COLS] - Sansa ) : "Fear cuts deeper than swords."
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(y,Sansa,y){

}
def TABLE[-0.97][k] {
	Sansa += -0.02 / bar(betray(( betray() ) * TABLE[( betray(x + rule(TABLE[0.38][x],-10.2)) + destroy(( 80 / -50.464 ),-930.781,Stark) )][( -1 * 0.02 * dog )],27),-1,--0.88 - foo(--TABLE[--COLS * Hodor][Arya] - bar() / 0.25 * ( Sansa ),COLS,( ( -y ) ) + COLS))
}
def betray(Arya,Stark,Arya){
	if(-betray() + y){
	Arya /= Sansa
};
	Jon /= COLS
}
def protect(){
	if(-( bar(ROWS) )){
	dog *= y;
	if(-destroy(( Stark ))){

}
} else {
	-52;
	0.52
};
	x *= COLS;
	if(mislead()){
	Hodor /= TABLE[TABLE[-( 63 )][53 / -1 / Ygritte]][y];
	Arya += ( 1 )
}
}
def betray(Ygritte,Jon,dog){
	if(( ( -1 ) )){
	170.56;
	Sansa -= COLS
}
}
var Sansa = ( ( COLS ) )
def TABLE[destroy(ROWS,dog)][k] {
	Hodor -= -( ( ( -0.61 ) ) ) * -Arya;
	if(-0.33){
	x -= 0.54
} else {
	if(---dog - TABLE[rule(ROWS,( -bar() ))][mislead(betray(Arya,--( mislead() )),foo(x,( 380.151 )))]){
	rule(( COLS ),y)
} else {
	Stark;
	protect()
};
	x += --Ygritte
};
	( ( --230.7708 ) )
}
var Stark = COLS
assert TABLE[destroy()][COLS] : "Winter is coming"
def TABLE[Stark][k] {
	Hodor *= mislead(y - 0.77,destroy(dog,Jon),x)
}
def protect(dog){
	Ygritte += Jon;
	Jon /= TABLE[rule(( ROWS )) * -0.67 * TABLE[foo(--betray() / rule(),ROWS,ROWS)][TABLE[COLS][Arya + TABLE[( -ROWS )][( ( -31 ) / betray(-Hodor * Arya,( rule() )) )] - foo(( -0.52 ),-Sansa) / Hodor]]][x];
	Stark
}
def TABLE[mislead(--TABLE[Stark][ROWS]) - ( ( 0.12 + ( foo() ) ) ) * dog][i] {
	bar(-340.37,Arya,-Hodor)
}
assert 46 : "One can not simply parse himself"
def TABLE[Jon][k] {
	Ygritte -= ( Stark );
	( COLS );
	( -Stark )
}
def betray(Arya,Ygritte){
	Jon /= -protect(( TABLE[TABLE[( -rule(-( destroy(protect(( foo(( betray(foo()) )) ))) ) * --ROWS / foo(( Stark ),( 0.31 / destroy(( -37 ),--bar(TABLE[bar(-990.5289)][COLS],TABLE[rule(( x ),29)][Stark],ROWS) + -66) + --COLS ),ROWS) + ROWS,-27) )][-180.4]][--600.69] ),Ygritte) - --6 + ROWS
}
def protect(Arya){
	dog *= TABLE[Stark][ROWS] * protect(140.8074);
	if(( Jon * ( Sansa ) )){
	if(-foo()){
	if(betray(TABLE[Hodor][( -( -foo(-1) / -40.05 + ( -35 ) + -16 - ( ROWS ) ) - --1 - y )],-590.1,Jon - 1)){

};
	-Sansa
} else {
	dog /= TABLE[Jon][--Jon];
	Ygritte
};
	if(-----Jon * ---911 - betray() * ( -Sansa ) * destroy(---0.77 - Hodor)){

} else {
	( ( -betray(28,( COLS )) ) );
	if(x){
	COLS
} else {
	if(TABLE[( betray(-( Sansa ) * -0.86,( TABLE[0.59][COLS] ),-180.9251) )][Jon]){

};
	if(( 0.11 )){
	dog += 0.62
}
}
};
	if(x){
	x /= --( -28 );
	Sansa;
	Arya += ROWS
} else {
	Stark += dog;
	if(TABLE[0.48][0.43]){

} else {
	dog *= mislead() / bar(0.68)
}
}
} else {

}
}
def TABLE[betray(-0.49,ROWS)][k] {

}
var y = ( COLS )
var Arya = -TABLE[-( -Ygritte ) - -240.399][--730.998]
def mislead(Sansa){
	x;
	Arya *= -0.98;
	x -= --0.34
}
var x = Sansa
assert y : "What do we say to the Lord of Death?"
var y = ROWS
def TABLE[-mislead(( COLS ),bar(( ROWS ),ROWS),ROWS) / Stark][j] {
	TABLE[1][TABLE[Ygritte][-( COLS ) + ( 1 + ( Stark ) * destroy(Hodor) )] / TABLE[ROWS][Hodor]];
	if(-0.35){
	-0.89 - destroy() + -COLS;
	COLS
} else {
	Ygritte += -ROWS + COLS / ROWS - -destroy(COLS);
	--y;
	( -510.86 )
}
}
assert ( ROWS ) + -800.49 + Ygritte : "Nothing burns like the cold."
assert Arya : "Fear cuts deeper than swords."
var Ygritte = ROWS
def TABLE[destroy(rule(protect(ROWS,TABLE[( 280.1 )][Jon]),rule(860.1392,-COLS) - protect(-COLS - Stark),rule(COLS,-Jon,( bar(x,-bar(bar(( protect(Stark) ),COLS,-1 * -y),28),Arya * ( Sansa )) ))),dog) - -y][i] {
	if(-protect(x + rule(Ygritte),---mislead(TABLE[TABLE[-destroy()][Stark] + ROWS][protect(Jon + 72)]) + rule(destroy(TABLE[dog][destroy(1 / TABLE[( Arya )][COLS] * -ROWS,( 1 / dog - TABLE[COLS - bar(( ( -86 ) ),( bar(TABLE[TABLE[bar(mislead(( -33 ),73,( rule() )),ROWS / -15) * bar()][y * 190.31 - COLS]][Hodor],dog,betray(foo(Jon,-TABLE[( TABLE[Arya][( -foo(( ( Hodor ) ) + Ygritte) )] )][( -TABLE[Arya][Sansa] )]),68,x)) + COLS ) - ( -1 ))][-Sansa] ))],-( dog )),0.19))){
	-0.89 * dog
};
	if(COLS){
	if(0.49){
	dog += -1
} else {
	Sansa + ( TABLE[( y )][betray(( ( ( COLS ) ) + rule(0.86,COLS * -y - ( Sansa )) ))] / destroy(( bar(1,-rule(-Ygritte,-1,ROWS * protect(bar())) * -0.14) )) ) / TABLE[--( destroy(-ROWS) + ( ( dog ) ) )][rule(-y / ( -x ),Ygritte)];
	if(-( COLS )){
	if(foo(( ( -711 ) ) - TABLE[-Stark][Sansa + betray(mislead(--0.73 + rule(-1) - 0.9),Arya + -ROWS / COLS / TABLE[y + y][Sansa] - 180.5)],COLS,( Hodor ))){
	---rule(bar(destroy(TABLE[protect()][-TABLE[--( ROWS )][( 1 )] * -1]),ROWS)) / betray(( TABLE[--1 - 960.79][mislead(( ( 0.3 ) )) - ( -Sansa ) + TABLE[Arya][-370.538]] ),Jon);
	-destroy(ROWS) - -760.3473;
	Sansa /= -( -1 )
} else {
	if(( mislead(0.19,( ROWS ),-( ( 38 ) ) * 740.445) )){
	y /= ( -34 );
	if(( -mislead(0.35,-bar(( ( Arya ) ),-550.76 * 710.6454) * -rule(x,ROWS) / 0.75) ) * foo(protect(-bar(-( COLS ) + ( ( -( TABLE[protect(0.24,protect(COLS),destroy(mislead()))][Ygritte - -80] * betray(-ROWS) ) - 0.08 ) )),TABLE[protect(bar(-0.93))][TABLE[-35][x]]),protect(protect(x),-mislead(TABLE[( Stark * Stark )][-( Hodor )],ROWS) / 11,0.97))){
	Ygritte -= COLS;
	Jon -= COLS
} else {

}
}
}
} else {
	-destroy(rule(y + protect(-( ( foo(65,-protect(1,rule()),betray(betray(-protect(-0.07,Arya),-TABLE[( -300.43 ) * -ROWS - destroy()][ROWS]),( -( -( --betray() - -0.96 ) ) ),-93)) ) ) / 75,mislead(COLS),betray(TABLE[Stark][-COLS])),( betray() ),( ( Jon ) )),COLS);
	-420.88;
	if(( -1 )){
	Stark += 120.03;
	protect(COLS,( ( y ) ))
}
};
	rule(-190.4,( TABLE[( -protect(TABLE[Ygritte][ROWS * TABLE[( rule(dog,-COLS) )][( destroy(-1,1) )]],foo(( -85 ),( Stark - Sansa ) + Hodor,Hodor)) )][COLS / x] - y ))
}
} else {
	rule(foo(( 0.21 )) - bar(y,Jon) / ( 1 ));
	if(ROWS){

} else {
	if(TABLE[360.6457][-TABLE[TABLE[-protect()][destroy(ROWS,-79)]][destroy(( ( ( -ROWS ) ) ),-foo(( ( ( ( Stark ) ) ) ) - Ygritte,61 + TABLE[49][betray(Arya - -44,TABLE[rule(TABLE[Stark][( -0.69 ) * ( --1 )] * TABLE[x][-0.15])][--( bar(0.69 / ( Hodor )) ) * ( -0.06 )],foo(-COLS + rule(x,( Jon ) / 87 + -1,( ROWS ))))]) - dog)]]){
	Sansa;
	Ygritte -= ROWS
} else {
	( protect(-COLS) )
};
	if(betray()){

};
	Sansa *= COLS
}
}
}
var Jon = ( 0.54 )
var Jon = 0.42
def TABLE[( foo(Jon) )][j] {
	Jon /= -0.31 * COLS;
	if(Arya){
	if(-( ROWS - rule(0.35) )){
	if(-destroy(-34)){
	if(98){
	-COLS;
	if(--Ygritte + ( ( -bar(0.48,-dog) ) )){
	( destroy(-0.61,--( x ),( ROWS - -0.94 - ( ( ( x ) ) ) )) );
	x *= -130.294
}
} else {
	Arya /= ROWS - TABLE[( bar() )][( ( 710.76 ) ) * ( 0.11 ) / ( TABLE[TABLE[TABLE[21][ROWS]][-0.96]][( -67 ) - ( 880.01 )] ) - protect()];
	20
};
	Stark *= Stark;
	Ygritte /= protect(ROWS,Ygritte) / TABLE[TABLE[dog][( 74 )]][rule()]
};
	Arya *= Stark
} else {
	Arya /= ( mislead(Ygritte,-x / COLS) );
	Jon *= ROWS
}
};
	Ygritte *= ROWS
}
var Sansa = bar(-100)
def foo(x){
	Sansa += mislead() * Arya;
	if(TABLE[COLS][Stark / ( ROWS * ( 40 ) )]){
	-( Stark ) / Stark / COLS
} else {
	bar(foo(foo(( ( ROWS ) ),--7,Sansa)));
	x *= -foo(--Sansa,TABLE[( foo(-( COLS ) + TABLE[0.63][foo()],ROWS) )][-COLS])
};
	if(( ( 0.85 + COLS ) )){
	if(Arya){
	( bar() )
} else {
	( -0.61 );
	Jon;
	Stark *= betray()
}
}
}
def TABLE[y][i] {
	y -= ( Jon );
	if(( betray(COLS,-TABLE[0.76][COLS]) )){
	if(-390.3 * rule(y)){
	if(-Hodor * destroy(Sansa,dog,bar(Jon,-60))){

}
};
	dog *= COLS
}
}
def TABLE[90.802][j] {

}
assert destroy(0.42,destroy(),( x )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo() - rule(TABLE[-bar(mislead(mislead(TABLE[Jon + betray()][foo()],dog),-0.59),betray(mislead(Arya)))][( betray(TABLE[--COLS][Sansa],--TABLE[-31 / ( ( y ) )][COLS],Hodor / y) )]) - -( Ygritte ) : "What do we say to the Lord of Death?"
